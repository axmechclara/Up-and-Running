"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[750],{9044:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-9f469928",path:"/mmonit/",title:"M/Monit System Monitoring",lang:"en-US",frontmatter:{lang:"en-US",title:"M/Monit System Monitoring",description:"Monit is a small popular Open Source utility for managing and monitoring Unix systems. M/Monit builds on Monit's capabilities and provides monitoring and management of all your Monit enabled hosts via a modern, clean and well designed user interface which also works on mobile devices."},excerpt:"",headers:[{level:3,title:"M/Monit",slug:"m-monit",children:[]},{level:3,title:"Monit",slug:"monit",children:[]},{level:2,title:"Configuration files",slug:"configuration-files",children:[]},{level:2,title:"Prerequisites",slug:"prerequisites",children:[]},{level:2,title:"M/Monit Installation",slug:"m-monit-installation",children:[{level:3,title:"Enable TLS",slug:"enable-tls",children:[]},{level:3,title:"Add M/Monit to systemd",slug:"add-m-monit-to-systemd",children:[]}]},{level:2,title:"Monit Installation",slug:"monit-installation",children:[{level:3,title:"TLS/SSL settings",slug:"tls-ssl-settings",children:[]}]},{level:2,title:"Configuration",slug:"configuration",children:[]},{level:2,title:"Firewall settings",slug:"firewall-settings",children:[]},{level:2,title:"M/Monit behind NGINX Proxy",slug:"m-monit-behind-nginx-proxy",children:[]},{level:2,title:"Slack notifications",slug:"slack-notifications",children:[]},{level:2,title:"Upgrading",slug:"upgrading",children:[]},{level:2,title:"Command-line",slug:"command-line",children:[]},{level:2,title:"Troubleshooting",slug:"troubleshooting",children:[]},{level:2,title:"Enterprise solutions",slug:"enterprise-solutions",children:[{level:3,title:"M/Monit Enterprise",slug:"m-monit-enterprise",children:[]}]}],filePathRelative:"mmonit/README.md",git:{updatedTime:1631032836e3,contributors:[{name:"Libellux",email:"fredrik@libellux.com",commits:19}]}}},5114:(n,e,s)=>{s.r(e),s.d(e,{default:()=>En});var a=s(6252);const t=(0,a._)("h1",{id:"m-monit-system-monitoring",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#m-monit-system-monitoring","aria-hidden":"true"},"#"),(0,a.Uk)(" M/Monit System Monitoring")],-1),o=(0,a._)("p",null,"Monit is a small popular Open Source utility for managing and monitoring Unix systems. M/Monit builds on Monit's capabilities and provides monitoring and management of all your Monit enabled hosts via a modern, clean and well designed user interface which also works on mobile devices.",-1),l={href:"https://mmonit.com/",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Uk)("M/Monit website"),r=(0,a.Uk)(),p={href:"https://mmonit.com/monit/",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("Monit website"),u=(0,a.Uk)(),d={href:"https://bitbucket.org/tildeslash/monit/src/master/",target:"_blank",rel:"noopener noreferrer"},m=(0,a.Uk)("Git"),b=(0,a.uE)('<p>Setup and configuration have been tested on following operating systems:</p><h3 id="m-monit" tabindex="-1"><a class="header-anchor" href="#m-monit" aria-hidden="true">#</a> M/Monit</h3><ul><li>Ubuntu- 16.04, 18.04, 20.04 (Focal Fossa)</li><li>M/Monit- 3.6.0 -&gt; 3.7.5</li></ul><h3 id="monit" tabindex="-1"><a class="header-anchor" href="#monit" aria-hidden="true">#</a> Monit</h3><ul><li>Ubuntu- 16.04, 18.04, 20.04</li><li>Monit- 5.16.0 -&gt; 5.27.0</li></ul>',5),g={href:"https://ko-fi.com/B0B31BJU3",target:"_blank",rel:"noopener noreferrer"},h=(0,a._)("img",{src:"https://www.ko-fi.com/img/githubbutton_sm.svg",alt:"ko-fi"},null,-1),k=(0,a._)("div",{class:"custom-container warning"},[(0,a._)("p",{class:"custom-container-title"},"WARNING"),(0,a._)("p",null,"M/Monit is a non-free software to montior and manage all Monit enabled hosts. 30 days free trial.")],-1),v=(0,a._)("h2",{id:"configuration-files",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#configuration-files","aria-hidden":"true"},"#"),(0,a.Uk)(" Configuration files")],-1),f={href:"https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/mmonit/config/server.xml",target:"_blank",rel:"noopener noreferrer"},x=(0,a.Uk)("server.xml"),w={href:"https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/mmonit/config/monitrc",target:"_blank",rel:"noopener noreferrer"},M=(0,a.Uk)("monitrc"),y=(0,a.uE)('<h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h2><p>Dependancies when building or upgrading Monit from source.</p><ul><li><code>zlib1g-dev</code></li><li><code>libssl-dev</code></li><li><code>libpam0g-dev</code></li><li><code>ruby-full</code> (optional)</li></ul><h2 id="m-monit-installation" tabindex="-1"><a class="header-anchor" href="#m-monit-installation" aria-hidden="true">#</a> M/Monit Installation</h2>',4),S=(0,a.Uk)("For additional information see reference "),_={href:"https://mmonit.com/documentation/mmonit_manual.pdf",target:"_blank",rel:"noopener noreferrer"},q=(0,a.Uk)("M/Monit documentation"),U=(0,a.Uk)("."),E=(0,a.Uk)("To download the latest version of M/Monit visit the "),A={href:"https://mmonit.com/download/",target:"_blank",rel:"noopener noreferrer"},$=(0,a.Uk)("official website"),T=(0,a.Uk)(". Continue to extract the file and move it to "),L=(0,a._)("code",null,"/usr/local/mmonit/",-1),C=(0,a.Uk)("."),R=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ wget https://mmonit.com/dist/mmonit-3.7.5-linux-x64.tar.gz\nserver@ubuntu:~$ tar -zxvf mmonit-3.7.5-linux-x64.tar.gz\nserver@ubuntu:~$ rm mmonit-3.7.5-linux-x64.tar.gz\nserver@ubuntu:~$ sudo mv mmonit-3.7.5/ /usr/local/mmonit/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Now you can visit M/Monit at <code>http://192.168.0.1:8080</code> if executing the command <code>sudo ./mmonit</code> from <code>/usr/local/mmonit-3.7.5/bin/</code> (Dont forget to check <a href="#firewall-settings">Firewall settings</a>). However, we strongly recommend to run M/Monit with TLS support.</p><h3 id="enable-tls" tabindex="-1"><a class="header-anchor" href="#enable-tls" aria-hidden="true">#</a> Enable TLS</h3><p>To enable M/Monit to run with TLS comment out the port 8080 connector and uncomment the SSL/TLS connector to listen on port 8443. Proceed to update the host section and define the server IP address along with the certificate path.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo nano /usr/local/mmonit/conf/server.xml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>        <span class="token comment">&lt;!--\n        &lt;Connector address=&quot;*&quot; port=&quot;8080&quot; processors=&quot;10&quot; /&gt;\n        --&gt;</span>\n\n        <span class="token comment">&lt;!-- Define a SSL/TLS HTTP/1.1 Connector on port 8443 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https<span class="token punctuation">&quot;</span></span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8443<span class="token punctuation">&quot;</span></span> <span class="token attr-name">processors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">secure</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n        <span class="token comment">&lt;!--\n            Define the default virtual host which name must match the\n            Engine defaultHost attribute\n        --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Host</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>localhost<span class="token punctuation">&quot;</span></span> <span class="token attr-name">appBase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.<span class="token punctuation">&quot;</span></span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>192.168.0.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">certificate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>conf/mmonit.pem<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="add-m-monit-to-systemd" tabindex="-1"><a class="header-anchor" href="#add-m-monit-to-systemd" aria-hidden="true">#</a> Add M/Monit to systemd</h3><p>To simplify the process to start and stop M/Monit add it to the systemd. First create a mmonit.service file, paste the below and save.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo nano /etc/systemd/system/mmonit.service\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>\nDescription <span class="token operator">=</span> Easy, proactive monitoring of Unix systems, network and cloud services\nAfter <span class="token operator">=</span> network.target\n<span class="token assign-left variable">Documentation</span><span class="token operator">=</span> https://mmonit.com/documentation/ \n\n<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>\n<span class="token assign-left variable">Type</span><span class="token operator">=</span>simple\n<span class="token assign-left variable">KillMode</span><span class="token operator">=</span>process\nExecStart <span class="token operator">=</span> /usr/local/mmonit/bin/mmonit -i\nExecStop <span class="token operator">=</span> /usr/local/mmonit/bin/mmonit stop\nPIDFile <span class="token operator">=</span> /usr/local/mmonit/logs/mmonit.pid\nRestart <span class="token operator">=</span> on-abnormal\n\n<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>\nWantedBy <span class="token operator">=</span> multi-user.target\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Next reload the systemd daemon, enable our newly configured M/Monit service and then start it.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo systemctl daemon-reload\nserver@ubuntu:~$ sudo systemctl enable mmonit\nserver@ubuntu:~$ sudo systemctl start mmonit\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Go to your browser and visit <code>https://192.168.0.1:8443</code>. Login using the default credentials user <code>admin</code> with the default password <code>swordfish</code>. Click the <strong>Admin</strong> tab, select <strong>Users</strong> and edit (default admin accout) or add a new user. Then grant administration privileges to overwrite the default credentials.</p>',13),H=["src"],W=(0,a.uE)('<h2 id="monit-installation" tabindex="-1"><a class="header-anchor" href="#monit-installation" aria-hidden="true">#</a> Monit Installation</h2><p>First install the PAM development package to enable Pluggable Authentication Modules (PAM) support.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ sudo apt-get install libpam0g-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Next install the latest version of Monit as an agent for M/Monit enter the commands below.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ wget https://bitbucket.org/tildeslash/monit/downloads/monit-5.27.0.tar.gz\nclient@ubuntu:~$ tar -zxvf monit-5.27.0.tar.gz\nclient@ubuntu:~$ cd monit-5.27.0/\nclient@ubuntu:~$ sudo ./configure\nclient@ubuntu:~$ sudo make &amp;&amp; sudo make install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="tls-ssl-settings" tabindex="-1"><a class="header-anchor" href="#tls-ssl-settings" aria-hidden="true">#</a> TLS/SSL settings</h3><p>Create a TLS certificate for Monit to enable secure transmission to M/Monit.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ sudo openssl req -new -newkey rsa:2048 -x509 -days 730 -nodes -out /etc/monit/monit.pem -keyout /etc/monit/monit.pem\nclient@ubuntu:~$ sudo chmod 700 /etc/monit/monit.pem\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>Copy the default Monit configuration file and create an backup.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ sudo cp monitrc /usr/local/etc/\nclient@ubuntu:~$ cd /usr/local/etc\nclient@ubuntu:~$ sudo cp monitrc monitrc_bak\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Next edit the Monit configuration file to enable communication with M/Monit over TLS/SSL.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ sudo nano monitrc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">## Set global SSL options (just most common options showed, see manual for</span>\n<span class="token comment">## full list).</span>\n<span class="token comment">#</span>\n<span class="token builtin class-name">set</span> ssl <span class="token punctuation">{</span>\n     verify: <span class="token builtin class-name">enable</span>\n     selfsigned: allow\n<span class="token punctuation">}</span>\n\n<span class="token builtin class-name">set</span> mmonit https://USERNAME:PASSWORD@192.168.0.1:8443/collector\n<span class="token comment">#     # with timeout 30 seconds              # Default timeout is 5 seconds</span>\n<span class="token comment">#     # and register without credentials     # Don&#39;t register credentials</span>\n\n<span class="token comment">#</span>\n<span class="token builtin class-name">set</span> httpd port <span class="token number">2812</span> and\n    <span class="token comment">#use address localhost      # only accept connection from localhost (drop if you use M/Monit)</span>\n    allow localhost             <span class="token comment"># allow localhost to connect to the server and</span>\n    allow <span class="token number">192.168</span>.0.1           <span class="token comment"># allow M/Monit</span>\n    allow USERNAME:PASSWORD     <span class="token comment"># require user &#39;admin&#39; with password &#39;monit&#39;</span>\n    with ssl <span class="token punctuation">{</span>                  <span class="token comment"># enable SSL/TLS and set path to server certificate</span>\n        pemfile: /etc/monit/monit.pem\n        version: TLSv12\n        ciphers: <span class="token string">&quot;ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384&quot;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="firewall-settings" tabindex="-1"><a class="header-anchor" href="#firewall-settings" aria-hidden="true">#</a> Firewall settings</h2>',15),I=(0,a.Uk)("The firewall being used is UFW (Uncomplicated Firewall). It is set by default to deny incoming traffic, allow outgoing traffic and allow port 22 (OpenSSH). Read more about UFW "),P={href:"https://help.ubuntu.com/community/UFW",target:"_blank",rel:"noopener noreferrer"},D=(0,a.Uk)("here"),N=(0,a.Uk)("."),Z=(0,a.uE)('<details class="custom-container details"><summary>UFW Settings</summary><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>server@ubuntu:~$ sudo ufw default deny incoming\nserver@ubuntu:~$ sudo ufw default allow outgoing\nserver@ubuntu:~$ sudo ufw allow 22\nserver@ubuntu:~$ sudo ufw enable\nCommand may disrupt existing ssh connections. Proceed with operation (y|n)? y\nFirewall is active and enabled on system startup\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></details><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>For non SSL/TLS allow port 8080.</p></div><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>server@ubuntu:~$ sudo ufw allow 8443 comment &quot;Monit&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>client@ubuntu:~$ sudo ufw allow from 192.168.0.1 to any port 2812 comment &quot;M/Monit&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Start Monit.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ sudo /usr/local/bin/monit start\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="m-monit-behind-nginx-proxy" tabindex="-1"><a class="header-anchor" href="#m-monit-behind-nginx-proxy" aria-hidden="true">#</a> M/Monit behind NGINX Proxy</h2><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span>   Host             <span class="token variable">$http_host</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Real-IP        <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span>   REMOTE_HOST      <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Forwarded-For  <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_set_header</span>   X-FORWARDED-PROTOCOL <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">rewrite</span> ^/(.*) /<span class="token variable">$1</span> break</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:8080</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_redirect</span> http://192.168.0.1:8080 /</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">proxy_cookie_path</span> / /</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="slack-notifications" tabindex="-1"><a class="header-anchor" href="#slack-notifications" aria-hidden="true">#</a> Slack notifications</h2>',9),F=(0,a.Uk)("Download "),z={href:"https://bitbucket.org/tildeslash/monit/downloads/Monit-Icons.zip",target:"_blank",rel:"noopener noreferrer"},O=(0,a.Uk)("M/Monit icons"),G=(0,a.Uk)(" for the Slack App integration."),X=(0,a.uE)('<p>Start with installing Ruby to send our notifications.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo apt-get install ruby-full\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Proceed to go to Slack and the section for managing apps and select <em>Build</em>. Give your new App an name e.g. M/Monit and connect it to an workspace. Then you&#39;ll be presented multiple options select, <em>Incoming Webhooks</em> under the <em>Add features and functionality section</em>. Activate Incoming Webhooks. Click the button <em>Add New Webhook to Workspace</em>.</p>',3),Y=["src"],B=(0,a.uE)('<p>Next you will be able to select to which channel you want the notifications to be sent to (works with private channels as well). Select your preferred channel and you will get redirected back and presented with the applications webhook URL. Copy the webhook URL for later.</p><p>Head back to M/Monit and in the menu under <em>Admin</em> click the <em>Alerts</em> option (<code>https://192.168.0.1.8443/admin/alerts/</code>). Create a new alert with the following conditions: <em>Any Host</em>, <em>Any Service</em>, <em>Any State</em>, <em>Any Event</em> and then select <em>Execute program</em> as the action. In the input field besides the <em>Execute program</em> paste the Ruby code with correct webhook URL and specified channel.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Make sure to add line breaks as in the code segment below</p></div><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>ruby <span class="token operator">-</span>e &quot;\n    <span class="token keyword">require</span> <span class="token string">&#39;net/https&#39;</span>\n    <span class="token keyword">require</span> <span class="token string">&#39;json&#39;</span>\n    uri <span class="token operator">=</span> <span class="token constant">URI</span><span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token string">&#39;https://hooks.slack.com/services/XXXXXXXXX/YYYYYYYYY/ZZZZZZZZZZZZZZZZZZZZZZZZ&#39;</span><span class="token punctuation">)</span>\n    http <span class="token operator">=</span> <span class="token constant">Net</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">HTTP</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span>host<span class="token punctuation">,</span> uri<span class="token punctuation">.</span>port<span class="token punctuation">)</span>\n    http<span class="token punctuation">.</span>use_ssl <span class="token operator">=</span> <span class="token boolean">true</span>\n    request <span class="token operator">=</span> <span class="token constant">Net</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">HTTP</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">Post</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span>request_uri<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;Content-Type&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    request<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span> \\&quot;channel\\&quot;  <span class="token operator">=</span><span class="token operator">&gt;</span> \\&quot;<span class="token comment">#general\\&quot;, \\&quot;username\\&quot; =&gt; \\&quot;mmonit\\&quot;, \\&quot;text\\&quot; =&gt; \\&quot;[#{ENV[&#39;MONIT_HOST&#39;]}] #{ENV[&#39;MONIT_SERVICE&#39;]} - #{ENV[&#39;MONIT_DESCRIPTION&#39;]}\\&quot; }.to_json</span>\n    response <span class="token operator">=</span> http<span class="token punctuation">.</span>request<span class="token punctuation">(</span>request<span class="token punctuation">)</span>\n    puts response<span class="token punctuation">.</span>body\n&quot;\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Next run the test to see if the integration is working correctly. You should receive test output ok and a test notification should be sent to your specific Slack channel.</p>',5),V=["src"],j=(0,a.Uk)("If you do not use M/Monit you can also configure the individual Monit instance to add Slack notifications. Read more at "),J={href:"https://mmonit.com/wiki/MMonit/SlackNotification",target:"_blank",rel:"noopener noreferrer"},K=(0,a.Uk)("Tideslash Wiki"),Q=(0,a.Uk)("."),nn=(0,a.uE)('<h2 id="upgrading" tabindex="-1"><a class="header-anchor" href="#upgrading" aria-hidden="true">#</a> Upgrading</h2><p>Upgrading M/Monit without overwriting configuration files and databases can be done using the built-in upgrade command.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cd /usr/local/\nserver@ubuntu:~$ wget https://mmonit.com/dist/mmonit-3.7.0-linux-x64.tar.gz\nserver@ubuntu:~$ tar -zxvf mmonit-3.7.0-linux-x64.tar.gz\nserver@ubuntu:~$ cd /usr/local/mmonit-3.6.2/bin/\nserver@ubuntu:~$ sudo ./mmonit stop\nserver@ubuntu:~$ /usr/local/mmonit-3.7.0/upgrade/upgrade -p /usr/local/mmonit-3.6.2/\nserver@ubuntu:~$ cd /usr/local/mmonit-3.7.0/bin/\nserver@ubuntu:~$ sudo ./mmonit\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="command-line" tabindex="-1"><a class="header-anchor" href="#command-line" aria-hidden="true">#</a> Command-line</h2><h2 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a> Troubleshooting</h2>',5),en={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},sn=(0,a.Uk)("Questions"),an=(0,a.Uk)(", "),tn={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},on=(0,a.Uk)("comments"),ln=(0,a.Uk)(", or "),rn={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},pn=(0,a.Uk)("problems"),cn=(0,a.Uk)(" regarding this service? Create an issue "),un={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},dn=(0,a.Uk)("here"),mn=(0,a.Uk)(" or contact "),bn=(0,a._)("a",{href:"mailto:webmaster@libellux.com"},"webmaster@libellux.com",-1),gn=(0,a.Uk)("."),hn={href:"https://www.libellux.com/openvas/",target:"_blank",rel:"noopener noreferrer"},kn=(0,a.Uk)("OpenVAS"),vn=(0,a.Uk)(" reports Monit to be using weak ciphers accepted through TLS1.0,1.1,1.2 protocol. Add the following lines within the ssl section."),fn=(0,a.uE)('<div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">with</span> ssl</span> <span class="token punctuation">{</span>\n    pemfile:\n    version: TLSv12\n    ciphers: &quot;ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384&quot;\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>To resolve the issue where libcrypto.so.1.0.x has been removed with the auto remove/clean command is to reinstall the libssl1.0.x and libssl-dev packages.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo apt-get install libssl1.0.x libssl-dev --reinstall\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>To resolve the issue where you receive the configuration error: libz not found. Proceed to install the zlib1g-dev package.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo apt-get install zlib1g-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>In case you get the configure error: Couldn’t find your SSL header files. Proceed by installing the libssl-dev package.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo apt-get install libssl-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>If you receive <code>configure: error: PAM enabled but headers or library not found</code>, install the PAM development support or run configure --without-pam to build without PAM.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ libpam0g-dev\nserver@ubuntu:~$ sudo ./configure --without-pam\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>If you get the error <code>SSL server certificate verification error: self signed certificate is not allowed, please use a trusted certificate or use the &#39;selfsigned: allow&#39; SSL option</code> update the monit configuration file to allow self-signed certificates.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ sudo nano /usr/local/etc/monitrc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">set</span> ssl <span class="token punctuation">{</span>\n    verify: <span class="token builtin class-name">enable</span>\n    selfsigned: allow\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>If receiving the error that the sever certificate has expired you can either re-generate a new self-signed certificate for your M/Monit server or simply disable the SSL verification at the client side.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Cannot connect to [192.168.0.1]:8443 -- SSL server certificate verification error: certificate has expired\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>client@ubuntu:~$ sudo nano /usr/local/etc/monitrc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">set</span> ssl <span class="token punctuation">{</span>\n    <span class="token comment">#verify: enable</span>\n    selfsigned: allow\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',16),xn={id:"enterprise-solutions",tabindex:"-1"},wn=(0,a._)("a",{class:"header-anchor",href:"#enterprise-solutions","aria-hidden":"true"},"#",-1),Mn=(0,a.Uk)(" Enterprise solutions "),yn=(0,a._)("h3",{id:"m-monit-enterprise",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#m-monit-enterprise","aria-hidden":"true"},"#"),(0,a.Uk)(" M/Monit Enterprise")],-1),Sn=(0,a._)("p",null,"The M/Monit Enterprise License is a perpetual license and allows you to install and run an unlimited number of M/Monit instances for monitoring an unlimited number of hosts in-house.",-1),_n={href:"https://mmonit.com/shop/",target:"_blank",rel:"noopener noreferrer"},qn=(0,a.Uk)("M/Monit"),Un={},En=(0,s(3744).Z)(Un,[["render",function(n,e){const s=(0,a.up)("OutboundLink"),Un=(0,a.up)("Badge");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,o,(0,a._)("p",null,[(0,a._)("a",l,[i,(0,a.Wm)(s)]),r,(0,a._)("a",p,[c,(0,a.Wm)(s)]),u,(0,a._)("a",d,[m,(0,a.Wm)(s)])]),b,(0,a._)("p",null,[(0,a._)("a",g,[h,(0,a.Wm)(s)])]),k,v,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",f,[x,(0,a.Wm)(s)])]),(0,a._)("li",null,[(0,a._)("a",w,[M,(0,a.Wm)(s)])])]),y,(0,a._)("p",null,[S,(0,a._)("a",_,[q,(0,a.Wm)(s)]),U]),(0,a._)("p",null,[E,(0,a._)("a",A,[$,(0,a.Wm)(s)]),T,L,C]),R,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/mmonit/mmonit_login.png",alt:"mmonit login"},null,8,H),W,(0,a._)("p",null,[I,(0,a._)("a",P,[D,(0,a.Wm)(s)]),N]),Z,(0,a._)("p",null,[F,(0,a._)("a",z,[O,(0,a.Wm)(s)]),G]),X,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/mmonit/slack_incoming_webhook.png",alt:"mmonit slack incoming webhook"},null,8,Y),B,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/mmonit/slack_alert.png",alt:"mmonit slack alert"},null,8,V),(0,a._)("p",null,[j,(0,a._)("a",J,[K,(0,a.Wm)(s)]),Q]),nn,(0,a._)("p",null,[(0,a._)("a",en,[sn,(0,a.Wm)(s)]),an,(0,a._)("a",tn,[on,(0,a.Wm)(s)]),ln,(0,a._)("a",rn,[pn,(0,a.Wm)(s)]),cn,(0,a._)("a",un,[dn,(0,a.Wm)(s)]),mn,bn,gn]),(0,a._)("p",null,[(0,a._)("a",hn,[kn,(0,a.Wm)(s)]),vn]),fn,(0,a._)("h2",xn,[wn,Mn,(0,a.Wm)(Un,{text:"non-sponsored",type:"tip"})]),yn,Sn,(0,a._)("p",null,[(0,a._)("a",_n,[qn,(0,a.Wm)(s)])])],64)}]])},3744:(n,e)=>{e.Z=(n,e)=>{for(const[s,a]of e)n[s]=a;return n}}}]);