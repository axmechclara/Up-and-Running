(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{412:function(t,e,s){"use strict";s.r(e);var a=s(11),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"m-monit-system-monitoring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#m-monit-system-monitoring"}},[t._v("#")]),t._v(" M/Monit System Monitoring")]),t._v(" "),s("TagLinks"),t._v(" "),s("p",[t._v("Monit is a small popular Open Source utility for managing and monitoring Unix systems. M/Monit builds on Monit's capabilities and provides monitoring and management of all your Monit enabled hosts via a modern, clean and well designed user interface which also works on mobile devices.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://mmonit.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("M/Monit website"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://mmonit.com/monit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Monit website"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://bitbucket.org/tildeslash/monit/src/master/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Setup and configuration have been tested on following operating systems:")]),t._v(" "),s("h3",{attrs:{id:"m-monit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#m-monit"}},[t._v("#")]),t._v(" M/Monit")]),t._v(" "),s("ul",[s("li",[t._v("Ubuntu- 16.04, 18.04, 20.04")]),t._v(" "),s("li",[t._v("3.6.0 -> 3.7.5")])]),t._v(" "),s("h3",{attrs:{id:"monit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monit"}},[t._v("#")]),t._v(" Monit")]),t._v(" "),s("ul",[s("li",[t._v("Ubuntu- 16.04, 18.04, 20.04")]),t._v(" "),s("li",[t._v("5.16.0 -> 5.27.0")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("M/Monit is a non-free software to montior and manage all Monit enabled hosts. 30 days free trial.")])]),t._v(" "),s("h2",{attrs:{id:"configuration-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration-files"}},[t._v("#")]),t._v(" Configuration files")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/mmonit/config/server.xml",target:"_blank",rel:"noopener noreferrer"}},[t._v("server.xml"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/mmonit/config/monitrc",target:"_blank",rel:"noopener noreferrer"}},[t._v("monitrc"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),s("p",[t._v("Dependancies when building or upgrading Monit from source.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("zlib1g-dev")])]),t._v(" "),s("li",[s("code",[t._v("libssl-dev")])]),t._v(" "),s("li",[s("code",[t._v("libpam0g-dev")])]),t._v(" "),s("li",[s("code",[t._v("ruby-full")]),t._v(" (optional)")])]),t._v(" "),s("h2",{attrs:{id:"m-monit-installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#m-monit-installation"}},[t._v("#")]),t._v(" M/Monit Installation")]),t._v(" "),s("p",[t._v("For additional information see reference "),s("a",{attrs:{href:"https://mmonit.com/documentation/mmonit_manual.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("M/Monit documentation"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("To download the latest version of M/Monit visit the "),s("a",{attrs:{href:"https://mmonit.com/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("official website"),s("OutboundLink")],1),t._v(". Continue to extract the file and move it to "),s("code",[t._v("/usr/local/mmonit/")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ wget https://mmonit.com/dist/mmonit-3.7.5-linux-x64.tar.gz\nserver@ubuntu:~$ tar -zxvf mmonit-3.7.5-linux-x64.tar.gz\nserver@ubuntu:~$ rm mmonit-3.7.5-linux-x64.tar.gz\nserver@ubuntu:~$ sudo mv mmonit-3.7.5/ /usr/local/mmonit/\n")])])]),s("p",[t._v("Now you can visit M/Monit at "),s("code",[t._v("http://192.168.0.1:8080")]),t._v(" if executing the command "),s("code",[t._v("sudo ./mmonit")]),t._v(" from "),s("code",[t._v("/usr/local/mmonit-3.7.5/bin/")]),t._v(" (Dont forget to check "),s("a",{attrs:{href:"#firewall-settings"}},[t._v("Firewall settings")]),t._v("). However, we strongly recommend to run M/Monit with TLS support.")]),t._v(" "),s("h3",{attrs:{id:"enable-tls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable-tls"}},[t._v("#")]),t._v(" Enable TLS")]),t._v(" "),s("p",[t._v("To enable M/Monit to run with TLS comment out the port 8080 connector and uncomment the SSL/TLS connector to listen on port 8443. Proceed to update the host section and define the server IP address along with the certificate path.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo nano /usr/local/mmonit/conf/server.xml\n")])])]),s("div",{staticClass:"language-xml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\x3c!--\n        <Connector address="*" port="8080" processors="10" />\n        --\x3e')]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- Define a SSL/TLS HTTP/1.1 Connector on port 8443 --\x3e")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scheme")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("address")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("processors")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("secure")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--\n            Define the default virtual host which name must match the\n            Engine defaultHost attribute\n        --\x3e")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Host")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("appBase")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("address")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("192.168.0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("certificate")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("conf/mmonit.pem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"add-m-monit-to-systemd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-m-monit-to-systemd"}},[t._v("#")]),t._v(" Add M/Monit to systemd")]),t._v(" "),s("p",[t._v("To simplify the process to start and stop M/Monit add it to the systemd. First create a mmonit.service file, paste the below and save.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo nano /etc/systemd/system/mmonit.service\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nDescription "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Easy, proactive monitoring of Unix systems, network and cloud services\nAfter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" network.target\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Documentation")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https://mmonit.com/documentation/ \n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("simple\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KillMode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("process\nExecStart "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /usr/local/mmonit/bin/mmonit -i\nExecStop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /usr/local/mmonit/bin/mmonit stop\nPIDFile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /usr/local/mmonit/logs/mmonit.pid\nRestart "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" on-abnormal\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nWantedBy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" multi-user.target\n")])])]),s("p",[t._v("Next reload the systemd daemon, enable our newly configured M/Monit service and then start it.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo systemctl daemon-reload\nserver@ubuntu:~$ sudo systemctl enable mmonit\nserver@ubuntu:~$ sudo systemctl start mmonit\n")])])]),s("p",[t._v("Go to your browser and visit "),s("code",[t._v("https://192.168.0.1:8443")]),t._v(". Login using the default credentials user "),s("code",[t._v("admin")]),t._v(" with the default password "),s("code",[t._v("swordfish")]),t._v(". Click the "),s("strong",[t._v("Admin")]),t._v(" tab, select "),s("strong",[t._v("Users")]),t._v(" and edit (default admin accout) or add a new user. Then grant administration privileges to overwrite the default credentials.")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:"/img/mmonit/mmonit_login.png",alt:"mmonit login"}}),t._v(" "),s("h2",{attrs:{id:"monit-installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monit-installation"}},[t._v("#")]),t._v(" Monit Installation")]),t._v(" "),s("p",[t._v("First install the PAM development package to enable Pluggable Authentication Modules (PAM) support.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ sudo apt-get install libpam0g-dev\n")])])]),s("p",[t._v("Next install the latest version of Monit as an agent for M/Monit enter the commands below.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ wget https://bitbucket.org/tildeslash/monit/downloads/monit-5.27.0.tar.gz\nclient@ubuntu:~$ tar -zxvf monit-5.27.0.tar.gz\nclient@ubuntu:~$ cd monit-5.27.0/\nclient@ubuntu:~$ sudo ./configure\nclient@ubuntu:~$ sudo make && sudo make install\n")])])]),s("h3",{attrs:{id:"tls-ssl-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-ssl-settings"}},[t._v("#")]),t._v(" TLS/SSL settings")]),t._v(" "),s("p",[t._v("Create a TLS certificate for Monit to enable secure transmission to M/Monit.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ sudo openssl req -new -newkey rsa:2048 -x509 -days 730 -nodes -out /etc/monit/monit.pem -keyout /etc/monit/monit.pem\nclient@ubuntu:~$ sudo chmod 700 /etc/monit/monit.pem\n")])])]),s("h2",{attrs:{id:"configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),s("p",[t._v("Copy the default Monit configuration file and create an backup.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ sudo cp monitrc /usr/local/etc/\nclient@ubuntu:~$ cd /usr/local/etc\nclient@ubuntu:~$ sudo cp monitrc monitrc_bak\n")])])]),s("p",[t._v("Next edit the Monit configuration file to enable communication with M/Monit over TLS/SSL.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ sudo nano monitrc\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Set global SSL options (just most common options showed, see manual for")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## full list).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" ssl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     verify: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v("\n     selfsigned: allow\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" mmonit https://USERNAME:PASSWORD@192.168.0.1:8443/collector\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     # with timeout 30 seconds              # Default timeout is 5 seconds")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     # and register without credentials     # Don't register credentials")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" httpd port "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2812")]),t._v(" and\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#use address localhost      # only accept connection from localhost (drop if you use M/Monit)")]),t._v("\n    allow localhost             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow localhost to connect to the server and")]),t._v("\n    allow "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.1           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow M/Monit")]),t._v("\n    allow USERNAME:PASSWORD     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# require user 'admin' with password 'monit'")]),t._v("\n    with ssl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable SSL/TLS and set path to server certificate")]),t._v("\n        pemfile: /etc/monit/monit.pem\n        version: TLSv12\n        ciphers: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"firewall-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#firewall-settings"}},[t._v("#")]),t._v(" Firewall settings")]),t._v(" "),s("p",[t._v("The firewall being used is UFW (Uncomplicated Firewall). It is set by default to deny incoming traffic, allow outgoing traffic and allow port 22 (OpenSSH). Read more about UFW "),s("a",{attrs:{href:"https://help.ubuntu.com/community/UFW",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("UFW Settings")]),t._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo ufw default deny incoming\nserver@ubuntu:~$ sudo ufw default allow outgoing\nserver@ubuntu:~$ sudo ufw allow 22\nserver@ubuntu:~$ sudo ufw enable\nCommand may disrupt existing ssh connections. Proceed with operation (y|n)? y\nFirewall is active and enabled on system startup\n")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("INFO")]),t._v(" "),s("p",[t._v("For non SSL/TLS allow port 8080.")])]),t._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('server@ubuntu:~$ sudo ufw allow 8443 comment "Monit"\n')])])]),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('client@ubuntu:~$ sudo ufw allow from 192.168.0.1 to any port 2812 comment "M/Monit"\n')])])]),s("p",[t._v("Start Monit.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ sudo /usr/local/bin/monit start\n")])])]),s("h2",{attrs:{id:"m-monit-behind-nginx-proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#m-monit-behind-nginx-proxy"}},[t._v("#")]),t._v(" M/Monit behind NGINX Proxy")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("   Host             "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("   X-Real-IP        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("   REMOTE_HOST      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("   X-Forwarded-For  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("   X-FORWARDED-PROTOCOL "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$scheme")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/(.*) /"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_redirect")]),t._v(" http://192.168.0.1:8080 /")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cookie_path")]),t._v(" / /")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"slack-notifications"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slack-notifications"}},[t._v("#")]),t._v(" Slack notifications")]),t._v(" "),s("p",[t._v("Download "),s("a",{attrs:{href:"https://bitbucket.org/tildeslash/monit/downloads/Monit-Icons.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("M/Monit icons"),s("OutboundLink")],1),t._v(" for the Slack App integration.")]),t._v(" "),s("p",[t._v("Start with installing Ruby to send our notifications.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo apt-get install ruby-full\n")])])]),s("p",[t._v("Proceed to go to Slack and the section for managing apps and select "),s("em",[t._v("Build")]),t._v(". Give your new App an name e.g. M/Monit and connect it to an workspace. Then you'll be presented multiple options select, "),s("em",[t._v("Incoming Webhooks")]),t._v(" under the "),s("em",[t._v("Add features and functionality section")]),t._v(". Activate Incoming Webhooks. Click the button "),s("em",[t._v("Add New Webhook to Workspace")]),t._v(".")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:"/img/mmonit/slack_incoming_webhook.png",alt:"mmonit slack incoming webhook"}}),t._v(" "),s("p",[t._v("Next you will be able to select to which channel you want the notifications to be sent to (works with private channels as well). Select your preferred channel and you will get redirected back and presented with the applications webhook URL. Copy the webhook URL for later.")]),t._v(" "),s("p",[t._v("Head back to M/Monit and in the menu under "),s("em",[t._v("Admin")]),t._v(" click the "),s("em",[t._v("Alerts")]),t._v(" option ("),s("code",[t._v("https://192.168.0.1.8443/admin/alerts/")]),t._v("). Create a new alert with the following conditions: "),s("em",[t._v("Any Host")]),t._v(", "),s("em",[t._v("Any Service")]),t._v(", "),s("em",[t._v("Any State")]),t._v(", "),s("em",[t._v("Any Event")]),t._v(" and then select "),s("em",[t._v("Execute program")]),t._v(" as the action. In the input field besides the "),s("em",[t._v("Execute program")]),t._v(" paste the Ruby code with correct webhook URL and specified channel.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("Make sure to add line breaks as in the code segment below")])]),t._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[t._v("ruby "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v('e "\n    '),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'net/https'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'json'")]),t._v("\n    uri "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://hooks.slack.com/services/XXXXXXXXX/YYYYYYYYY/ZZZZZZZZZZZZZZZZZZZZZZZZ'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Net")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("use_ssl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    request "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Net")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request_uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/json'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(' \\"channel\\"  '),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(' \\"'),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#general\\", \\"username\\" => \\"mmonit\\", \\"text\\" => \\"[#{ENV[\'MONIT_HOST\']}] #{ENV[\'MONIT_SERVICE\']} - #{ENV[\'MONIT_DESCRIPTION\']}\\" }.to_json')]),t._v("\n    response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    puts response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v('body\n"\n')])])]),s("p",[t._v("Next run the test to see if the integration is working correctly. You should receive test output ok and a test notification should be sent to your specific Slack channel.")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:"/img/mmonit/slack_alert.png",alt:"mmonit slack alert"}}),t._v(" "),s("p",[t._v("If you do not use M/Monit you can also configure the individual Monit instance to add Slack notifications. Read more at "),s("a",{attrs:{href:"https://mmonit.com/wiki/MMonit/SlackNotification",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tideslash Wiki"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"upgrading"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upgrading"}},[t._v("#")]),t._v(" Upgrading")]),t._v(" "),s("p",[t._v("Upgrading M/Monit without overwriting configuration files and databases can be done using the built-in upgrade command.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ cd /usr/local/\nserver@ubuntu:~$ wget https://mmonit.com/dist/mmonit-3.7.0-linux-x64.tar.gz\nserver@ubuntu:~$ tar -zxvf mmonit-3.7.0-linux-x64.tar.gz\nserver@ubuntu:~$ cd /usr/local/mmonit-3.6.2/bin/\nserver@ubuntu:~$ sudo ./mmonit stop\nserver@ubuntu:~$ /usr/local/mmonit-3.7.0/upgrade/upgrade -p /usr/local/mmonit-3.6.2/\nserver@ubuntu:~$ cd /usr/local/mmonit-3.7.0/bin/\nserver@ubuntu:~$ sudo ./mmonit\n")])])]),s("h2",{attrs:{id:"command-line"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#command-line"}},[t._v("#")]),t._v(" Command-line")]),t._v(" "),s("h2",{attrs:{id:"troubleshooting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[t._v("#")]),t._v(" Troubleshooting")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"}},[t._v("Questions"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"}},[t._v("comments"),s("OutboundLink")],1),t._v(", or "),s("a",{attrs:{href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"}},[t._v("problems"),s("OutboundLink")],1),t._v(" regarding this service? Create an issue "),s("a",{attrs:{href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(" or contact "),s("a",{attrs:{href:"mailto:webmaster@libellux.com"}},[t._v("webmaster@libellux.com")]),t._v(".")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.libellux.com/openvas/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenVAS"),s("OutboundLink")],1),t._v(" reports Monit to be using weak ciphers accepted through TLS1.0,1.1,1.2 protocol. Add the following lines within the ssl section.")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" ssl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n    pemfile:\n    version: TLSv12\n    ciphers: "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384"\n'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("To resolve the issue where libcrypto.so.1.0.x has been removed with the auto remove/clean command is to reinstall the libssl1.0.x and libssl-dev packages.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo apt-get install libssl1.0.x libssl-dev --reinstall\n")])])]),s("p",[t._v("To resolve the issue where you receive the configuration error: libz not found. Proceed to install the zlib1g-dev package.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo apt-get install zlib1g-dev\n")])])]),s("p",[t._v("In case you get the configure error: Couldn’t find your SSL header files. Proceed by installing the libssl-dev package.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ sudo apt-get install libssl-dev\n")])])]),s("p",[t._v("If you receive "),s("code",[t._v("configure: error: PAM enabled but headers or library not found")]),t._v(", install the PAM development support or run configure --without-pam to build without PAM.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server@ubuntu:~$ libpam0g-dev\nserver@ubuntu:~$ sudo ./configure --without-pam\n")])])]),s("p",[t._v("If you get the error "),s("code",[t._v("SSL server certificate verification error: self signed certificate is not allowed, please use a trusted certificate or use the 'selfsigned: allow' SSL option")]),t._v(" update the monit configuration file to allow self-signed certificates.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ sudo nano /usr/local/etc/monitrc\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" ssl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    verify: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v("\n    selfsigned: allow\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("If receiving the error that the sever certificate has expired you can either re-generate a new self-signed certificate for your M/Monit server or simply disable the SSL verification at the client side.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Cannot connect to [192.168.0.1]:8443 -- SSL server certificate verification error: certificate has expired\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("client@ubuntu:~$ sudo nano /usr/local/etc/monitrc\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" ssl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#verify: enable")]),t._v("\n    selfsigned: allow\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"enterprise-solutions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enterprise-solutions"}},[t._v("#")]),t._v(" Enterprise solutions "),s("Badge",{attrs:{text:"non-sponsored",type:"default"}})],1),t._v(" "),s("h3",{attrs:{id:"m-monit-enterprise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#m-monit-enterprise"}},[t._v("#")]),t._v(" M/Monit Enterprise")]),t._v(" "),s("p",[t._v("The M/Monit Enterprise License is a perpetual license and allows you to install and run an unlimited number of M/Monit instances for monitoring an unlimited number of hosts in-house.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://mmonit.com/shop/",target:"_blank",rel:"noopener noreferrer"}},[t._v("M/Monit"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://ko-fi.com/B0B31BJU3",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://www.ko-fi.com/img/githubbutton_sm.svg",alt:"ko-fi"}}),s("OutboundLink")],1)]),t._v(" "),s("social-share")],1)}),[],!1,null,null,null);e.default=n.exports}}]);