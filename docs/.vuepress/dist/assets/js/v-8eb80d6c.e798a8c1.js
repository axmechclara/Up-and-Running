"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[30],{707:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-8eb80d6c",path:"/openvas/",title:"Greenbone Vulnerability Manager",lang:"en-US",frontmatter:{lang:"en-US",title:"Greenbone Vulnerability Manager",description:"OpenVAS is a full-featured vulnerability scanner. Its capabilities include unauthenticated testing, authenticated testing, various high level and low level Internet and industrial protocols, performance tuning for large-scale scans and a powerful internal programming language to implement any type of vulnerability test."},excerpt:"",headers:[{level:2,title:"Configuration files",slug:"configuration-files",children:[]},{level:2,title:"Prerequisites",slug:"prerequisites",children:[]},{level:2,title:"Install GVM 21.04 from source",slug:"install-gvm-21-04-from-source",children:[{level:3,title:"Set up GVM user and group",slug:"set-up-gvm-user-and-group",children:[]},{level:3,title:"Define paths",slug:"define-paths",children:[]},{level:3,title:"Import GVM signing key to validate the integrity of the source files",slug:"import-gvm-signing-key-to-validate-the-integrity-of-the-source-files",children:[]},{level:3,title:"Specify Greenbone Vulnerability Manager version",slug:"specify-greenbone-vulnerability-manager-version",children:[]},{level:3,title:"Build GVM libraries",slug:"build-gvm-libraries",children:[]},{level:3,title:"Build the Greenbone Vulnerability Manager",slug:"build-the-greenbone-vulnerability-manager",children:[]},{level:3,title:"Build the Greenbone Security Assistant",slug:"build-the-greenbone-security-assistant",children:[]},{level:3,title:"Build the OpenVAS SMB module",slug:"build-the-openvas-smb-module",children:[]},{level:3,title:"Build the OpenVAS Scanner",slug:"build-the-openvas-scanner",children:[]},{level:3,title:"Download and install the base class ospd (21.4.3) for scanner wrappers and ospd-openvas for remote control",slug:"download-and-install-the-base-class-ospd-21-4-3-for-scanner-wrappers-and-ospd-openvas-for-remote-control",children:[]},{level:3,title:"Build the GVM tools",slug:"build-the-gvm-tools",children:[]},{level:3,title:"Configure Redis",slug:"configure-redis",children:[]},{level:3,title:"Set up GVM user permissions",slug:"set-up-gvm-user-permissions",children:[]},{level:3,title:"Configure PostgreSQL database",slug:"configure-postgresql-database",children:[]},{level:3,title:"Create GVM admin",slug:"create-gvm-admin",children:[]},{level:3,title:"Update Network Vulnerability Tests",slug:"update-network-vulnerability-tests",children:[]},{level:3,title:"Update Greenbone Feed synchronisation",slug:"update-greenbone-feed-synchronisation",children:[]},{level:3,title:"Generate GVM certificates",slug:"generate-gvm-certificates",children:[]},{level:3,title:"Set up systemd",slug:"set-up-systemd",children:[]},{level:3,title:"Modify scanner",slug:"modify-scanner",children:[]},{level:3,title:"Enable and start services",slug:"enable-and-start-services",children:[]}]},{level:2,title:"Install GVM 20.08 CentOS",slug:"install-gvm-20-08-centos",children:[]},{level:2,title:"Running vulnerability scans",slug:"running-vulnerability-scans",children:[{level:3,title:"Unauthenticated scan",slug:"unauthenticated-scan",children:[]},{level:3,title:"Authenticated scan",slug:"authenticated-scan",children:[]}]},{level:2,title:"Two-factor authentication w/ privacyIDEA",slug:"two-factor-authentication-w-privacyidea",children:[]},{level:2,title:"Scheduled jobs",slug:"scheduled-jobs",children:[]},{level:2,title:"Troubleshooting",slug:"troubleshooting",children:[{level:3,title:"SEC_ERROR_INADEQUATE_KEY_USAGE",slug:"sec-error-inadequate-key-usage",children:[]},{level:3,title:"Failed to find interpreter for Python 3.7",slug:"failed-to-find-interpreter-for-python-3-7",children:[]}]},{level:2,title:"Enterprise solutions",slug:"enterprise-solutions",children:[{level:3,title:"The Greenbone Security Manager",slug:"the-greenbone-security-manager",children:[]}]}],filePathRelative:"openvas/README.md",git:{updatedTime:1632073019e3,contributors:[{name:"Libellux",email:"fredrik@libellux.com",commits:90}]}}},117:(e,n,s)=>{s.r(n),s.d(n,{default:()=>Vn});var a=s(252);const r={id:"greenbone-vulnerability-manager",tabindex:"-1"},t=(0,a._)("a",{class:"header-anchor",href:"#greenbone-vulnerability-manager","aria-hidden":"true"},"#",-1),l=(0,a.Uk)(" Greenbone Vulnerability Manager "),i=(0,a._)("p",null,"OpenVAS is a full-featured vulnerability scanner. Its capabilities include unauthenticated testing, authenticated testing, various high level and low level Internet and industrial protocols, performance tuning for large-scale scans and a powerful internal programming language to implement any type of vulnerability test.",-1),u={href:"https://www.greenbone.net/en/vulnerability-management/",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("GVM website"),d=(0,a.Uk)(),c={href:"https://www.openvas.org/",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("OpenVAS website"),b=(0,a.Uk)(),m={href:"https://github.com/greenbone/openvas",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Uk)("GitHub"),v=(0,a.Uk)(),h={href:"https://greenbone.github.io/docs/",target:"_blank",rel:"noopener noreferrer"},x=(0,a.Uk)("GVM official docs"),f=(0,a._)("p",null,"Setup and configuration have been tested on the following operating systems:",-1),S=(0,a._)("li",null,"Ubuntu- 16.04, 18.04, 20.04 (Focal Fossa), Rocky 8.4 (Green Obsidian)",-1),_=(0,a.Uk)("GVM 20.08 for Debian 10 visit "),y={href:"https://sadsloth.net/post/install-gvm-20_08-src-on-debian/",target:"_blank",rel:"noopener noreferrer"},R=(0,a.Uk)("sadsloth.net"),E=(0,a.Uk)("."),I=(0,a._)("li",null,"GVM-9 (OpenVAS-9), Atomicorp 20.08 (RHEL 8, CentOS 8, Fedora 32), GVM- 20.08, 20.08.1, 21.04, 21.4.2",-1),$={href:"https://ko-fi.com/B0B31BJU3",target:"_blank",rel:"noopener noreferrer"},k=(0,a._)("img",{src:"https://www.ko-fi.com/img/githubbutton_sm.svg",alt:"ko-fi"},null,-1),D=(0,a.uE)('<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>GVM-9 (OpenVAS-9) reached end-of-life support. GVM 10 and 11 will reach end-of-life support in the end of 2020.</p></div><h2 id="configuration-files" tabindex="-1"><a class="header-anchor" href="#configuration-files" aria-hidden="true">#</a> Configuration files</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The lines in the &quot;scripts&quot; below has been used for testing and successfully configure GVM 20.08 (20.08.1) and 21.04 (21.4.2). You may use the testing guide to install GVM or follow our detailed step-by-step tutorial below to install GVM 21.04.</p></div>',3),O={href:"https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/openvas/config/21_4_2.sh",target:"_blank",rel:"noopener noreferrer"},A=(0,a.Uk)("21.4.2"),V={href:"https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/openvas/config/20_08_1.sh",target:"_blank",rel:"noopener noreferrer"},w=(0,a.Uk)("20.08.1"),U=(0,a.uE)('<h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h2><p>Dependencies required to install GVM 21.04 (21.4.2) from source on Ubuntu 20.04:</p><ul><li><code>build-essential</code></li><li><code>cmake</code></li><li><code>gnutls-bin</code></li><li><code>pkg-config</code></li><li><code>glib2.0</code></li><li><code>libgnutls28-dev</code></li><li><code>libssh-dev</code></li><li><code>libssl-dev</code></li><li><code>libhiredis-dev</code></li><li><code>redis-server</code></li><li><code>libxml2-dev</code></li><li><code>doxygen</code></li><li><code>xsltproc</code></li><li><code>libldap2-dev</code></li><li><code>libgcrypt-dev</code></li><li><code>libpcap-dev</code></li><li><code>libgpgme-dev</code></li><li><code>libradcli-dev</code></li><li><code>graphviz</code></li><li><code>bison</code></li><li><code>libksba-dev</code></li><li><code>libical-dev</code></li><li><code>libpq-dev</code></li><li><code>postgresql</code></li><li><code>postgresql-contrib</code></li><li><code>postgresql-server-dev-all</code></li><li><code>libopenvas-dev</code></li><li><code>heimdal-dev</code></li><li><code>libpopt-dev</code></li><li><code>xmltoman</code></li><li><code>gcc-mingw-w64</code></li><li><code>nmap</code></li><li><code>npm</code></li><li><code>nodejs</code></li><li><code>libpthread-stubs0-dev</code></li><li><code>clang-format</code></li><li><code>libmicrohttpd-dev</code></li><li><code>yarn</code></li><li><code>virtualenv</code></li><li><code>python3-paramiko</code></li><li><code>python3-lxml</code></li><li><code>python3-defusedxml</code></li><li><code>python3-pip</code></li><li><code>python3-psutil</code></li><li><code>libnet1-dev</code></li><li><code>libunistring-dev</code></li><li><code>xmlstarlet</code></li><li><code>texlive-fonts-recommended</code></li><li><code>texlive-latex-extra</code></li></ul><h2 id="install-gvm-21-04-from-source" tabindex="-1"><a class="header-anchor" href="#install-gvm-21-04-from-source" aria-hidden="true">#</a> Install GVM 21.04 from source</h2><p>Before we will install the latest version of Greenbone Vulnerability Manager (GVM) 21.04 (21.4.2) make sure your system is up-to-date.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo apt-get update\nserver@ubuntu:~$ sudo apt-get upgrade\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Proceed to install all the dependencies for GVM 21.04 (21.4.2) on Ubuntu 20.04.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo apt-get update &amp;&amp; \\\nsudo apt-get -y upgrade &amp;&amp; \\\nsudo apt-get install -y build-essential &amp;&amp; \\\nsudo apt-get install -y cmake pkg-config glib2.0 gcc-mingw-w64 \\\ngnutls-bin libgnutls28-dev libxml2-dev libssh-dev libssl-dev libunistring-dev \\\nlibldap2-dev libgcrypt-dev libpcap-dev libgpgme-dev libradcli-dev \\\nlibksba-dev libical-dev libpq-dev libopenvas-dev libpopt-dev libnet1-dev \\\nlibmicrohttpd-dev redis-server libhiredis-dev doxygen xsltproc \\\ngraphviz bison postgresql postgresql-contrib postgresql-server-dev-all \\\nheimdal-dev xmltoman nmap npm nodejs virtualenv \\\npython3-paramiko python3-lxml python3-defusedxml python3-pip python3-psutil \\\nxmlstarlet texlive-fonts-recommended texlive-latex-extra\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Continue to install yarn using npm with the specified installation path.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo npm install -g yarn --prefix /usr/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="set-up-gvm-user-and-group" tabindex="-1"><a class="header-anchor" href="#set-up-gvm-user-and-group" aria-hidden="true">#</a> Set up GVM user and group</h3><p>Lets create the GVM user and add it to sudoers group without login.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo useradd -r -M -U -G sudo -s /usr/sbin/nologin gvm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Next add your current sudo users to the GVM group so you&#39;re allowed to run <em>gvmd</em>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo usermod -aG gvm $USER\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Make sure that the group change is updated by running the below command.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ su $USER\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="define-paths" tabindex="-1"><a class="header-anchor" href="#define-paths" aria-hidden="true">#</a> Define paths</h3><p>Next we will define base, source, build and installation directory. First lets set up the base path.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export PATH=$PATH:/usr/local/sbin\nserver@ubuntu:~$ export INSTALL_PREFIX=/usr/local\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Continue to setup the source directory.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export SOURCE_DIR=$HOME/source\nserver@ubuntu:~$ mkdir -p $SOURCE_DIR\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Next set and create the build directory.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export BUILD_DIR=$HOME/build\nserver@ubuntu:~$ mkdir -p $BUILD_DIR\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Finally set up the installation directory.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export INSTALL_DIR=$HOME/install\nserver@ubuntu:~$ mkdir -p $INSTALL_DIR\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="import-gvm-signing-key-to-validate-the-integrity-of-the-source-files" tabindex="-1"><a class="header-anchor" href="#import-gvm-signing-key-to-validate-the-integrity-of-the-source-files" aria-hidden="true">#</a> Import GVM signing key to validate the integrity of the source files</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ curl -O https://www.greenbone.net/GBCommunitySigningKey.asc\nserver@ubuntu:~$ gpg --import GBCommunitySigningKey.asc\n\ngpg: /home/$USER/.gnupg/trustdb.gpg: trustdb created\ngpg: key 9823FAA60ED1E580: public key &quot;Greenbone Community Feed integrity key&quot; imported\ngpg: Total number processed: 1\ngpg:               imported: 1\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Next edit and add the GPG key to the ultimately trusted list.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ gpg --edit-key 9823FAA60ED1E580\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You&#39;ll be presented with following information and options as below. First type <em>trust</em> and select option 5 (I trust ultimately).</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gpg (GnuPG) 2.2.19; Copyright (C) 2019 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\npub  rsa4096/9823FAA60ED1E580\n     created: 2017-09-06  expires: never       usage: SC\n     trust: unknown       validity: unknown\n[ unknown] (1). Greenbone Community Feed integrity key\n\ngpg&gt; trust\npub  rsa4096/9823FAA60ED1E580\n     created: 2017-09-06  expires: never       usage: SC\n     trust: unknown       validity: unknown\n[ unknown] (1). Greenbone Community Feed integrity key\n\nPlease decide how far you trust this user to correctly verify other users&#39; keys\n(by looking at passports, checking fingerprints from different sources, etc.)\n\n  1 = I don&#39;t know or won&#39;t say\n  2 = I do NOT trust\n  3 = I trust marginally\n  4 = I trust fully\n  5 = I trust ultimately\n  m = back to the main menu\n\nYour decision? 5\nDo you really want to set this key to ultimate trust? (y/N) y\n\npub  rsa4096/9823FAA60ED1E580\n     created: 2017-09-06  expires: never       usage: SC\n     trust: ultimate      validity: unknown\n[ unknown] (1). Greenbone Community Feed integrity key\nPlease note that the shown key validity is not necessarily correct\nunless you restart the program.\n\ngpg&gt; quit\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="specify-greenbone-vulnerability-manager-version" tabindex="-1"><a class="header-anchor" href="#specify-greenbone-vulnerability-manager-version" aria-hidden="true">#</a> Specify Greenbone Vulnerability Manager version</h3><p>Set the GVM version to 21.4.2.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export GVM_VERSION=21.4.2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="build-gvm-libraries" tabindex="-1"><a class="header-anchor" href="#build-gvm-libraries" aria-hidden="true">#</a> Build GVM libraries</h3>',36),N=(0,a.Uk)("Download and build the "),G={href:"https://github.com/greenbone/gvm-libs",target:"_blank",rel:"noopener noreferrer"},L=(0,a.Uk)("GVM libraries"),C=(0,a.Uk)(" version 21.04 (21.4.1). Set the GVM libraries to same version as GVM."),M=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export GVM_LIBS_VERSION=$GVM_VERSION\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Download the specified GVM libraries version.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ curl -f -L https://github.com/greenbone/gvm-libs/archive/refs/tags/v$GVM_LIBS_VERSION.tar.gz -o $SOURCE_DIR/gvm-libs-$GVM_LIBS_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/gvm-libs/releases/download/v$GVM_LIBS_VERSION/gvm-libs-$GVM_LIBS_VERSION.tar.gz.asc -o $SOURCE_DIR/gvm-libs-$GVM_LIBS_VERSION.tar.gz.asc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Verify the GVM libraries.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ gpg --verify $SOURCE_DIR/gvm-libs-$GVM_LIBS_VERSION.tar.gz.asc $SOURCE_DIR/gvm-libs-$GVM_LIBS_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Make sure the output says that the signature from Greenbone Community Feed is good.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gpg: Signature made Tue 03 Aug 2021 12:11:44 PM UTC\ngpg:                using RSA key 8AE4BE429B60A59B311C2E739823FAA60ED1E580\ngpg: Good signature from &quot;Greenbone Community Feed integrity key&quot; [ultimate]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Continue to extract the gvm-libs file.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ tar -C $SOURCE_DIR -xvzf $SOURCE_DIR/gvm-libs-$GVM_LIBS_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Next create build folder for gvm-libs.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ mkdir -p $BUILD_DIR/gvm-libs &amp;&amp; cd $BUILD_DIR/gvm-libs\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Proceed to build the gvm-libs source.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cmake $SOURCE_DIR/gvm-libs-$GVM_LIBS_VERSION \\\n  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DSYSCONFDIR=/etc \\\n  -DLOCALSTATEDIR=/var \\\n  -DGVM_PID_DIR=/run/gvm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Install gvm-libs by running the command below.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ make DESTDIR=$INSTALL_DIR install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Finally clean up.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp -rv $INSTALL_DIR/* /\nserver@ubuntu:~$ rm -rf $INSTALL_DIR/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="build-the-greenbone-vulnerability-manager" tabindex="-1"><a class="header-anchor" href="#build-the-greenbone-vulnerability-manager" aria-hidden="true">#</a> Build the Greenbone Vulnerability Manager</h3>',18),T=(0,a.Uk)("Next download and build the "),P={href:"https://github.com/greenbone/gvmd",target:"_blank",rel:"noopener noreferrer"},z=(0,a.Uk)("Greenbone Vulnerability Manager (GVM)"),B=(0,a.Uk)(" version 21.04 (21.4.3). Set the GVMD version to the latest realese 21.4.3."),F=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export GVMD_VERSION=21.4.3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Proceed to download set version.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ curl -f -L https://github.com/greenbone/gvmd/archive/refs/tags/v$GVMD_VERSION.tar.gz -o $SOURCE_DIR/gvmd-$GVMD_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/gvmd/releases/download/v$GVMD_VERSION/gvmd-$GVMD_VERSION.tar.gz.asc -o $SOURCE_DIR/gvmd-$GVMD_VERSION.tar.gz.asc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Verify the GVMD download.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ gpg --verify $SOURCE_DIR/gvmd-$GVMD_VERSION.tar.gz.asc $SOURCE_DIR/gvmd-$GVMD_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Make sure the output says that the signature from Greenbone Community Feed is good.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gpg: Signature made Tue 03 Aug 2021 02:28:53 PM UTC\ngpg:                using RSA key 8AE4BE429B60A59B311C2E739823FAA60ED1E580\ngpg: Good signature from &quot;Greenbone Community Feed integrity key&quot; [ultimate]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Extract the downloaded GVMD file.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ tar -C $SOURCE_DIR -xvzf $SOURCE_DIR/gvmd-$GVMD_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Next create the build folder for GVMD.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ mkdir -p $BUILD_DIR/gvmd &amp;&amp; cd $BUILD_DIR/gvmd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Build GVMD running below command.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cmake $SOURCE_DIR/gvmd-$GVMD_VERSION \\\n  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DLOCALSTATEDIR=/var \\\n  -DSYSCONFDIR=/etc \\\n  -DGVM_DATA_DIR=/var \\\n  -DGVM_RUN_DIR=/run/gvm \\\n  -DOPENVAS_DEFAULT_SOCKET=/run/ospd/ospd-openvas.sock \\\n  -DGVM_FEED_LOCK_PATH=/var/lib/gvm/feed-update.lock \\\n  -DSYSTEMD_SERVICE_DIR=/lib/systemd/system \\\n  -DDEFAULT_CONFIG_DIR=/etc/default \\\n  -DLOGROTATE_DIR=/etc/logrotate.d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Install GVMD.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ make DESTDIR=$INSTALL_DIR install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Clean up.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp -rv $INSTALL_DIR/* /\nserver@ubuntu:~$ rm -rf $INSTALL_DIR/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="build-the-greenbone-security-assistant" tabindex="-1"><a class="header-anchor" href="#build-the-greenbone-security-assistant" aria-hidden="true">#</a> Build the Greenbone Security Assistant</h3>',18),q=(0,a.Uk)("Proceed to download and build the "),W={href:"https://github.com/greenbone/gsa",target:"_blank",rel:"noopener noreferrer"},Y=(0,a.Uk)("Greenbone Security Assistant (GSA)"),K=(0,a.Uk)(" version 21.04 (21.4.2)."),H=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export GSA_VERSION=$GVM_VERSION\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Download Greenbone Security Assistant and its node modules.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ curl -f -L https://github.com/greenbone/gsa/archive/refs/tags/v$GSA_VERSION.tar.gz -o $SOURCE_DIR/gsa-$GSA_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/gsa/releases/download/v$GSA_VERSION/gsa-$GSA_VERSION.tar.gz.asc -o $SOURCE_DIR/gsa-$GSA_VERSION.tar.gz.asc\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/gsa/releases/download/v$GSA_VERSION/gsa-node-modules-$GSA_VERSION.tar.gz -o $SOURCE_DIR/gsa-node-modules-$GSA_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/gsa/releases/download/v$GSA_VERSION/gsa-node-modules-$GSA_VERSION.tar.gz.asc -o $SOURCE_DIR/gsa-node-modules-$GSA_VERSION.tar.gz.asc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Once complete verify the GSA downloads and make sure the signature from Greenbone Community Feed is good.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ gpg --verify $SOURCE_DIR/gsa-$GSA_VERSION.tar.gz.asc $SOURCE_DIR/gsa-$GSA_VERSION.tar.gz\nserver@ubuntu:~$ gpg --verify $SOURCE_DIR/gsa-node-modules-$GSA_VERSION.tar.gz.asc $SOURCE_DIR/gsa-node-modules-$GSA_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Extract the GSA and its node modules.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ tar -C $SOURCE_DIR -xvzf $SOURCE_DIR/gsa-$GSA_VERSION.tar.gz\nserver@ubuntu:~$ tar -C $SOURCE_DIR/gsa-$GSA_VERSION/gsa -xvzf $SOURCE_DIR/gsa-node-modules-$GSA_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Proceed to create the GSA build folder.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ mkdir -p $BUILD_DIR/gsa &amp;&amp; cd $BUILD_DIR/gsa\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Once you&#39;ve created the build folder build the GSA source.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cmake $SOURCE_DIR/gsa-$GSA_VERSION \\\n  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DSYSCONFDIR=/etc \\\n  -DLOCALSTATEDIR=/var \\\n  -DGVM_RUN_DIR=/run/gvm \\\n  -DGSAD_PID_DIR=/run/gvm \\\n  -DLOGROTATE_DIR=/etc/logrotate.d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Next run the installation and clean up.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ make DESTDIR=$INSTALL_DIR install\nserver@ubuntu:~$ sudo cp -rv $INSTALL_DIR/* /\nserver@ubuntu:~$ rm -rf $INSTALL_DIR/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="build-the-openvas-smb-module" tabindex="-1"><a class="header-anchor" href="#build-the-openvas-smb-module" aria-hidden="true">#</a> Build the OpenVAS SMB module</h3>',14),X=(0,a.Uk)("Download and build the "),j={href:"https://github.com/greenbone/openvas-smb",target:"_blank",rel:"noopener noreferrer"},Q=(0,a.Uk)("openvas-scanner (OpenVAS)"),J=(0,a.Uk)(" version 21.04."),Z=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export OPENVAS_SMB_VERSION=21.4.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ curl -f -L https://github.com/greenbone/openvas-smb/archive/refs/tags/v$OPENVAS_SMB_VERSION.tar.gz -o $SOURCE_DIR/openvas-smb-$OPENVAS_SMB_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/openvas-smb/releases/download/v$OPENVAS_SMB_VERSION/openvas-smb-$OPENVAS_SMB_VERSION.tar.gz.asc -o $SOURCE_DIR/openvas-smb-$OPENVAS_SMB_VERSION.tar.gz.asc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Run the gpg command to verify the downloaded file.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ gpg --verify $SOURCE_DIR/openvas-smb-$OPENVAS_SMB_VERSION.tar.gz.asc $SOURCE_DIR/openvas-smb-$OPENVAS_SMB_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gpg: Signature made Fri 25 Jun 2021 06:36:43 AM UTC\ngpg:                using RSA key 8AE4BE429B60A59B311C2E739823FAA60ED1E580\ngpg: Good signature from &quot;Greenbone Community Feed integrity key&quot; [ultimate]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Extract files.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ tar -C $SOURCE_DIR -xvzf $SOURCE_DIR/openvas-smb-$OPENVAS_SMB_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Create the build folder.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ mkdir -p $BUILD_DIR/openvas-smb &amp;&amp; cd $BUILD_DIR/openvas-smb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Build openvas-smb to enable scans for Windows systems.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cmake $SOURCE_DIR/openvas-smb-$OPENVAS_SMB_VERSION \\\n  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \\\n  -DCMAKE_BUILD_TYPE=Release\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Proceed with installation.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ make DESTDIR=$INSTALL_DIR install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Copy the installation and remove the temporary installation directory.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp -rv $INSTALL_DIR/* /\nserver@ubuntu:~$ rm -rf $INSTALL_DIR/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="build-the-openvas-scanner" tabindex="-1"><a class="header-anchor" href="#build-the-openvas-scanner" aria-hidden="true">#</a> Build the OpenVAS Scanner</h3>',16),ee=(0,a.Uk)("Download and build the "),ne={href:"https://github.com/greenbone/openvas",target:"_blank",rel:"noopener noreferrer"},se=(0,a.Uk)("openvas-scanner (OpenVAS)"),ae=(0,a.Uk)(" version 21.04 (21.4.1)."),re=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export OPENVAS_SCANNER_VERSION=$GVM_VERSION\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ curl -f -L https://github.com/greenbone/openvas-scanner/archive/refs/tags/v$OPENVAS_SCANNER_VERSION.tar.gz -o $SOURCE_DIR/openvas-scanner-$OPENVAS_SCANNER_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/openvas-scanner/releases/download/v$OPENVAS_SCANNER_VERSION/openvas-scanner-$OPENVAS_SCANNER_VERSION.tar.gz.asc -o $SOURCE_DIR/openvas-scanner-$OPENVAS_SCANNER_VERSION.tar.gz.asc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>As prior verify the downloaded source file.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ gpg --verify $SOURCE_DIR/openvas-scanner-$OPENVAS_SCANNER_VERSION.tar.gz.asc $SOURCE_DIR/openvas-scanner-$OPENVAS_SCANNER_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gpg: Signature made Tue 03 Aug 2021 12:59:52 PM UTC\ngpg:                using RSA key 8AE4BE429B60A59B311C2E739823FAA60ED1E580\ngpg: Good signature from &quot;Greenbone Community Feed integrity key&quot; [ultimate]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>If all good proceed to extract the OpenVAS scanner.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ tar -C $SOURCE_DIR -xvzf $SOURCE_DIR/openvas-scanner-$OPENVAS_SCANNER_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Create the OpenVAS scanner build directory.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ mkdir -p $BUILD_DIR/openvas-scanner &amp;&amp; cd $BUILD_DIR/openvas-scanner\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Build the OpenVAS scanner.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cmake $SOURCE_DIR/openvas-scanner-$OPENVAS_SCANNER_VERSION \\\n  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DSYSCONFDIR=/etc \\\n  -DLOCALSTATEDIR=/var \\\n  -DOPENVAS_FEED_LOCK_PATH=/var/lib/openvas/feed-update.lock \\\n  -DOPENVAS_RUN_DIR=/run/ospd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Next install the scanner.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ make DESTDIR=$INSTALL_DIR install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Finally clean up.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp -rv $INSTALL_DIR/* /\nserver@ubuntu:~$ rm -rf $INSTALL_DIR/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="download-and-install-the-base-class-ospd-21-4-3-for-scanner-wrappers-and-ospd-openvas-for-remote-control" tabindex="-1"><a class="header-anchor" href="#download-and-install-the-base-class-ospd-21-4-3-for-scanner-wrappers-and-ospd-openvas-for-remote-control" aria-hidden="true">#</a> Download and install the base class ospd (21.4.3) for scanner wrappers and ospd-openvas for remote control</h3>',16),te=(0,a.Uk)("Proceed to download and install "),le={href:"https://github.com/greenbone/ospd",target:"_blank",rel:"noopener noreferrer"},ie=(0,a.Uk)("ospd"),ue=(0,a.Uk)("."),oe=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ export OSPD_VERSION=21.4.3\nserver@ubuntu:~$ export OSPD_OPENVAS_VERSION=$GVM_VERSION\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ curl -f -L https://github.com/greenbone/ospd/archive/refs/tags/v$OSPD_VERSION.tar.gz -o $SOURCE_DIR/ospd-$OSPD_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/ospd/releases/download/v$OSPD_VERSION/ospd-$OSPD_VERSION.tar.gz.asc -o $SOURCE_DIR/ospd-$OSPD_VERSION.tar.gz.asc\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/ospd-openvas/archive/refs/tags/v$OSPD_OPENVAS_VERSION.tar.gz -o $SOURCE_DIR/ospd-openvas-$OSPD_OPENVAS_VERSION.tar.gz\nserver@ubuntu:~$ curl -f -L https://github.com/greenbone/ospd-openvas/releases/download/v$OSPD_OPENVAS_VERSION/ospd-openvas-$OSPD_OPENVAS_VERSION.tar.gz.asc -o $SOURCE_DIR/ospd-openvas-$OSPD_OPENVAS_VERSION.tar.gz.asc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Verify ospd and ospd-openvas.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ gpg --verify $SOURCE_DIR/ospd-$OSPD_VERSION.tar.gz.asc $SOURCE_DIR/ospd-$OSPD_VERSION.tar.gz\nserver@ubuntu:~$ gpg --verify $SOURCE_DIR/ospd-openvas-$OSPD_OPENVAS_VERSION.tar.gz.asc $SOURCE_DIR/ospd-openvas-$OSPD_OPENVAS_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Continue by extracting both files.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ tar -C $SOURCE_DIR -xvzf $SOURCE_DIR/ospd-$OSPD_VERSION.tar.gz\nserver@ubuntu:~$ tar -C $SOURCE_DIR -xvzf $SOURCE_DIR/ospd-openvas-$OSPD_OPENVAS_VERSION.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Before you install ospd and ospd-openvas make sure that you&#39;ve got the required version of python3-psutil (5.7.2).</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ pip install --upgrade psutil==5.7.2\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Once you&#39;ve installed Python3-psutil 5.7.2 go to the source directory of ospd.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cd $SOURCE_DIR/ospd-$OSPD_VERSION\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Run the installation.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ python3 -m pip install . --prefix=$INSTALL_PREFIX --root=$INSTALL_DIR\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Successfully built ospd wrapt\nInstalling collected packages: wrapt, deprecated, ospd\nSuccessfully installed deprecated-1.2.12 ospd-21.4.3 wrapt-1.12.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Proceed to install ospd-openvas and go to its source directory.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ cd $SOURCE_DIR/ospd-openvas-$OSPD_OPENVAS_VERSION\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Run the ospd-openvas installation.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ python3 -m pip install . --prefix=$INSTALL_PREFIX --root=$INSTALL_DIR --no-warn-script-location\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Clean up.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp -rv $INSTALL_DIR/* /\nserver@ubuntu:~$ rm -rf $INSTALL_DIR/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="build-the-gvm-tools" tabindex="-1"><a class="header-anchor" href="#build-the-gvm-tools" aria-hidden="true">#</a> Build the GVM tools</h3>',20),de=(0,a.Uk)("Install "),ce={href:"https://github.com/greenbone/gvm-tools",target:"_blank",rel:"noopener noreferrer"},pe=(0,a.Uk)("GVM tools"),be=(0,a.Uk)(" version 21.04 (21.6.1)."),me=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ python3 -m pip install --user gvm-tools\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="configure-redis" tabindex="-1"><a class="header-anchor" href="#configure-redis" aria-hidden="true">#</a> Configure Redis</h3><p>Next configure redis for the default GVM installation.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp $SOURCE_DIR/openvas-scanner-$GVM_VERSION/config/redis-openvas.conf /etc/redis/\nserver@ubuntu:~$ sudo chown redis:redis /etc/redis/redis-openvas.conf\nserver@ubuntu:~$ echo &quot;db_address = /run/redis-openvas/redis.sock&quot; | sudo tee -a /etc/openvas/openvas.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Start the redis server and enable it as an start up service.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo systemctl start redis-server@openvas.service\nserver@ubuntu:~$ sudo systemctl enable redis-server@openvas.service\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Add redis to the GVM group.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo usermod -aG redis gvm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="set-up-gvm-user-permissions" tabindex="-1"><a class="header-anchor" href="#set-up-gvm-user-permissions" aria-hidden="true">#</a> Set up GVM user permissions</h3><p>Make sure that the GVM user and the GVM group has correct permissions.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo chown -R gvm:gvm /var/lib/gvm\nserver@ubuntu:~$ sudo chown -R gvm:gvm /var/lib/openvas\nserver@ubuntu:~$ sudo chown -R gvm:gvm /var/log/gvm\nserver@ubuntu:~$ sudo chown -R gvm:gvm /run/gvm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo chmod -R g+srw /var/lib/gvm\nserver@ubuntu:~$ sudo chmod -R g+srw /var/lib/openvas\nserver@ubuntu:~$ sudo chmod -R g+srw /var/log/gvm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo chown gvm:gvm /usr/local/sbin/gvmd\nserver@ubuntu:~$ sudo chmod 6750 /usr/local/sbin/gvmd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>You also need to adjust the permissions for the feed synchronization.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo chown gvm:gvm /usr/local/bin/greenbone-nvt-sync\nserver@ubuntu:~$ sudo chmod 740 /usr/local/sbin/greenbone-feed-sync\nserver@ubuntu:~$ sudo chown gvm:gvm /usr/local/sbin/greenbone-*-sync\nserver@ubuntu:~$ sudo chmod 740 /usr/local/sbin/greenbone-*-sync\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>OpenVAS will be launched from an ospd-openvas process. The process need to be executed using root. Update the secure path in the sudoers file accordingly.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># Allow members of group sudo to execute any command\n%sudo   ALL=(ALL:ALL) ALL\n\n# allow users of the gvm group run openvas\n%gvm ALL = NOPASSWD: /usr/local/sbin/openvas\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="configure-postgresql-database" tabindex="-1"><a class="header-anchor" href="#configure-postgresql-database" aria-hidden="true">#</a> Configure PostgreSQL database</h3>',18),ge=(0,a.Uk)("For additional information see reference greenbone/gvmd "),ve={href:"https://github.com/greenbone/gvmd/blob/master/INSTALL.md",target:"_blank",rel:"noopener noreferrer"},he=(0,a.Uk)("INSTALL.md"),xe=(0,a.Uk)("."),fe=(0,a.uE)('<p>First make sure that the required dependencies have been installed (see <a href="#prerequisites">Prerequisites</a>). Proceed to create a Postgres user and database.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo -u postgres bash\npostgres@ubuntu:/home/server$ createuser -DRS gvm\npostgres@ubuntu:/home/server$ createdb -O gvm gvmd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Setup correct permissions.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>postgres@ubuntu:/home/server$ psql gvmd\ngvmd=# create role dba with superuser noinherit;\ngvmd=# grant dba to gvm;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Create database extensions.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gvmd=# create extension &quot;uuid-ossp&quot;;\ngvmd=# create extension &quot;pgcrypto&quot;;\ngvmd=# exit\npostgres@ubuntu:/home/server$ exit\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="create-gvm-admin" tabindex="-1"><a class="header-anchor" href="#create-gvm-admin" aria-hidden="true">#</a> Create GVM admin</h3><p>Create the GVM administration user. Do not forget to change the password later.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Do not use special characters in the password.</p></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo /usr/local/sbin/gvmd --create-user=admin --password=admin\nUser created.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Next, lets retrieve our administrators uuid.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo gvmd --get-users --verbose\nadmin 0279ba6c-391a-472f-8cbd-1f6eb808823b\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Use the administration uuid and modify the gvmd settings. Remember to put your uuid as the value option.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo gvmd --modify-setting 78eceaec-3385-11ea-b237-28d24461215b --value UUID_HERE\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="update-network-vulnerability-tests" tabindex="-1"><a class="header-anchor" href="#update-network-vulnerability-tests" aria-hidden="true">#</a> Update Network Vulnerability Tests</h3><p>Update Network Vulnerability Tests (NVT) from Greenbone Community Feed (this might take awhile).</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo -u gvm greenbone-nvt-sync\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="update-greenbone-feed-synchronisation" tabindex="-1"><a class="header-anchor" href="#update-greenbone-feed-synchronisation" aria-hidden="true">#</a> Update Greenbone Feed synchronisation</h3><p>Update the Greenbone feed synchronisation one at the time (this might take awhile).</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo -u gvm greenbone-feed-sync --type GVMD_DATA\nserver@ubuntu:~$ sudo -u gvm greenbone-feed-sync --type SCAP\nserver@ubuntu:~$ sudo -u gvm greenbone-feed-sync --type CERT\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="generate-gvm-certificates" tabindex="-1"><a class="header-anchor" href="#generate-gvm-certificates" aria-hidden="true">#</a> Generate GVM certificates</h3><p>Once we&#39;ve finished the feed synchronisation generate GVM certificates.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo -u gvm gvm-manage-certs -a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="set-up-systemd" tabindex="-1"><a class="header-anchor" href="#set-up-systemd" aria-hidden="true">#</a> Set up systemd</h3><p>Next setup the startup scripts. First, configure the Greenbone Manager startup script.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cat &lt;&lt; EOF &gt; $BUILD_DIR/gvmd.service\n[Unit]\nDescription=Greenbone Vulnerability Manager daemon (gvmd)\nAfter=network.target networking.service postgresql.service ospd-openvas.service\nWants=postgresql.service ospd-openvas.service\nDocumentation=man:gvmd(8)\nConditionKernelCommandLine=!recovery\n\n[Service]\nType=forking\nUser=gvm\nGroup=gvm\nPIDFile=/run/gvm/gvmd.pid\nRuntimeDirectory=gvm\nRuntimeDirectoryMode=2775\nExecStart=/usr/local/sbin/gvmd --osp-vt-update=/run/ospd/ospd-openvas.sock --listen-group=gvm\nRestart=always\nTimeoutStopSec=10\n\n[Install]\nWantedBy=multi-user.target\nEOF\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp $BUILD_DIR/gvmd.service /etc/systemd/system/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Once the first startup script is saved, proceed to create the script for the Greenbone Security Assistant (GSA).</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cat &lt;&lt; EOF &gt; $BUILD_DIR/gsad.service\n[Unit]\nDescription=Greenbone Security Assistant daemon (gsad)\nDocumentation=man:gsad(8) https://www.greenbone.net\nAfter=network.target gvmd.service\nWants=gvmd.service\n\n[Service]\nType=forking\nUser=gvm\nGroup=gvm\nPIDFile=/run/gvm/gsad.pid\nExecStart=/usr/local/sbin/gsad --listen=192.168.0.1 --port=9392\nRestart=always\nTimeoutStopSec=10\n\n[Install]\nWantedBy=multi-user.target\nAlias=greenbone-security-assistant.service\nEOF\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp $BUILD_DIR/gsad.service /etc/systemd/system/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Create the systemd service script for ospd-openvas.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cat &lt;&lt; EOF &gt; $BUILD_DIR/ospd-openvas.service\n[Unit]\nDescription=OSPd Wrapper for the OpenVAS Scanner (ospd-openvas)\nDocumentation=man:ospd-openvas(8) man:openvas(8)\nAfter=network.target networking.service redis-server@openvas.service\nWants=redis-server@openvas.service\nConditionKernelCommandLine=!recovery\n\n[Service]\nType=forking\nUser=gvm\nGroup=gvm\nRuntimeDirectory=ospd\nRuntimeDirectoryMode=2775\nPIDFile=/run/ospd/ospd-openvas.pid\nExecStart=/usr/local/bin/ospd-openvas --unix-socket /run/ospd/ospd-openvas.sock --pid-file /run/ospd/ospd-openvas.pid --log-file /var/log/gvm/ospd-openvas.log --lock-file-dir /var/lib/openvas --socket-mode 0o770\nSuccessExitStatus=SIGKILL\nRestart=always\nRestartSec=60\n\n[Install]\nWantedBy=multi-user.target\nEOF\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo cp $BUILD_DIR/ospd-openvas.service /etc/systemd/system/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="modify-scanner" tabindex="-1"><a class="header-anchor" href="#modify-scanner" aria-hidden="true">#</a> Modify scanner</h3><p>Before running vulnerability scans, also known as tasks, you need to modify the default OpenVAS scanner. Get the pre-exisiting scanners by running command below. Copy the UUID from the OpenVAS Default Scanner.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo gvmd --get-scanners\n6acd0832-df90-11e4-b9d5-28d24461215b  CVE    0  CVE\n08b69003-5fc2-4037-a479-93b440211c73  OpenVAS  /opt/gvm/var/run/ospd.sock  0  OpenVAS Default\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Next run the modification command and attach the UUID to the scanner host socket.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo gvmd --modify-scanner=08b69003-5fc2-4037-a479-93b440211c73 --scanner-host=/run/ospd/ospd-openvas.sock\nScanner modified.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="enable-and-start-services" tabindex="-1"><a class="header-anchor" href="#enable-and-start-services" aria-hidden="true">#</a> Enable and start services</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo systemctl daemon-reload\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo systemctl enable ospd-openvas\nserver@ubuntu:~$ sudo systemctl enable gvmd\nserver@ubuntu:~$ sudo systemctl enable gsad\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo systemctl start ospd-openvas\nserver@ubuntu:~$ sudo systemctl start gvmd\nserver@ubuntu:~$ sudo systemctl start gsad\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Next check that all the services are running.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo systemctl status gvmd\n● gvmd.service - Greenbone Vulnerability Manager daemon (gvmd)\n     Loaded: loaded (/etc/systemd/system/gvmd.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sat 2021-08-28 20:23:46 UTC; 54min ago\nserver@ubuntu:~$ sudo systemctl status gsad\n● gsad.service - Greenbone Security Assistant daemon (gsad)\n     Loaded: loaded (/etc/systemd/system/gsad.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sat 2021-08-28 20:50:09 UTC; 28min ago\nserver@ubuntu:~$ sudo systemctl status ospd-openvas\n● ospd-openvas.service - OSPd Wrapper for the OpenVAS Scanner (ospd-openvas)\n     Loaded: loaded (/etc/systemd/system/ospd-openvas.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sat 2021-08-28 20:48:04 UTC; 31min ago\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Login at your localhost e.g. <code>https://192.168.0.1:9392</code> with the username <code>admin</code> and the chosen password.</p>',45),Se=["src"],_e=(0,a._)("p",null,[(0,a.Uk)("Once logged in, go to the "),(0,a._)("em",null,"Administration"),(0,a.Uk)(" tab and select "),(0,a._)("em",null,"Feed Status"),(0,a.Uk)(". You'll see that the update is in progress (this might take awhile). When the status changed to "),(0,a._)("em",null,"current"),(0,a.Uk)(", go to the dashboard and it will be populated with CVEs by creation time and NVTs by severity class.")],-1),ye=["src"],Re=(0,a._)("p",null,[(0,a.Uk)("You may also confirm the current version, go to the "),(0,a._)("em",null,"Help"),(0,a.Uk)(" tab and select "),(0,a._)("em",null,"About"),(0,a.Uk)(".")],-1),Ee=["src"],Ie=(0,a._)("p",null,[(0,a.Uk)("To run basic vulnerability scans and get hands-on approach to get started with OpenVAS check the "),(0,a._)("a",{href:"#running-vulnerability-scans"},"Running vulnerability scans"),(0,a.Uk)(" section.")],-1),$e=(0,a._)("h2",{id:"install-gvm-20-08-centos",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#install-gvm-20-08-centos","aria-hidden":"true"},"#"),(0,a.Uk)(" Install GVM 20.08 CentOS")],-1),ke={href:"https://github.com/Atomicorp/openvas",target:"_blank",rel:"noopener noreferrer"},De=(0,a.Uk)("Atomicorp GVM package"),Oe=(0,a.Uk)(),Ae=(0,a.uE)('<p>Check if SELinux is enabled.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ sestatus\nSELinux status:                 enabled\nSELinuxfs mount:                /sys/fs/selinux\nSELinux root directory:         /etc/selinux\nLoaded policy name:             targeted\nCurrent mode:                   enforcing\nMode from config file:          enforcing\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If enabled proceed to disable SELinux by running the command below and update the SELinux configuration file.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ sudo setenforce 0\nserver@centos:~$ sudo nano /etc/selinux/config\n\n# This file controls the state of SELinux on the system.\n# SELINUX= can take one of these three values:\n#     enforcing - SELinux security policy is enforced.\n#     permissive - SELinux prints warnings instead of enforcing.\n#     disabled - No SELinux policy is loaded.\nSELINUX=disabled\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Save and reboot the system.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ sudo shutdown -r now\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Once the system rebooted control that SELinux been disabled.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ sestatus\nSELinux status:                 disabled\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Continue and download the Atomicorp installer.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ wget -q -O - https://updates.atomicorp.com/installers/atomic | sudo sh\n\nFor supported software packages please contact us at: \n\n  sales@atomicorp.com\n\nDo you agree to these terms? (yes/no) [Default: yes] yes\nEnable repo by default? (yes/no) [Default: yes]: yes\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Enable PowerTools and install extra packages.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ sudo yum config-manager --set-enabled PowerTools\nserver@centos:~$ sudo yum install epel-release\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Proceed and install GVM.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ sudo yum install gvm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Finally run the GVM configuration script to setup GVM (this might take awhile).</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@centos:~$ sudo gvm-setup\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Once the GVM setup been complete proceed to set the administrator password.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Do not use special characters in the password.</p></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Updating OpenVAS Manager certificates: Complete\n\nGVMD startup: Done\n\nSet the GSAD admin users password.\nThe admin user is used to configure accounts,\nUpdate NVT&#39;s manually, and manage roles.\n\nEnter Administrator Password:\nVerify Administrator Password:\n\nSetup complete\n  Log in to GSAD at https://localhost\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>Login at your localhost e.g. <code>https://192.168.0.1</code> with the username <code>admin</code> and the chosen password.</p>',20),Ve=["src"],we=(0,a.uE)('<h2 id="running-vulnerability-scans" tabindex="-1"><a class="header-anchor" href="#running-vulnerability-scans" aria-hidden="true">#</a> Running vulnerability scans</h2><p>There is several approaches on how to configure and run tasks (scans) toward your targets (hosts) in GVM. In this tutorial we will go through how to run the more basic tasks. We will do both unauthenticated scans, where we do not grant GVM SSH access to our target, and authenticated scans to help identify internal server vulnerabilites or misconfigurations.</p><h3 id="unauthenticated-scan" tabindex="-1"><a class="header-anchor" href="#unauthenticated-scan" aria-hidden="true">#</a> Unauthenticated scan</h3><br><p align="center"><video width="600" controls poster="/img/icons/video.png" style="witdth:100%;height:auto;"><source src="/vids/openvas/unauthenticated_scan.mp4" type="video/mp4"> Your browser does not support the video tag. </video></p><p>Login to the Greenbone Security Assistant (GSA) e.g. <code>https://192.168.0.1</code>. Once logged in we will add our first target. Go the the <em>Configuration</em> menu in the top navigation and select <em>Targets</em>.</p>',6),Ue=["src"],Ne=(0,a._)("p",null,[(0,a.Uk)("In the top left corner of the "),(0,a._)("em",null,"Targets"),(0,a.Uk)(" view there's a starred document icon, click and select to create a "),(0,a._)("em",null,"New Target"),(0,a.Uk)(". Fill in the name of the target server e.g. "),(0,a._)("em",null,"Ubuntu Client"),(0,a.Uk)(" and its IP address "),(0,a._)("code",null,"192.168.0.2"),(0,a.Uk)(". Leave the rest of the settings in default.")],-1),Ge=["src"],Le=(0,a._)("p",null,[(0,a.Uk)("Next we will create a task for unauthenticated targets (scans without SSH access). Go the "),(0,a._)("em",null,"Scans"),(0,a.Uk)(" in the top menu and select "),(0,a._)("em",null,"Tasks"),(0,a.Uk)(".")],-1),Ce=["src"],Me=(0,a._)("p",null,[(0,a.Uk)("Click the starred document icon in the top left corner of the "),(0,a._)("em",null,"Tasks"),(0,a.Uk)(" view.")],-1),Te=["src"],Pe=(0,a._)("p",null,[(0,a.Uk)("Select a descriptive name for your task e.g. Unauthenticated scan. In the "),(0,a._)("em",null,"Scan Targets"),(0,a.Uk)(" dropdown menu select your target we created before (Ubuntu Client). Leave the default settings and click save.")],-1),ze=["src"],Be=(0,a._)("p",null,[(0,a.Uk)("You will then be redirected back to the "),(0,a._)("em",null,"Tasks"),(0,a.Uk)(" overview and our new task will be listed in the table below the graphs. To start the scan press the start button on the right side of the table.")],-1),Fe=["src"],qe=(0,a._)("h3",{id:"authenticated-scan",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#authenticated-scan","aria-hidden":"true"},"#"),(0,a.Uk)(" Authenticated scan")],-1),We=(0,a._)("p",null,[(0,a.Uk)("First make sure that you've generated SSH keys for your GVM client user e.g. "),(0,a._)("code",null,"client@ubuntu"),(0,a.Uk)(". Add your public key to the targets authorized keys file. You may have to connect to your target host, through SSH, before running GVM vulnerability scan to add the target host to your clients machine known hosts. Once you've established a secure communication between your client and target, proceed to configure credentials in the Greenbone Security Assistant. Go to "),(0,a._)("em",null,"Configuration"),(0,a.Uk)(" and select "),(0,a._)("em",null,"Credentials"),(0,a.Uk)(".")],-1),Ye=["src"],Ke=(0,a._)("p",null,[(0,a.Uk)("Next click the starred document in the top left corner to create your new credentials. Give the credentials a desciptive name with an optional comment. In the dropdown menu "),(0,a._)("em",null,"Type"),(0,a.Uk)(", select "),(0,a._)("em",null,"Username + SSH key"),(0,a.Uk)(" and disallow insecure use and auto-generation. Add the username of the target host user followed by the password and upload the private key (e.g. id_rsa). Click save.")],-1),He=["src"],Xe=(0,a._)("p",null,[(0,a.Uk)("Go to the "),(0,a._)("em",null,"Targets"),(0,a.Uk)(" section and either edit your "),(0,a._)("a",{href:"#unauthenticated-scan"},"unauthenticated scan"),(0,a.Uk)(" or create a new target. Set the host IP address and in the dropdown menu, under the "),(0,a._)("em",null,"Credentials for authentication checks"),(0,a.Uk)(", select your newly created SSH credential.")],-1),je=["src"],Qe=(0,a._)("p",null,"Finally create a new task and select the target that we attached our credentials to and leave the default settings.",-1),Je=["src"],Ze=(0,a._)("h2",{id:"two-factor-authentication-w-privacyidea",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#two-factor-authentication-w-privacyidea","aria-hidden":"true"},"#"),(0,a.Uk)(" Two-factor authentication w/ privacyIDEA")],-1),en=(0,a.Uk)("To enforce two-factor authentication for Greenbone Security Assistant with privacyIDEA and YubiKey read the "),nn=(0,a.Uk)("Two-factor authentication w/ privacyIDEA and YubiKey"),sn=(0,a.Uk)(" chapter."),an=(0,a.uE)('<h2 id="scheduled-jobs" tabindex="-1"><a class="header-anchor" href="#scheduled-jobs" aria-hidden="true">#</a> Scheduled jobs</h2><p>To keep the community feed up-to-date, first login as your GVM user.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo su - gvm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Create the file that we will populate with the required commands.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gvm@ubuntu:~$ touch /opt/gvm/bin/openvas-update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Make the file executable.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gvm@ubuntu:~$ chmod a+x /opt/gvm/bin/openvas-update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Enter the commands that we will run daily.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gvm@ubuntu:~$ nano /opt/gvm/bin/openvas-update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/opt/gvm/bin/greenbone-nvt-sync\n/opt/gvm/sbin/greenbone-feed-sync --type GVMD_DATA\n/opt/gvm/sbin/greenbone-feed-sync --type SCAP\n/opt/gvm/sbin/greenbone-feed-sync --type CERT\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Edit the GVM users crontab and add the script we created to check for daily updates.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gvm@ubuntu:~$ crontab -e\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Edit this file to introduce tasks to be run by cron.</span>\n<span class="token comment">#</span>\n<span class="token comment"># Each task to run has to be defined through a single line</span>\n<span class="token comment"># indicating with different fields when the task will be run</span>\n<span class="token comment"># and what command to run for the task</span>\n<span class="token comment">#</span>\n<span class="token comment"># To define the time you can provide concrete values for</span>\n<span class="token comment"># minute (m), hour (h), day of month (dom), month (mon),</span>\n<span class="token comment"># and day of week (dow) or use &#39;*&#39; in these fields (for &#39;any&#39;).</span>\n<span class="token comment">#</span>\n<span class="token comment"># Notice that tasks will be started based on the cron&#39;s system</span>\n<span class="token comment"># daemon&#39;s notion of time and timezones.</span>\n<span class="token comment">#</span>\n<span class="token comment"># Output of the crontab jobs (including errors) is sent through</span>\n<span class="token comment"># email to the user the crontab file belongs to (unless redirected).</span>\n<span class="token comment">#</span>\n<span class="token comment"># For example, you can run a backup of all your user accounts</span>\n<span class="token comment"># at 5 a.m every week with:</span>\n<span class="token comment"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span>\n<span class="token comment">#</span>\n<span class="token comment"># For more information see the manual pages of crontab(5) and cron(8)</span>\n<span class="token comment">#</span>\n<span class="token comment"># m h  dom mon dow   command</span>\n\n<span class="token number">0</span> <span class="token number">0</span> * * * /opt/gvm/bin/openvas-update\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a> Troubleshooting</h2>',14),rn=(0,a.Uk)("If you encounter any issue or having questions regarding Greenbone Vulnerability Manager, I recommend using their helpful "),tn={href:"https://community.greenbone.net/",target:"_blank",rel:"noopener noreferrer"},ln=(0,a.Uk)("community forum"),un=(0,a.Uk)("."),on={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},dn=(0,a.Uk)("Questions"),cn=(0,a.Uk)(", "),pn={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},bn=(0,a.Uk)("comments"),mn=(0,a.Uk)(", or "),gn={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},vn=(0,a.Uk)("problems"),hn=(0,a.Uk)(" regarding this service? Create an issue "),xn={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},fn=(0,a.Uk)("here"),Sn=(0,a.Uk)(" or contact "),_n=(0,a._)("a",{href:"mailto:webmaster@libellux.com"},"webmaster@libellux.com",-1),yn=(0,a.Uk)("."),Rn=(0,a.uE)('<h3 id="sec-error-inadequate-key-usage" tabindex="-1"><a class="header-anchor" href="#sec-error-inadequate-key-usage" aria-hidden="true">#</a> SEC_ERROR_INADEQUATE_KEY_USAGE</h3><p>If receiving <code>SEC_ERROR_INADEQUATE_KEY_USAGE</code> and the browser blocks access to the local GVM server, proceed with removing the certificate. For example, in Firefox go to <code>about:preferences#privacy</code> and the certificate section. Select Show certificates, click the Servers tab and remove the certificates found under GVM Users.</p><h3 id="failed-to-find-interpreter-for-python-3-7" tabindex="-1"><a class="header-anchor" href="#failed-to-find-interpreter-for-python-3-7" aria-hidden="true">#</a> Failed to find interpreter for Python 3.7</h3><p>If receiving <code>RuntimeError: failed to find interpreter for Builtin discover of python_spec=&#39;python3.7&#39;</code> make sure you&#39;ve followed the instructions to install the required 3.7 packages.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>server@ubuntu:~$ sudo add-apt-repository ppa:deadsnakes/ppa\nserver@ubuntu:~$ sudo apt-get update\nserver@ubuntu:~$ sudo apt-get install python3.7 python3.7-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',5),En={id:"enterprise-solutions",tabindex:"-1"},In=(0,a._)("a",{class:"header-anchor",href:"#enterprise-solutions","aria-hidden":"true"},"#",-1),$n=(0,a.Uk)(" Enterprise solutions "),kn=(0,a._)("h3",{id:"the-greenbone-security-manager",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#the-greenbone-security-manager","aria-hidden":"true"},"#"),(0,a.Uk)(" The Greenbone Security Manager")],-1),Dn=(0,a._)("p",null,"The Greenbone Security Manager (GSM) is an appliance for vulnerability scanning and management. It is offered in various performance levels and basically supports an unlimited number of target systems. The actually achievable number depends on the scan pattern and scan targets. For finding the right model for your purpose, we provide reference values for the number of target IP addresses below, assuming a common scenario with a scan every 24 hours.",-1),On={href:"https://www.greenbone.net/en/product-comparison/",target:"_blank",rel:"noopener noreferrer"},An=(0,a.Uk)("Greenbone Security Manager"),Vn={render:function(e,n){const s=(0,a.up)("Badge"),Vn=(0,a.up)("OutboundLink"),wn=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[(0,a._)("h1",r,[t,l,(0,a.Wm)(s,{text:"Rev 6",type:"tip"})]),i,(0,a._)("p",null,[(0,a._)("a",u,[o,(0,a.Wm)(Vn)]),d,(0,a._)("a",c,[p,(0,a.Wm)(Vn)]),b,(0,a._)("a",m,[g,(0,a.Wm)(Vn)]),v,(0,a._)("a",h,[x,(0,a.Wm)(Vn)])]),f,(0,a._)("ul",null,[S,(0,a._)("li",null,[_,(0,a._)("a",y,[R,(0,a.Wm)(Vn)]),E]),I]),(0,a._)("p",null,[(0,a._)("a",$,[k,(0,a.Wm)(Vn)])]),D,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",O,[A,(0,a.Wm)(Vn)])]),(0,a._)("li",null,[(0,a._)("a",V,[w,(0,a.Wm)(Vn)])])]),U,(0,a._)("p",null,[N,(0,a._)("a",G,[L,(0,a.Wm)(Vn)]),C]),M,(0,a._)("p",null,[T,(0,a._)("a",P,[z,(0,a.Wm)(Vn)]),B]),F,(0,a._)("p",null,[q,(0,a._)("a",W,[Y,(0,a.Wm)(Vn)]),K]),H,(0,a._)("p",null,[X,(0,a._)("a",j,[Q,(0,a.Wm)(Vn)]),J]),Z,(0,a._)("p",null,[ee,(0,a._)("a",ne,[se,(0,a.Wm)(Vn)]),ae]),re,(0,a._)("p",null,[te,(0,a._)("a",le,[ie,(0,a.Wm)(Vn)]),ue]),oe,(0,a._)("p",null,[de,(0,a._)("a",ce,[pe,(0,a.Wm)(Vn)]),be]),me,(0,a._)("p",null,[ge,(0,a._)("a",ve,[he,(0,a.Wm)(Vn)]),xe]),fe,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_login-2.png",alt:"GSA login"},null,8,Se),_e,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_dashboard.png",alt:"GSA dashboard"},null,8,ye),Re,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_about.png",alt:"GSA about"},null,8,Ee),Ie,$e,(0,a._)("p",null,[(0,a._)("a",ke,[De,(0,a.Wm)(Vn)]),Oe,(0,a.Wm)(s,{text:"non-sponsored",type:"tip"})]),Ae,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_dashboard.png",alt:"GSA dashboard"},null,8,Ve),we,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_targets.png",alt:"GSA targets"},null,8,Ue),Ne,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_target.png",alt:"GSA target"},null,8,Ge),Le,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_tasks.png",alt:"GSA tasks"},null,8,Ce),Me,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_task.png",alt:"GSA task"},null,8,Te),Pe,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_noauth_task.png",alt:"GSA noauth task"},null,8,ze),Be,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_noauth_scan.png",alt:"GSA noauth scan"},null,8,Fe),qe,We,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_credentials.png",alt:"GSA credentials"},null,8,Ye),Ke,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_newcredentials.png",alt:"GSA new credentials"},null,8,He),Xe,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_auth_target.png",alt:"GSA auth target"},null,8,je),Qe,(0,a._)("img",{class:"zoom-custom-imgs",src:"/img/openvas/gsa_auth_task.png",alt:"GSA auth task"},null,8,Je),Ze,(0,a._)("p",null,[en,(0,a.Wm)(wn,{to:"/privacyidea/"},{default:(0,a.w5)((()=>[nn])),_:1}),sn]),an,(0,a._)("p",null,[rn,(0,a._)("a",tn,[ln,(0,a.Wm)(Vn)]),un]),(0,a._)("p",null,[(0,a._)("a",on,[dn,(0,a.Wm)(Vn)]),cn,(0,a._)("a",pn,[bn,(0,a.Wm)(Vn)]),mn,(0,a._)("a",gn,[vn,(0,a.Wm)(Vn)]),hn,(0,a._)("a",xn,[fn,(0,a.Wm)(Vn)]),Sn,_n,yn]),Rn,(0,a._)("h2",En,[In,$n,(0,a.Wm)(s,{text:"non-sponsored",type:"tip"})]),kn,Dn,(0,a._)("p",null,[(0,a._)("a",On,[An,(0,a.Wm)(Vn)])])],64)}}}}]);