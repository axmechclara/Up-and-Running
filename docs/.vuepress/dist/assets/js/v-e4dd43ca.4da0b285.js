"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[170],{995:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-e4dd43ca",path:"/ossec/",title:"OSSEC Host Intrusion Detection System",lang:"en-US",frontmatter:{lang:"en-US",title:"OSSEC Host Intrusion Detection System",description:"OSSEC is a full platform to monitor and control your systems. It mixes together all the aspects of HIDS (host-based intrusion detection), log monitoring and SIM/SIEM together in a simple, powerful and open source solution."},excerpt:"",headers:[{level:2,title:"Configuration files",slug:"configuration-files",children:[]},{level:2,title:"Prerequisites",slug:"prerequisites",children:[]},{level:2,title:"Server installation",slug:"server-installation",children:[{level:3,title:"Verify file integrity",slug:"verify-file-integrity",children:[]},{level:3,title:"Install OSSEC with PCRE2 support",slug:"install-ossec-with-pcre2-support",children:[]}]},{level:2,title:"Server configuration",slug:"server-configuration",children:[{level:3,title:"Allow list",slug:"allow-list",children:[]},{level:3,title:"Remote syslog",slug:"remote-syslog",children:[]},{level:3,title:"Repeated offenders",slug:"repeated-offenders",children:[]},{level:3,title:"PSAD rules",slug:"psad-rules",children:[]}]},{level:2,title:"Agent installation",slug:"agent-installation",children:[{level:3,title:"Verify file integrity",slug:"verify-file-integrity-1",children:[]},{level:3,title:"Install OSSEC with PCRE2 support",slug:"install-ossec-with-pcre2-support-1",children:[]}]},{level:2,title:"Agent configuration",slug:"agent-configuration",children:[]},{level:2,title:"Manage agents",slug:"manage-agents",children:[]},{level:2,title:"Windows agent",slug:"windows-agent",children:[]},{level:2,title:"Agentless monitoring",slug:"agentless-monitoring",children:[{level:3,title:"VMware ESXi",slug:"vmware-esxi",children:[]},{level:3,title:"Enabling agentless monitoring",slug:"enabling-agentless-monitoring",children:[]},{level:3,title:"Configure agentless monitoring",slug:"configure-agentless-monitoring",children:[]}]},{level:2,title:"Firewall settings",slug:"firewall-settings",children:[]},{level:2,title:"Slack integration",slug:"slack-integration",children:[]},{level:2,title:"Cloudflare integration",slug:"cloudflare-integration",children:[]},{level:2,title:"Monitoring",slug:"monitoring",children:[{level:3,title:"Monitor failed M/Monit login attempts with OSSEC",slug:"monitor-failed-m-monit-login-attempts-with-ossec",children:[]}]},{level:2,title:"Upgrading",slug:"upgrading",children:[{level:3,title:"Upgrade to OSSEC 3.3.0",slug:"upgrade-to-ossec-3-3-0",children:[]}]},{level:2,title:"Custom rules",slug:"custom-rules",children:[{level:3,title:"Ignore snap loop devices",slug:"ignore-snap-loop-devices",children:[]},{level:3,title:"Monitor failed M/Monit authentication",slug:"monitor-failed-m-monit-authentication",children:[]},{level:3,title:"Mute useless systemd-resolved message",slug:"mute-useless-systemd-resolved-message",children:[]},{level:3,title:"Alert on fail2ban action",slug:"alert-on-fail2ban-action",children:[]}]},{level:2,title:"Command-line",slug:"command-line",children:[]},{level:2,title:"Troubleshooting",slug:"troubleshooting",children:[{level:3,title:"Duplicate counter error",slug:"duplicate-counter-error",children:[]},{level:3,title:"build-essential",slug:"build-essential",children:[]},{level:3,title:"libevent-dev",slug:"libevent-dev",children:[]},{level:3,title:"pcre2 & libpcre2-dev",slug:"pcre2-libpcre2-dev",children:[]},{level:3,title:"zlib1g-dev",slug:"zlib1g-dev",children:[]},{level:3,title:"libssl-dev",slug:"libssl-dev",children:[]},{level:3,title:"Ignore snap partition state",slug:"ignore-snap-partition-state",children:[]},{level:3,title:"Server returned error NXDOMAIN",slug:"server-returned-error-nxdomain",children:[]},{level:3,title:"Cannot unlink /queue/rids/sender",slug:"cannot-unlink-queue-rids-sender",children:[]}]},{level:2,title:"Enterprise solutions",slug:"enterprise-solutions",children:[{level:3,title:"Atomic Enterprise OSSEC",slug:"atomic-enterprise-ossec",children:[]}]}],filePathRelative:"ossec/README.md",git:{updatedTime:1631993421e3,contributors:[{name:"Libellux",email:"fredrik@libellux.com",commits:97}]}}},405:(n,s,a)=>{a.r(s),a.d(s,{default:()=>ia});var t=a(252);const e={id:"ossec-host-intrusion-detection-system",tabindex:"-1"},o=(0,t._)("a",{class:"header-anchor",href:"#ossec-host-intrusion-detection-system","aria-hidden":"true"},"#",-1),p=(0,t.Uk)(" OSSEC Host Intrusion Detection System "),l=(0,t._)("p",null,"OSSEC is a full platform to monitor and control your systems. It mixes together all the aspects of HIDS (host-based intrusion detection), log monitoring and SIM/SIEM together in a simple, powerful and open source solution.",-1),c={href:"https://www.ossec.net/",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("OSSEC website"),u=(0,t.Uk)(),r={href:"https://github.com/ossec/ossec-hids",target:"_blank",rel:"noopener noreferrer"},g=(0,t.Uk)("GitHub"),k=(0,t._)("p",null,"Setup and configuration have been tested on the following operating systems:",-1),d=(0,t._)("ul",null,[(0,t._)("li",null,"Ubuntu- 16.04, 18.04, 20.04 (Focal Fossa), Rocky 8.4 (Green Obsidian), Windows Server 2019, Windows 10"),(0,t._)("li",null,"OSSEC- 2.9.0 -> 3.6.0")],-1),b={href:"https://ko-fi.com/B0B31BJU3",target:"_blank",rel:"noopener noreferrer"},h=(0,t._)("img",{src:"https://www.ko-fi.com/img/githubbutton_sm.svg",alt:"ko-fi"},null,-1),m=(0,t._)("h2",{id:"configuration-files",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#configuration-files","aria-hidden":"true"},"#"),(0,t.Uk)(" Configuration files")],-1),v=(0,t._)("h2",{id:"prerequisites",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),(0,t.Uk)(" Prerequisites")],-1),f=(0,t.Uk)("For more detailed information on OSSEC installation requirements read the official "),_={href:"https://www.ossec.net/docs/docs/manual/installation/installation-requirements.html",target:"_blank",rel:"noopener noreferrer"},w=(0,t.Uk)("documentation"),y=(0,t.Uk)("."),S=(0,t.uE)('<p><strong>Ubuntu 20.04:</strong></p><ul><li><code>build-essential</code></li><li><code>libssl-dev</code></li><li><code>libpcre2-dev</code></li><li><code>zlib1g-dev</code></li><li><code>libevent-dev</code></li><li><code>jq</code> (optional)</li></ul><p><strong>Rocky 8.4:</strong></p><ul><li><code>make</code></li><li><code>gcc</code></li><li><code>libevent-devel</code></li><li><code>openssl-devel</code></li><li><code>zlib-devel</code></li><li><code>pcre2-devel</code></li><li><code>jq</code> (optional)</li></ul><h2 id="server-installation" tabindex="-1"><a class="header-anchor" href="#server-installation" aria-hidden="true">#</a> Server installation</h2><p>To install <strong>OSSEC 3.6.0</strong> on <strong>Ubuntu 20.04</strong> (Focal Fossa) or <strong>Rocky 8.4</strong> (Green Obsidian) first install its prerequisites.</p>',6),x=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(" update "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(" -y upgrade "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -y build-essential "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -y zlib1g-dev libpcre2-dev libevent-dev libssl-dev jq\n")])])],-1),U=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@rocky:~$ "),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(" yum -y update "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(" yum -y upgrade "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(" yum "),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -y "),(0,t._)("span",{class:"token function"},"make"),(0,t.Uk)(" gcc "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(" yum "),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -y libevent-devel openssl-devel zlib-devel pcre2-devel jq\n")])])],-1),E=(0,t._)("h3",{id:"verify-file-integrity",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#verify-file-integrity","aria-hidden":"true"},"#"),(0,t.Uk)(" Verify file integrity")],-1),C=(0,t.Uk)("Before we download the "),I={href:"https://github.com/ossec/ossec-hids/releases",target:"_blank",rel:"noopener noreferrer"},A=(0,t.Uk)("latest stable version"),O=(0,t.Uk)(" from ossec-hids GitHub (3.6.0). Download and import the corresponding certificate and key file (.asc) from "),q={href:"http://www.ossec.net/files/OSSEC-ARCHIVE-KEY.asc",target:"_blank",rel:"noopener noreferrer"},D=(0,t.Uk)("ossec.net"),W=(0,t.Uk)(" and the ossec-hids "),R={href:"https://github.com/ossec/ossec-hids/releases",target:"_blank",rel:"noopener noreferrer"},$=(0,t.Uk)("repository"),P=(0,t.Uk)("."),z=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" http://www.ossec.net/files/OSSEC-ARCHIVE-KEY.asc "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://github.com/ossec/ossec-hids/releases/download/3.6.0/ossec-hids-3.6.0.tar.gz.asc "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\ngpg --import OSSEC-ARCHIVE-KEY.asc\n")])])],-1),M=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@rocky:~$ "),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" http://www.ossec.net/files/OSSEC-ARCHIVE-KEY.asc "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://github.com/ossec/ossec-hids/releases/download/3.6.0/ossec-hids-3.6.0.tar.gz.asc "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\ngpg --import OSSEC-ARCHIVE-KEY.asc\n")])])],-1),N=(0,t.uE)('<p>The output should show the following.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>pub   rsa4096 <span class="token number">2011</span>-03-10 <span class="token punctuation">[</span>SC<span class="token punctuation">]</span>\n      B50FB1947A0AE31145D05FADEE1B0E6B2D8387B7\nuid                      Scott R. Shinn <span class="token operator">&lt;</span>scott@atomicorp.com<span class="token operator">&gt;</span>\nsub   rsa4096 <span class="token number">2011</span>-03-10 <span class="token punctuation">[</span>E<span class="token punctuation">]</span>\n</code></pre></div>',2),T=(0,t.Uk)("Next download the "),F={href:"https://github.com/ossec/ossec-hids/releases",target:"_blank",rel:"noopener noreferrer"},H=(0,t.Uk)("latest stable version"),X=(0,t.Uk)(" of OSSEC (3.6.0) and verify the file integrity."),B=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://github.com/ossec/ossec-hids/archive/3.6.0.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\ngpg --verify ossec-hids-3.6.0.tar.gz.asc "),(0,t._)("span",{class:"token number"},"3.6"),(0,t.Uk)(".0.tar.gz\n")])])],-1),L=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@rocky:~$ "),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://github.com/ossec/ossec-hids/archive/3.6.0.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\ngpg --verify ossec-hids-3.6.0.tar.gz.asc "),(0,t._)("span",{class:"token number"},"3.6"),(0,t.Uk)(".0.tar.gz\n")])])],-1),V=(0,t.uE)('<p>The signature output is supposed to look as following.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>gpg: Signature made Fri <span class="token number">14</span> Feb <span class="token number">2020</span> 09:04:32 PM UTC\ngpg:                using RSA key B50FB1947A0AE31145D05FADEE1B0E6B2D8387B7\ngpg: Good signature from <span class="token string">&quot;Scott R. Shinn &lt;scott@atomicorp.com&gt;&quot;</span> <span class="token punctuation">[</span>unknown<span class="token punctuation">]</span>\ngpg: WARNING: This key is not certified with a trusted signature<span class="token operator">!</span>\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: B50F B194 7A0A E311 45D0  5FAD EE1B 0E6B 2D83 87B7\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br></div></div><h3 id="install-ossec-with-pcre2-support" tabindex="-1"><a class="header-anchor" href="#install-ossec-with-pcre2-support" aria-hidden="true">#</a> Install OSSEC with PCRE2 support</h3><p>Extract and run the installation script. If receiving build errors, make sure that you have installed all the required dependencies or check the <a href="#troubleshooting">troubleshooting section</a> for details.</p>',4),Y=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"tar"),(0,t.Uk)(" -zxvf "),(0,t._)("span",{class:"token number"},"3.6"),(0,t.Uk)(".0.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin class-name"},"cd"),(0,t.Uk)(" ossec-hids-3.6.0/ "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"tar"),(0,t.Uk)(" -zxvf pcre2-10.32.tar.gz -C src/external/ "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token assign-left variable"},"PCRE2_SYSTEM"),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)("yes ./install.sh\n")])])],-1),G=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@rocky:~$ "),(0,t._)("span",{class:"token function"},"tar"),(0,t.Uk)(" -zxvf "),(0,t._)("span",{class:"token number"},"3.6"),(0,t.Uk)(".0.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin class-name"},"cd"),(0,t.Uk)(" ossec-hids-3.6.0/ "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"tar"),(0,t.Uk)(" -zxvf pcre2-10.32.tar.gz -C src/external/ "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token assign-left variable"},"PCRE2_SYSTEM"),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)("yes ./install.sh\n")])])],-1),j=(0,t.uE)('<p>Select preferred language and server installation. Adjust options to fit your requirements.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token punctuation">(</span>en/br/cn/de/el/es/fr/hu/it/jp/nl/pl/ru/sr/tr<span class="token punctuation">)</span> <span class="token punctuation">[</span>en<span class="token punctuation">]</span>:\nWhat kind of installation <span class="token keyword">do</span> you want <span class="token punctuation">(</span>server, agent, local, hybrid or <span class="token builtin class-name">help</span><span class="token punctuation">)</span>? server\nChoose where to <span class="token function">install</span> the OSSEC HIDS <span class="token punctuation">[</span>/var/ossec/<span class="token punctuation">]</span>:\nDo you want e-mail notification? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: n\nDo you want to run the integrity check daemon? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\nDo you want to run the rootkit detection engine? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\nDo you want to <span class="token builtin class-name">enable</span> active response? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\nDo you want to <span class="token builtin class-name">enable</span> the firewall-drop response? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\nDo you want to <span class="token function">add</span> <span class="token function">more</span> IPs to the white list? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>? <span class="token punctuation">[</span>n<span class="token punctuation">]</span>: n\nDo you want to <span class="token builtin class-name">enable</span> remote syslog <span class="token punctuation">(</span>port <span class="token number">514</span> udp<span class="token punctuation">)</span>? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\n--- Press ENTER to finish <span class="token punctuation">(</span>maybe <span class="token function">more</span> information below<span class="token punctuation">)</span>. ---\n</code></pre></div><details class="custom-container details"><summary>Click to view full installation process</summary><div class="language-bash ext-sh"><pre class="language-bash"><code> OSSEC HIDS v3.6.0 Installation Script - http://www.ossec.net\n\n You are about to start the installation process of the OSSEC HIDS.\n You must have a C compiler pre-installed <span class="token keyword">in</span> your system.\n\n  - System: Linux libellux <span class="token number">5.4</span>.0-84-generic\n  - User: root\n  - Host: libellux\n\n\n  -- Press ENTER to <span class="token builtin class-name">continue</span> or Ctrl-C to abort. --\n\n\n<span class="token number">1</span>- What kind of installation <span class="token keyword">do</span> you want <span class="token punctuation">(</span>server, agent, local, hybrid or <span class="token builtin class-name">help</span><span class="token punctuation">)</span>? server\n \n  - Server installation chosen.\n\n<span class="token number">2</span>- Setting up the installation environment.\n\n - Choose where to <span class="token function">install</span> the OSSEC HIDS <span class="token punctuation">[</span>/var/ossec/<span class="token punctuation">]</span>:\n\n    - Installation will be made at  /var/ossec <span class="token builtin class-name">.</span>\n\n<span class="token number">3</span>- Configure the OSSEC HIDS.\n\n  <span class="token number">3.1</span>- Do you want e-mail notification? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: n\n\n   --- Email notification disabled.\n\n  <span class="token number">3.2</span>- Do you want to run the integrity check daemon? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\n\n   - Running syscheck <span class="token punctuation">(</span>integrity check daemon<span class="token punctuation">)</span>.\n\n  <span class="token number">3.3</span>- Do you want to run the rootkit detection engine? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\n\n   - Running rootcheck <span class="token punctuation">(</span>rootkit detection<span class="token punctuation">)</span>.\n\n  <span class="token number">3.4</span>- Active response allows you to execute a specific\n       <span class="token builtin class-name">command</span> based on the events received. For example,\n       you can block an IP address or disable access <span class="token keyword">for</span>\n       a specific user.\n       More information at:\n       http://www.ossec.net/en/manual.html<span class="token comment">#active-response</span>\n  \n   - Do you want to <span class="token builtin class-name">enable</span> active response? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\n\n     - Active response enabled.\n\n   - By default, we can <span class="token builtin class-name">enable</span> the host-deny and the\n     firewall-drop responses. The first one will <span class="token function">add</span>\n     a <span class="token function">host</span> to the /etc/hosts.deny and the second one\n     will block the <span class="token function">host</span> on iptables <span class="token punctuation">(</span>if linux<span class="token punctuation">)</span> or on\n     ipfilter <span class="token punctuation">(</span>if Solaris, FreeBSD or NetBSD<span class="token punctuation">)</span>.\n   - They can be used to stop SSHD brute force scans,\n     portscans and some other forms of attacks. You can\n     also <span class="token function">add</span> them to block on snort events, <span class="token keyword">for</span> example.\n\n   - Do you want to <span class="token builtin class-name">enable</span> the firewall-drop response? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\n\n     - firewall-drop enabled <span class="token punctuation">(</span>local<span class="token punctuation">)</span> <span class="token keyword">for</span> levels <span class="token operator">&gt;=</span> <span class="token number">6</span>\n\n   -\n      - <span class="token number">127.0</span>.0.53\n\n   - Do you want to <span class="token function">add</span> <span class="token function">more</span> IPs to the white list? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>? <span class="token punctuation">[</span>n<span class="token punctuation">]</span>: n\n\n  <span class="token number">3.5</span>- Do you want to <span class="token builtin class-name">enable</span> remote syslog <span class="token punctuation">(</span>port <span class="token number">514</span> udp<span class="token punctuation">)</span>? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\n\n   - Remote syslog enabled.\n\n  <span class="token number">3.6</span>- Setting the configuration to analyze the following logs:\n    -- /var/log/auth.log\n    -- /var/log/syslog\n    -- /var/log/dpkg.log\n\n - If you want to monitor any other file, just change\n   the ossec.conf and <span class="token function">add</span> a new localfile entry.\n   Any questions about the configuration can be answered\n   by visiting us online at http://www.ossec.net <span class="token builtin class-name">.</span>\n\n\n--- Press ENTER to finish ---\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div></details><h2 id="server-configuration" tabindex="-1"><a class="header-anchor" href="#server-configuration" aria-hidden="true">#</a> Server configuration</h2><h3 id="allow-list" tabindex="-1"><a class="header-anchor" href="#allow-list" aria-hidden="true">#</a> Allow list</h3><p>In the global section of the OSSEC configuration file add the IP addresses of the client(s) and services (e.g. Greenbone Vulnerability Manager) to allow.</p>',6),Q=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"nano"),(0,t.Uk)(" /var/ossec/etc/ossec.conf\n")])])],-1),K=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"server@rocky:~$\n")])],-1),J=(0,t.uE)('<div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>global</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allow_list</span><span class="token punctuation">&gt;</span></span>127.0.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allow_list</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allow_list</span><span class="token punctuation">&gt;</span></span>::1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allow_list</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allow_list</span><span class="token punctuation">&gt;</span></span>localhost.localdomain<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allow_list</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allow_list</span><span class="token punctuation">&gt;</span></span>127.0.0.53<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allow_list</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allow_list</span><span class="token punctuation">&gt;</span></span>192.168.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allow_list</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- OSSEC client --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>global</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="remote-syslog" tabindex="-1"><a class="header-anchor" href="#remote-syslog" aria-hidden="true">#</a> Remote syslog</h3><p>To enable the function to harvest syslog we need to establish that our remote client connection is secure and allow it. Add the client IP address within the remote section.</p>',3),Z=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"nano"),(0,t.Uk)(" /var/ossec/etc/ossec.conf\n")])])],-1),nn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"server@rocky:~$\n")])],-1),sn=(0,t.uE)('<div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>connection</span><span class="token punctuation">&gt;</span></span>secure<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>connection</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allowed-ips</span><span class="token punctuation">&gt;</span></span>192.168.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allowed-ips</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- OSSEC client --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="repeated-offenders" tabindex="-1"><a class="header-anchor" href="#repeated-offenders" aria-hidden="true">#</a> Repeated offenders</h3><p>The first time an IP is blocked it will be put on timeout for the default 600 seconds. If the IP is blocked again it will follow the defined repeated offenders list. To enable repeated offenders, add the entry in the active response config.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Make sure that you add the repeated offenders entry at the top of the active response section in the ossec.conf file.</p></div>',4),an=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"nano"),(0,t.Uk)(" /var/ossec/etc/ossec.conf\n")])])],-1),tn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"server@rocky:~$\n")])],-1),en=(0,t.uE)('<div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- Active Response Config --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active-response</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- Specify a comma seperated list of timeouts per\n    - re-incidence (in minutes).\n    --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repeated_offenders</span><span class="token punctuation">&gt;</span></span>30,60,120,240,480<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repeated_offenders</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active-response</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Save the config and restart OSSEC to confirm that the repeated offenders been added.</p>',2),on=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("server@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(" /var/ossec/bin/ossec-control restart\nStarting OSSEC HIDS v3.6.0"),(0,t._)("span",{class:"token punctuation"},".."),(0,t.Uk)(".\n"),(0,t._)("span",{class:"token number"},"2020"),(0,t.Uk)("/08/06 "),(0,t._)("span",{class:"token number"},"14"),(0,t.Uk)(":38:31 ossec-execd: INFO: Adding offenders timeout: "),(0,t._)("span",{class:"token number"},"30"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("for "),(0,t._)("span",{class:"token comment"},"#1)"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token number"},"2020"),(0,t.Uk)("/08/06 "),(0,t._)("span",{class:"token number"},"14"),(0,t.Uk)(":38:31 ossec-execd: INFO: Adding offenders timeout: "),(0,t._)("span",{class:"token number"},"60"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("for "),(0,t._)("span",{class:"token comment"},"#2)"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token number"},"2020"),(0,t.Uk)("/08/06 "),(0,t._)("span",{class:"token number"},"14"),(0,t.Uk)(":38:31 ossec-execd: INFO: Adding offenders timeout: "),(0,t._)("span",{class:"token number"},"120"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("for "),(0,t._)("span",{class:"token comment"},"#3)"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token number"},"2020"),(0,t.Uk)("/08/06 "),(0,t._)("span",{class:"token number"},"14"),(0,t.Uk)(":38:31 ossec-execd: INFO: Adding offenders timeout: "),(0,t._)("span",{class:"token number"},"240"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("for "),(0,t._)("span",{class:"token comment"},"#4)"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token number"},"2020"),(0,t.Uk)("/08/06 "),(0,t._)("span",{class:"token number"},"14"),(0,t.Uk)(":38:31 ossec-execd: INFO: Adding offenders timeout: "),(0,t._)("span",{class:"token number"},"480"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("for "),(0,t._)("span",{class:"token comment"},"#5)"),(0,t.Uk)("\nStarted ossec-execd"),(0,t._)("span",{class:"token punctuation"},".."),(0,t.Uk)(".\nStarted ossec-analysisd"),(0,t._)("span",{class:"token punctuation"},".."),(0,t.Uk)(".\nStarted ossec-logcollector"),(0,t._)("span",{class:"token punctuation"},".."),(0,t.Uk)(".\nStarted ossec-remoted"),(0,t._)("span",{class:"token punctuation"},".."),(0,t.Uk)(".\nStarted ossec-syscheckd"),(0,t._)("span",{class:"token punctuation"},".."),(0,t.Uk)(".\nStarted ossec-monitord"),(0,t._)("span",{class:"token punctuation"},".."),(0,t.Uk)(".\nCompleted.\n")])])],-1),pn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"server@rocky:~$\n")])],-1),ln=(0,t.uE)('<h3 id="psad-rules" tabindex="-1"><a class="header-anchor" href="#psad-rules" aria-hidden="true">#</a> PSAD rules</h3><p>If PSAD Intrusion Detection is to be used, make sure to include the PSAD ruleset in the configuration file (as its not defined by default).</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Make sure that you add the the psad rules include before the local rules.</p></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>psad_rules.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>local_rules.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rules</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="agent-installation" tabindex="-1"><a class="header-anchor" href="#agent-installation" aria-hidden="true">#</a> Agent installation</h2><p>To install <strong>OSSEC 3.6.0</strong> as an <strong>agent</strong> on <strong>Ubuntu 20.04</strong> (Focal Fossa) or <strong>Rocky 8.4</strong> (Green Obsidian) download its prerequisites.</p>',6),cn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("client@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(" update "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(" -y upgrade "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -y build-essential "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"apt-get"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"install"),(0,t.Uk)(" -y zlib1g-dev libpcre2-dev libevent-dev libssl-dev\n")])])],-1),un=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"client@rocky:~$\n")])],-1),rn=(0,t._)("h3",{id:"verify-file-integrity-1",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#verify-file-integrity-1","aria-hidden":"true"},"#"),(0,t.Uk)(" Verify file integrity")],-1),gn=(0,t.Uk)("Before we download the "),kn={href:"https://github.com/ossec/ossec-hids/releases",target:"_blank",rel:"noopener noreferrer"},dn=(0,t.Uk)("latest stable version"),bn=(0,t.Uk)(" from ossec-hids GitHub (3.6.0). Download and import the corresponding certificate and key file (.asc) from "),hn={href:"http://www.ossec.net/files/OSSEC-ARCHIVE-KEY.asc",target:"_blank",rel:"noopener noreferrer"},mn=(0,t.Uk)("ossec.net"),vn=(0,t.Uk)(" and the ossec-hids "),fn={href:"https://github.com/ossec/ossec-hids/releases",target:"_blank",rel:"noopener noreferrer"},_n=(0,t.Uk)("repository"),wn=(0,t.Uk)("."),yn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("client@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" http://www.ossec.net/files/OSSEC-ARCHIVE-KEY.asc "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://github.com/ossec/ossec-hids/releases/download/3.6.0/ossec-hids-3.6.0.tar.gz.asc "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\ngpg --import OSSEC-ARCHIVE-KEY.asc\n")])])],-1),Sn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"client@rocky:~$\n")])],-1),xn=(0,t.uE)('<p>The output should show the following.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>pub   rsa4096 <span class="token number">2011</span>-03-10 <span class="token punctuation">[</span>SC<span class="token punctuation">]</span>\n      B50FB1947A0AE31145D05FADEE1B0E6B2D8387B7\nuid                      Scott R. Shinn <span class="token operator">&lt;</span>scott@atomicorp.com<span class="token operator">&gt;</span>\nsub   rsa4096 <span class="token number">2011</span>-03-10 <span class="token punctuation">[</span>E<span class="token punctuation">]</span>\n</code></pre></div>',2),Un=(0,t.Uk)("Next download the "),En={href:"https://github.com/ossec/ossec-hids/releases",target:"_blank",rel:"noopener noreferrer"},Cn=(0,t.Uk)("latest stable version"),In=(0,t.Uk)(" of OSSEC (3.6.0) and verify the file integrity."),An=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("client@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://github.com/ossec/ossec-hids/archive/3.6.0.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\ngpg --verify ossec-hids-3.6.0.tar.gz.asc "),(0,t._)("span",{class:"token number"},"3.6"),(0,t.Uk)(".0.tar.gz\n")])])],-1),On=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"client@rocky:~$\n")])],-1),qn=(0,t.uE)('<p>The signature output is supposed to look as following.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>gpg: Signature made Fri <span class="token number">14</span> Feb <span class="token number">2020</span> 09:04:32 PM UTC\ngpg:                using RSA key B50FB1947A0AE31145D05FADEE1B0E6B2D8387B7\ngpg: Good signature from <span class="token string">&quot;Scott R. Shinn &lt;scott@atomicorp.com&gt;&quot;</span> <span class="token punctuation">[</span>unknown<span class="token punctuation">]</span>\ngpg: WARNING: This key is not certified with a trusted signature<span class="token operator">!</span>\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: B50F B194 7A0A E311 45D0  5FAD EE1B 0E6B 2D83 87B7\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br></div></div><h3 id="install-ossec-with-pcre2-support-1" tabindex="-1"><a class="header-anchor" href="#install-ossec-with-pcre2-support-1" aria-hidden="true">#</a> Install OSSEC with PCRE2 support</h3><p>Extract and run the installation script.</p>',4),Dn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,[(0,t.Uk)("client@ubuntu:~$ "),(0,t._)("span",{class:"token function"},"tar"),(0,t.Uk)(" -zxvf "),(0,t._)("span",{class:"token number"},"3.6"),(0,t.Uk)(".0.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin class-name"},"cd"),(0,t.Uk)(" ossec-hids-3.6.0/ "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"wget"),(0,t.Uk)(" https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"tar"),(0,t.Uk)(" -zxvf pcre2-10.32.tar.gz -C src/external/ "),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"\\"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token function"},"sudo"),(0,t.Uk)(),(0,t._)("span",{class:"token assign-left variable"},"PCRE2_SYSTEM"),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)("yes ./install.sh\n")])])],-1),Wn=(0,t._)("div",{class:"language-bash ext-sh"},[(0,t._)("pre",{class:"language-bash"},[(0,t._)("code",null,"client@rocky:~$\n")])],-1),Rn=(0,t.uE)('<p>Select preferred language, agent installation and make sure that you define the IP address of your OSSEC server.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token punctuation">(</span>en/br/cn/de/el/es/fr/hu/it/jp/nl/pl/ru/sr/tr<span class="token punctuation">)</span> <span class="token punctuation">[</span>en<span class="token punctuation">]</span>:\nWhat kind of installation <span class="token keyword">do</span> you want <span class="token punctuation">(</span>server, agent, local, hybrid or <span class="token builtin class-name">help</span><span class="token punctuation">)</span>? agent\nChoose where to <span class="token function">install</span> the OSSEC HIDS <span class="token punctuation">[</span>/var/ossec/<span class="token punctuation">]</span>:\nWhat&#39;s the IP Address or <span class="token function">hostname</span> of the OSSEC HIDS server?: <span class="token number">192.168</span>.0.1\nDo you want to run the integrity check daemon? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\nDo you want to run the rootkit detection engine? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\nDo you want to <span class="token builtin class-name">enable</span> active response? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span> <span class="token punctuation">[</span>y<span class="token punctuation">]</span>: y\n--- Press ENTER to finish <span class="token punctuation">(</span>maybe <span class="token function">more</span> information below<span class="token punctuation">)</span>. ---\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br></div></div><details class="custom-container details"><summary>Click to view full installation process</summary><div class="language-bash ext-sh"><pre class="language-bash"><code></code></pre></div></details><h2 id="agent-configuration" tabindex="-1"><a class="header-anchor" href="#agent-configuration" aria-hidden="true">#</a> Agent configuration</h2><p>Edit the agent configuration file and verify that the server IP address is correct. Continue with disabling email notifications.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>client@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/etc/ossec.conf\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ossec_config</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>client</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server-ip</span><span class="token punctuation">&gt;</span></span>192.168.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server-ip</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>config-profile</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>config-profile</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>client</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>global</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email_notification</span><span class="token punctuation">&gt;</span></span>no<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email_notification</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>global</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Proceed and add the following lines after the rootcheck segment to enable active response and repeated offenders.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>client@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/etc/ossec.conf\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>command</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>firewall-drop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executable</span><span class="token punctuation">&gt;</span></span>firewall-drop.sh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executable</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expect</span><span class="token punctuation">&gt;</span></span>srcip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expect</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeout_allowed</span><span class="token punctuation">&gt;</span></span>yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeout_allowed</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>command</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- Active Response Config --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active-response</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- Specify a comma seperated list of timeouts per\n     - re-incidence (in minutes).\n    --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repeated_offenders</span><span class="token punctuation">&gt;</span></span>30,60,120,240,480<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repeated_offenders</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active-response</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active-response</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- Firewall Drop response. Block the IP for\n    - 600 seconds on the firewall (iptables,\n    - ipfilter, etc).\n    --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>disabled</span><span class="token punctuation">&gt;</span></span>no<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>disabled</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>command</span><span class="token punctuation">&gt;</span></span>firewall-drop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>command</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>agent_id</span><span class="token punctuation">&gt;</span></span>001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>agent_id</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">&gt;</span></span>local<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rules_id</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rules_id</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeout</span><span class="token punctuation">&gt;</span></span>600<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeout</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active-response</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="manage-agents" tabindex="-1"><a class="header-anchor" href="#manage-agents" aria-hidden="true">#</a> Manage agents</h2><p>To manage an agent we need to add the agent to our OSSEC server. Run the command shown in the code segment below and follow the instructions.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/manage_agents\n</code></pre></div><div class="language-bash ext-sh"><pre class="language-bash"><code>****************************************\n* OSSEC HIDS v3.6.0 Agent manager.     *\n* The following options are available: *\n****************************************\n   <span class="token punctuation">(</span>A<span class="token punctuation">)</span>dd an agent <span class="token punctuation">(</span>A<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>E<span class="token punctuation">)</span>xtract key <span class="token keyword">for</span> an agent <span class="token punctuation">(</span>E<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>L<span class="token punctuation">)</span>ist already added agents <span class="token punctuation">(</span>L<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>R<span class="token punctuation">)</span>emove an agent <span class="token punctuation">(</span>R<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>Q<span class="token punctuation">)</span>uit.\nChoose your action: A,E,L,R or Q: A\n\n- Adding a new agent <span class="token punctuation">(</span>use <span class="token string">&#39;\\q&#39;</span> to <span class="token builtin class-name">return</span> to the main menu<span class="token punctuation">)</span>.\n  Please provide the following:\n   * A name <span class="token keyword">for</span> the new agent: client@ubuntu\n   * The IP Address of the new agent: <span class="token number">192.168</span>.0.2\n   * An ID <span class="token keyword">for</span> the new agent<span class="token punctuation">[</span>001<span class="token punctuation">]</span>: 001\nAgent information:\n   ID:001\n   Name:client@ubuntu\n   IP Address:192.168.0.2\n\nConfirm adding it?<span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>: y\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div></div></div><p>Once we added the client, proceed by extracting its agent key by providing the assigned agent ID.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>****************************************\n* OSSEC HIDS v3.6.0 Agent manager.     *\n* The following options are available: *\n****************************************\n   <span class="token punctuation">(</span>A<span class="token punctuation">)</span>dd an agent <span class="token punctuation">(</span>A<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>E<span class="token punctuation">)</span>xtract key <span class="token keyword">for</span> an agent <span class="token punctuation">(</span>E<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>L<span class="token punctuation">)</span>ist already added agents <span class="token punctuation">(</span>L<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>R<span class="token punctuation">)</span>emove an agent <span class="token punctuation">(</span>R<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>Q<span class="token punctuation">)</span>uit.\nChoose your action: A,E,L,R or Q: E\n\nAvailable agents: \n   ID: 001, Name: client@ubuntu, IP: <span class="token number">192.168</span>.0.2\nProvide the ID of the agent to extract the key <span class="token punctuation">(</span>or <span class="token string">&#39;\\q&#39;</span> to quit<span class="token punctuation">)</span>: 001\n\nAgent key information <span class="token keyword">for</span> <span class="token string">&#39;001&#39;</span> is: \n<span class="token assign-left variable">523b0d579891be85956bb3da6c757455005eaf1508ef578186431efbebf5901ecb467ddd857ed5dfdeb5b2cb00e8911c6d031</span><span class="token operator">=</span>\n\n** Press ENTER to <span class="token builtin class-name">return</span> to the main menu.\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br></div></div><p>Copy the agent key and head back to our OSSEC client and import the agent key. Execute the command, shown in the code section below, on the client and paste the key. Validate that our agent information is correct before adding it.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>client@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/manage_agents\n</code></pre></div><div class="language-bash ext-sh"><pre class="language-bash"><code>****************************************\n* OSSEC HIDS v3.6.0 Agent manager.     *\n* The following options are available: *\n****************************************\n   <span class="token punctuation">(</span>I<span class="token punctuation">)</span>mport key from the server <span class="token punctuation">(</span>I<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>Q<span class="token punctuation">)</span>uit.\nChoose your action: I or Q: i\n\n* Provide the Key generated by the server.\n* The best approach is to <span class="token function">cut</span> and <span class="token function">paste</span> it.\n*** OBS: Do not include spaces or new lines.\n\nPaste it here <span class="token punctuation">(</span>or <span class="token string">&#39;\\q&#39;</span> to quit<span class="token punctuation">)</span>: \n<span class="token assign-left variable">523b0d579891be85956bb3da6c757455005eaf1508ef578186431efbebf5901ecb467ddd857ed5dfdeb5b2cb00e8911c6d031</span><span class="token operator">=</span>\n\nAgent information:\n   ID:001\n   Name:client@ubuntu\n   IP Address:192.168.0.2\n\nConfirm adding it?<span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>: y\nAdded.\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><br></div></div><p>Finally restart the OSSEC server and the client to enable and activate OSSEC HIDS.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/ossec-control restart\nclient@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/ossec-control restart\n</code></pre></div><p>To confirm that our agent now is active, run the following command from the server.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/agent_control -lc\n\nOSSEC HIDS agent_control. List of available agents:\n   ID: 000, Name: server@ubuntu <span class="token punctuation">(</span>server<span class="token punctuation">)</span>, IP: <span class="token number">127.0</span>.0.1, Active/Local\n   ID: 001, Name: client@ubuntu, IP: <span class="token number">192.168</span>.0.2, Active\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div></div></div><p>If the agent does not appear, make sure that the firewall settings are in place and that the correct ports are opened on both environments. See the <a href="#firewall-settings">Firewall settings</a> section for more information.</p><h2 id="windows-agent" tabindex="-1"><a class="header-anchor" href="#windows-agent" aria-hidden="true">#</a> Windows agent</h2><p>The following agent installation has been tested on Windows Server 2019 and Windows 10. Login to your OSSEC server and run the agent manager.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/manage_agents\n</code></pre></div><p>Select option (A) to add our new Windows agent.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>****************************************\n* OSSEC HIDS v3.6.0 Agent manager.     *\n* The following options are available: *\n****************************************\n   <span class="token punctuation">(</span>A<span class="token punctuation">)</span>dd an agent <span class="token punctuation">(</span>A<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>E<span class="token punctuation">)</span>xtract key <span class="token keyword">for</span> an agent <span class="token punctuation">(</span>E<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>L<span class="token punctuation">)</span>ist already added agents <span class="token punctuation">(</span>L<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>R<span class="token punctuation">)</span>emove an agent <span class="token punctuation">(</span>R<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>Q<span class="token punctuation">)</span>uit.\nChoose your action: A,E,L,R or Q: a\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div></div></div><p>Enter the name of our Windows agent, specify its local IP address and attach an agent ID.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>- Adding a new agent <span class="token punctuation">(</span>use <span class="token string">&#39;\\q&#39;</span> to <span class="token builtin class-name">return</span> to the main menu<span class="token punctuation">)</span>.\n  Please provide the following:\n   * A name <span class="token keyword">for</span> the new agent: client@windows\n   * The IP Address of the new agent: <span class="token number">192.168</span>.0.2\n   * An ID <span class="token keyword">for</span> the new agent<span class="token punctuation">[</span>001<span class="token punctuation">]</span>: 001\nAgent information:\n   ID:001\n   Name:client@windows\n   IP Address:192.168.0.2\n\nConfirm adding it?<span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>: y\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div></div></div><p>Once we&#39;ve created our new agent proceed to extract its agent key.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>****************************************\n* OSSEC HIDS v3.6.0 Agent manager.     *\n* The following options are available: *\n****************************************\n   <span class="token punctuation">(</span>A<span class="token punctuation">)</span>dd an agent <span class="token punctuation">(</span>A<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>E<span class="token punctuation">)</span>xtract key <span class="token keyword">for</span> an agent <span class="token punctuation">(</span>E<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>L<span class="token punctuation">)</span>ist already added agents <span class="token punctuation">(</span>L<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>R<span class="token punctuation">)</span>emove an agent <span class="token punctuation">(</span>R<span class="token punctuation">)</span>.\n   <span class="token punctuation">(</span>Q<span class="token punctuation">)</span>uit.\nChoose your action: A,E,L,R or Q: e\n\nAvailable agents: \n   ID: 001, Name: client@windows, IP: <span class="token number">192.168</span>.0.2\nProvide the ID of the agent to extract the key <span class="token punctuation">(</span>or <span class="token string">&#39;\\q&#39;</span> to quit<span class="token punctuation">)</span>: 001\n</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div></div></div><p>Copy the agent ID as we will need it when setting up the client machine.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>Agent key information <span class="token keyword">for</span> <span class="token string">&#39;001&#39;</span> is: \n<span class="token assign-left variable">xasdEGdh321ieC1i321wMSAxOTIuMTY4Ljg4LjYwIGRjdaszcxODVmZTY3N2U1M43156dasdaE5YjgyNzg2M2fsat6421WJhMDkzNjI3MTM4ZDk3ZGFhxsaRyvfYzExMDg1YTQ</span><span class="token operator">=</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div></div></div>',35),$n=(0,t.Uk)("Login to the Windows Server 2019 client machine and download the latest OSSEC windows agent client (in this case "),Pn={href:"https://updates.atomicorp.com/channels/atomic/windows/ossec-agent-win32-3.6.0-12032.exe",target:"_blank",rel:"noopener noreferrer"},zn=(0,t.Uk)("3.6.0"),Mn=(0,t.Uk)("). Otherwise you can find the latest release "),Nn={href:"https://www.ossec.net/downloads/",target:"_blank",rel:"noopener noreferrer"},Tn=(0,t.Uk)("here"),Fn=(0,t.Uk)(" (under the latest stable releases and "),Hn=(0,t._)("em",null,"Agent Windows",-1),Xn=(0,t.Uk)("). Run the executable file."),Bn=["src"],Ln=(0,t._)("p",null,"Accept the current terms and agreements and proceed with the installation. In the next step you will be able to select which components to monitor. If you run a Windows web server keep the option to scan and monitor IIS logs checked (in this tutorial we do not use it).",-1),Vn=["src"],Yn=(0,t._)("p",null,"Once we've completed the installation we will be presented the OSSEC Windows Agent Manager. Add the OSSEC server IP and the Authentication key we did copy in earlier section. Press save.",-1),Gn=["src"],jn=(0,t.Uk)("Next update the firewall settings on our OSSEC server (see "),Qn={href:"https://www.libellux.com/ossec/#firewall-settings",target:"_blank",rel:"noopener noreferrer"},Kn=(0,t.Uk)("Firewall Settings"),Jn=(0,t.Uk)(") and add the Windows agent client IP address to the remote connection and allowed IPS section in the OSSEC server configuration file."),Zn=(0,t.uE)('<div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/etc/ossec.conf\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>global</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allow_list</span><span class="token punctuation">&gt;</span></span>192.168.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allow_list</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- OSSEC client --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>global</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>connection</span><span class="token punctuation">&gt;</span></span>secure<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>connection</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allowed-ips</span><span class="token punctuation">&gt;</span></span>192.168.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allowed-ips</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- OSSEC client --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Finally, to check if our new Windows agent is active run the agent control command as following.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ /var/ossec/bin/agent_control -lc\n</code></pre></div><div class="language-bash ext-sh"><pre class="language-bash"><code>OSSEC HIDS agent_control. List of available agents:\n   ID: 000, Name: server@ubuntu <span class="token punctuation">(</span>server<span class="token punctuation">)</span>, IP: <span class="token number">127.0</span>.0.1, Active/Local\n   ID: 001, Name: client@windows, IP: <span class="token number">192.168</span>.0.2, Active\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div></div></div><h2 id="agentless-monitoring" tabindex="-1"><a class="header-anchor" href="#agentless-monitoring" aria-hidden="true">#</a> Agentless monitoring</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The agentless monitoring has so far only been tested with VMware ESXi 6.7. The result is still not 100% but will give an overview on how to configure your agentless servers or devices.</p></div><p>Generate SSH keys for the OSSEC user.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> -u ossec ssh-keygen\n</code></pre></div><p>If receiving <code>Saving key &quot;/var/ossec/.ssh/id_rsa&quot; failed: Permission denied</code> make sure that OSSEC is the directory owner of <code>.ssh/</code>.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">chown</span> -R ossec:ossec .ssh/\nserver@ubuntu:~$ <span class="token function">sudo</span> -u ossec ssh-keygen\n</code></pre></div><h3 id="vmware-esxi" tabindex="-1"><a class="header-anchor" href="#vmware-esxi" aria-hidden="true">#</a> VMware ESXi</h3><p>Login as the administrator through the vSphere client. Go to the <em>Host</em>, <em>Manage</em> and Advanced settings under the <em>System</em> tab.</p>',13),ns=["src"],ss=(0,t._)("p",null,[(0,t.Uk)("Filter by "),(0,t._)("em",null,"syslog"),(0,t.Uk)(" and find the "),(0,t._)("code",null,"Syslog.global.logHOST"),(0,t.Uk)(" parameter. Right click and select "),(0,t._)("em",null,"Edit option"),(0,t.Uk)(" and set our remote OSSEC host.")],-1),as=["src"],ts=(0,t.uE)('<p>Additionally we need to edit the <code>/etc/profile.local</code> file for our VMware ESXi SSH prompt as the agentless service expects the prompt to end with either <code>#</code> or <code>$</code>. As administrator SSH to the VMware ESXi shell and using the vi editor append the following line.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># profile.local</span>\n<span class="token comment"># This file is not used when UEFI secure boot is enabled</span>\n<span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token entity" title="\\e">\\e</span>[0;41m[\\u@\\h \\W]\\$ <span class="token entity" title="\\e">\\e</span>[m&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="enabling-agentless-monitoring" tabindex="-1"><a class="header-anchor" href="#enabling-agentless-monitoring" aria-hidden="true">#</a> Enabling agentless monitoring</h3><p>To enable agentless monitoring go back to our OSSEC server and execute the following command.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ /var/ossec/bin/ossec-control <span class="token builtin class-name">enable</span> agentless\n</code></pre></div><p>Proceed to add VMware ESXi server. as agentless, using the <em>NOPASS</em> option as we&#39;re using SSH keys to authenticate.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ /var/ossec/agentless/register_host.sh <span class="token function">add</span> root@192.168.0.2 NOPASS\n</code></pre></div><p>To test if the authentication works you can run the command below.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> -u ossec <span class="token function">ssh</span> root@192.168.0.2\n</code></pre></div><h3 id="configure-agentless-monitoring" tabindex="-1"><a class="header-anchor" href="#configure-agentless-monitoring" aria-hidden="true">#</a> Configure agentless monitoring</h3>',10),es=(0,t.Uk)("For more information regarding setting up and configure agentless monitoring check the OSSEC documentation "),os={href:"https://www.ossec.net/docs/manual/agent/agentless-monitoring.html",target:"_blank",rel:"noopener noreferrer"},ps=(0,t.Uk)("here"),ls=(0,t.Uk)("."),cs=(0,t.uE)('<p>Open the OSSEC configuration file and add the VMware ESXi IP address to the remote syslog section.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/etc/ossec.conf\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>connection</span><span class="token punctuation">&gt;</span></span>syslog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>connection</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>allowed-ips</span><span class="token punctuation">&gt;</span></span>192.168.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>allowed-ips</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- VMware ESXi --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Additionally add the agentless types to our configuration.</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>agentless</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>ssh_integrity_check_bsd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frequency</span><span class="token punctuation">&gt;</span></span>36000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frequency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">&gt;</span></span>root@192.168.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- VMware ESXi --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>state</span><span class="token punctuation">&gt;</span></span>periodic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>state</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arguments</span><span class="token punctuation">&gt;</span></span>/bin /etc/ /sbin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arguments</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>agentless</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>agentless</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>ssh_generic_diff<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frequency</span><span class="token punctuation">&gt;</span></span>36000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frequency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">&gt;</span></span>root@192.168.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- VMware ESXi --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>state</span><span class="token punctuation">&gt;</span></span>periodic_diff<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>state</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arguments</span><span class="token punctuation">&gt;</span></span>ls -la /etc; cat /etc/passwd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arguments</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>agentless</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Finally restart OSSEC.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/ossec-control restart\n</code></pre></div><h2 id="firewall-settings" tabindex="-1"><a class="header-anchor" href="#firewall-settings" aria-hidden="true">#</a> Firewall settings</h2>',8),is=(0,t.Uk)("The firewall being used is UFW (Uncomplicated Firewall). It is set by default to deny incoming traffic, allow outgoing traffic and allow port 22 (OpenSSH). Read more about UFW "),us={href:"https://help.ubuntu.com/community/UFW",target:"_blank",rel:"noopener noreferrer"},rs=(0,t.Uk)("here"),gs=(0,t.Uk)("."),ks=(0,t.uE)('<details class="custom-container details"><summary>UFW Settings</summary><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> ufw default deny incoming\nserver@ubuntu:~$ <span class="token function">sudo</span> ufw default allow outgoing\nserver@ubuntu:~$ <span class="token function">sudo</span> ufw allow <span class="token number">22</span>\nserver@ubuntu:~$ <span class="token function">sudo</span> ufw <span class="token builtin class-name">enable</span>\nCommand may disrupt existing <span class="token function">ssh</span> connections. Proceed with operation <span class="token punctuation">(</span>y<span class="token operator">|</span>n<span class="token punctuation">)</span>? y\nFirewall is active and enabled on system startup\n</code></pre></div></details><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> ufw allow proto udp from <span class="token number">192.168</span>.0.2 to any port <span class="token number">1514</span> comment <span class="token string">&quot;OSSEC client&quot;</span>\nserver@ubuntu:~$ <span class="token function">sudo</span> ufw allow proto udp from <span class="token number">192.168</span>.0.2 to any port <span class="token number">514</span> comment <span class="token string">&quot;OSSEC client syslog&quot;</span>\n</code></pre></div><h2 id="slack-integration" tabindex="-1"><a class="header-anchor" href="#slack-integration" aria-hidden="true">#</a> Slack integration</h2><p>Download <a href="/img/ossec/512x512.png">OSSEC icon</a> for the Slack App integration.</p><p>Add the ossec-slack command within the command section of the OSSEC configuration file.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/etc/ossec.conf\n</code></pre></div><p>To send all alerts to Slack with the pre-defined alert level, leave the expect segment blank.</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>command</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>ossec-slack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executable</span><span class="token punctuation">&gt;</span></span>ossec-slack.sh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executable</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expect</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expect</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- no expect args required --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeout_allowed</span><span class="token punctuation">&gt;</span></span>no<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeout_allowed</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>command</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>In the active response section we&#39;ll set the alert level.</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active-response</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>command</span><span class="token punctuation">&gt;</span></span>ossec-slack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>command</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">&gt;</span></span>server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active-response</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Next edit the <code>ossec-slack.sh</code> file to match our Slack App settings.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/active-response/bin/ossec-slack.sh\n</code></pre></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>Make sure that the log path is correct <code>/../</code> in the ossec-slack.sh file.</p></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">SLACKUSER</span><span class="token operator">=</span><span class="token string">&quot;OSSEC&quot;</span>\n<span class="token assign-left variable">CHANNEL</span><span class="token operator">=</span><span class="token string">&quot;#ossec-hids&quot;</span>\n<span class="token assign-left variable">SITE</span><span class="token operator">=</span><span class="token string">&quot;https://hooks.slack.com/services/XXXXXXXXX/XXXXXXXX/XXXXXXXXXXX&quot;</span>\n<span class="token assign-left variable">SOURCE</span><span class="token operator">=</span><span class="token string">&quot;ossec2slack&quot;</span>\n<span class="token punctuation">..</span>.\n<span class="token comment"># Logging</span>\n<span class="token builtin class-name">cd</span> <span class="token variable">$LOCAL</span>\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/\n<span class="token assign-left variable"><span class="token environment constant">PWD</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">`</span><span class="token function">date</span><span class="token variable">`</span></span> <span class="token variable">$0</span> <span class="token variable">$1</span> <span class="token variable">$2</span> <span class="token variable">$3</span> <span class="token variable">$4</span> <span class="token variable">$5</span> <span class="token variable">$6</span> <span class="token variable">$7</span> <span class="token variable">$8</span>&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">${<span class="token environment constant">PWD</span>}</span>/<span class="token punctuation">..</span>/logs/active-responses.log\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Save the file and reload OSSEC and we should now start receive alerts to our defined channel.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/ossec-control reload\n</code></pre></div><h2 id="cloudflare-integration" tabindex="-1"><a class="header-anchor" href="#cloudflare-integration" aria-hidden="true">#</a> Cloudflare integration</h2><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>The Cloudflare integration requires you to have the jq (JSON processing) tool installed. This tool is used when removing blocked IP&#39;s following the repeated offenders timeout interval.</p></div><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> jq\n</code></pre></div><p>First add the cloudflare-ban command to the OSSEC configuration file.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/etc/ossec.conf\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>command</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>cloudflare-ban<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executable</span><span class="token punctuation">&gt;</span></span>cloudflare-ban.sh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executable</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeout_allowed</span><span class="token punctuation">&gt;</span></span>yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeout_allowed</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>expect</span><span class="token punctuation">&gt;</span></span>srcip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>expect</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>command</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>As well to the active response section. Here we set to block all alerts level 6 or greater.</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active-response</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>command</span><span class="token punctuation">&gt;</span></span>cloudflare-ban<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>command</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">&gt;</span></span>server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeout</span><span class="token punctuation">&gt;</span></span>43200<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeout</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active-response</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Next proceed to update the <code>cloudflare-ban.sh</code> script and put your Cloudflare username along with your Global API key.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/active-response/bin/cloudflare-ban.sh\n</code></pre></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">ACTION</span><span class="token operator">=</span><span class="token variable">$1</span>\n<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable">$2</span>\n<span class="token assign-left variable">IP</span><span class="token operator">=</span><span class="token variable">$3</span>\n<span class="token assign-left variable"><span class="token environment constant">PWD</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span>\n<span class="token assign-left variable">TOKEN</span><span class="token operator">=</span><span class="token string">&#39;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9ey&#39;</span>\n<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token string">&#39;cloudflareuser@email.com&#39;</span>\n<span class="token assign-left variable">MODE</span><span class="token operator">=</span><span class="token string">&#39;block&#39;</span> <span class="token comment"># block or challenge</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Save the changes and reload OSSEC.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/ossec-control reload\n</code></pre></div><p>To monitor the blocked IP address within the Cloudflare account, go to Firewall, Tools and under IP Access Rules.</p><h2 id="monitoring" tabindex="-1"><a class="header-anchor" href="#monitoring" aria-hidden="true">#</a> Monitoring</h2><p>To monitor if the OSSEC daemons are running accordingly, we use Monit to monitor the current status. Edit the Monit configuration file and add the lines below, continue with reloading the Monit daemon to apply the new monitoring rules. If working correctly we shall now receive M/Monit alerts saying processes is not running.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>client@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /usr/local/etc/monitrc\n</code></pre></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># OSSEC processes</span>\ncheck process ossec-agentd matching <span class="token string">&quot;ossec-agentd&quot;</span>\ncheck process ossec-execd matching <span class="token string">&quot;ossec-execd&quot;</span>\ncheck process ossec-logcollector matching <span class="token string">&quot;ossec-logcollector&quot;</span>\ncheck process ossec-syscheckd matching <span class="token string">&quot;ossec-syscheckd&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Save and reload Monit.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>client@ubuntu:~$ <span class="token builtin class-name">cd</span> /usr/local/\nclient@ubuntu:~$ <span class="token function">sudo</span> ./bin/monit reload\n</code></pre></div><h3 id="monitor-failed-m-monit-login-attempts-with-ossec" tabindex="-1"><a class="header-anchor" href="#monitor-failed-m-monit-login-attempts-with-ossec" aria-hidden="true">#</a> Monitor failed M/Monit login attempts with OSSEC</h3><p>Add the M/Monit error.log path to the OSSEC monitor section (local files).</p><div class="language-bash ext-sh"><pre class="language-bash"><code>client@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/etc/ossec.conf\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localfile</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log_format</span><span class="token punctuation">&gt;</span></span>syslog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log_format</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">&gt;</span></span>/usr/local/mmonit-3.7.2/logs/error.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localfile</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Go to the OSSEC server and add the custom rule to the <code>local_rules.xml</code> file.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">nano</span> /var/ossec/rules/local_rules.xml\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100101<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if_sid</span><span class="token punctuation">&gt;</span></span>2501<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if_sid</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">&gt;</span></span>Unauthorized, authentication failed for<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span><span class="token punctuation">&gt;</span></span>authentication_failed,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>User authentication failure.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Save and reload the OSSEC server.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">sudo</span> /var/ossec/bin/ossec-control reload\n</code></pre></div><h2 id="upgrading" tabindex="-1"><a class="header-anchor" href="#upgrading" aria-hidden="true">#</a> Upgrading</h2>',46),ds=(0,t.Uk)("To upgrade OSSEC, download the "),bs={href:"https://github.com/ossec/ossec-hids/releases",target:"_blank",rel:"noopener noreferrer"},hs=(0,t.Uk)("latest release"),ms=(0,t.Uk)(", extract the file and run the install script. The installer will tell if OSSEC is already installed and if you wish to update it."),vs=(0,t.uE)('<div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">wget</span> https://github.com/ossec/ossec-hids/archive/3.6.0.tar.gz\nserver@ubuntu:~$ <span class="token function">tar</span> -zxvf <span class="token number">3.6</span>.0.tar.gz\nserver@ubuntu:~$ <span class="token builtin class-name">cd</span> ossec-hids-3.6.0/\nserver@ubuntu:~$ <span class="token function">wget</span> https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz\nserver@ubuntu:~$ <span class="token function">tar</span> -zxvf pcre2-10.32.tar.gz -C src/external/\nserver@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> build-essential libssl-dev libpcre2-dev zlib1g-dev\nserver@ubuntu:~$ <span class="token function">sudo</span> <span class="token assign-left variable">PCRE2_SYSTEM</span><span class="token operator">=</span>yes ./install\n</code></pre></div><h3 id="upgrade-to-ossec-3-3-0" tabindex="-1"><a class="header-anchor" href="#upgrade-to-ossec-3-3-0" aria-hidden="true">#</a> Upgrade to OSSEC 3.3.0</h3><p>To upgrade to OSSEC 3.3.0 using the pcre2 package, download the new version along with the pcre2 package, extract and upgrade OSSEC as normal.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">wget</span> https://github.com/ossec/ossec-hids/archive/3.3.0.tar.gz\nserver@ubuntu:~$ <span class="token function">tar</span> -zxvf <span class="token number">3.3</span>.0.tar.gz\nserver@ubuntu:~$ <span class="token builtin class-name">cd</span> ossec-hids-3.3.0/\nserver@ubuntu:~$ <span class="token function">wget</span> https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz\nserver@ubuntu:~$ <span class="token function">tar</span> -zxvf pcre2-10.32.tar.gz -C src/external/\nserver@ubuntu:~$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> build-essential libssl-dev libpcre2-dev zlib1g-dev\nserver@ubuntu:~$ <span class="token function">sudo</span> <span class="token assign-left variable">PCRE2_SYSTEM</span><span class="token operator">=</span>yes ./install\n</code></pre></div><div class="language-bash ext-sh"><pre class="language-bash"><code>OSSEC HIDS v2.9.3 Installation Script - http://www.ossec.net\n \nYou are about to start the installation process of the OSSEC HIDS.\nYou must have a C compiler pre-installed <span class="token keyword">in</span> your system.\n \n    - System: Linux <span class="token function">hostname</span> <span class="token number">4.4</span>.0-116-generic\n    - User: root\n    - Host: <span class="token function">hostname</span>\n\n    -- Press ENTER to <span class="token builtin class-name">continue</span> or Ctrl-C to abort. --\n\n    - You already have OSSEC installed. Do you want to update it? <span class="token punctuation">(</span>y/n<span class="token punctuation">)</span>: y\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div></div><h2 id="custom-rules" tabindex="-1"><a class="header-anchor" href="#custom-rules" aria-hidden="true">#</a> Custom rules</h2>',6),fs=(0,t.Uk)("Read more about how to create custom rules and decoders "),_s={href:"https://www.ossec.net/docs/manual/rules-decoders/create-custom.html",target:"_blank",rel:"noopener noreferrer"},ws=(0,t.Uk)("here"),ys=(0,t.Uk)("."),Ss={href:"https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/ossec/config/local_rules.xml",target:"_blank",rel:"noopener noreferrer"},xs=(0,t.Uk)("local_rules.xml"),Us=(0,t.uE)('<h3 id="ignore-snap-loop-devices" tabindex="-1"><a class="header-anchor" href="#ignore-snap-loop-devices" aria-hidden="true">#</a> Ignore snap loop devices</h3><p><code>/var/ossec/rules/local_rules.xml</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if_sid</span><span class="token punctuation">&gt;</span></span>531<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if_sid</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>regex</span><span class="token punctuation">&gt;</span></span>&#39;df -P&#39;:\\s+/dev/loop\\d+\\s+\\d+\\s+\\d+\\s+0\\s+100%\\s+/snap/\\w+/\\d+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>regex</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Ignore full snap loop devices.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="monitor-failed-m-monit-authentication" tabindex="-1"><a class="header-anchor" href="#monitor-failed-m-monit-authentication" aria-hidden="true">#</a> Monitor failed M/Monit authentication</h3><p><code>/var/ossec/rules/local_rules.xml</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100101<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if_sid</span><span class="token punctuation">&gt;</span></span>2501<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if_sid</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">&gt;</span></span>Unauthorized, authentication failed for<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span><span class="token punctuation">&gt;</span></span>authentication_failed,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>User authentication failure.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>/var/ossec/etc/oseec.conf</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localfile</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log_format</span><span class="token punctuation">&gt;</span></span>syslog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log_format</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">&gt;</span></span>/usr/local/mmonit-3.7.2/logs/error.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localfile</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="mute-useless-systemd-resolved-message" tabindex="-1"><a class="header-anchor" href="#mute-useless-systemd-resolved-message" aria-hidden="true">#</a> Mute useless systemd-resolved message</h3><p><code>/var/ossec/rules/local_rules.xml</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100102<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>program_name</span><span class="token punctuation">&gt;</span></span>systemd-resolved<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>program_name</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">&gt;</span></span>Server returned error NXDOMAIN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Useless systemd-resolved log message.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="alert-on-fail2ban-action" tabindex="-1"><a class="header-anchor" href="#alert-on-fail2ban-action" aria-hidden="true">#</a> Alert on fail2ban action</h3><p><code>/var/ossec/rules/local_rules.xml</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100103<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">&gt;</span></span>fail2ban.actions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span><span class="token punctuation">&gt;</span></span>authentication_failed,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Fail2ban action taken.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>/var/ossec/etc/oseec.conf</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localfile</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log_format</span><span class="token punctuation">&gt;</span></span>syslog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log_format</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">&gt;</span></span>/var/log/fail2ban.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localfile</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="command-line" tabindex="-1"><a class="header-anchor" href="#command-line" aria-hidden="true">#</a> Command-line</h2><table><thead><tr><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>/var/ossec/bin/agent_control -lc</td><td>List all active agents</td></tr><tr><td>/var/ossec/bin/ossec-logtest</td><td>Logtest</td></tr><tr><td>/var/ossec/bin/ossec-control</td><td>start,stop,reload,restart,status,enable,disable</td></tr><tr><td>/var/ossec/bin/manage_agents</td><td>manage agents (e.g., add, remove)</td></tr></tbody></table><h2 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a> Troubleshooting</h2>',19),Es=(0,t.Uk)("If you encounter any issue or having questions regarding OSSEC I recommend using their very helpful "),Cs={href:"https://groups.google.com/forum/#!forum/ossec-list",target:"_blank",rel:"noopener noreferrer"},Is=(0,t.Uk)("mailing list"),As=(0,t.Uk)("."),Os=(0,t.Uk)("You can also read more about debug mode and how to view more verbose logs "),qs={href:"https://www.ossec.net/docs/faq/unexpected.html",target:"_blank",rel:"noopener noreferrer"},Ds=(0,t.Uk)("here"),Ws=(0,t.Uk)("."),Rs={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},$s=(0,t.Uk)("Questions"),Ps=(0,t.Uk)(", "),zs={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},Ms=(0,t.Uk)("comments"),Ns=(0,t.Uk)(", or "),Ts={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},Fs=(0,t.Uk)("problems"),Hs=(0,t.Uk)(" regarding this service? Create an issue "),Xs={href:"https://github.com/libellux/Libellux-Up-and-Running/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},Bs=(0,t.Uk)("here"),Ls=(0,t.Uk)(" or contact "),Vs=(0,t._)("a",{href:"mailto:webmaster@libellux.com"},"webmaster@libellux.com",-1),Ys=(0,t.Uk)("."),Gs=(0,t.uE)('<h3 id="duplicate-counter-error" tabindex="-1"><a class="header-anchor" href="#duplicate-counter-error" aria-hidden="true">#</a> Duplicate counter error</h3><p>In the OSSEC log (/var/ossec/logs/ossec.log) you might notice that the log gets filled with warnings and errors as shown below.</p><div class="language-log ext-log line-numbers-mode"><pre class="language-log"><code><span class="token date number">2019/02/21</span> <span class="token time number">13:33:21</span> ossec<span class="token operator">-</span>remoted<span class="token operator">:</span> <span class="token level warning important">WARN</span><span class="token operator">:</span> Duplicate error<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\n<span class="token date number">2019/02/21</span> <span class="token time number">13:33:21</span> ossec<span class="token operator">-</span>remoted<span class="token operator">(</span><span class="token number">1407</span><span class="token operator">)</span><span class="token operator">:</span> <span class="token level error important">ERROR</span><span class="token operator">:</span> Duplicated counter for <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Stop both the OSSEC manager and the agent. In the agent server go to /var/ossec/queue/rids and remove all the files within the folder. At the manager server go into /var/ossec/queue/rids and remove the file corresponding to the agents ID. Do not delete the sender_counter. Restart both.</p><p>Or disable the feature by editing <code>/var/ossec/etc/internal_options.conf</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Verify msg id (set to 0 to disable it)</span>\nremoted.verify_msg_id<span class="token operator">=</span><span class="token number">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Save and restart.</p><h3 id="build-essential" tabindex="-1"><a class="header-anchor" href="#build-essential" aria-hidden="true">#</a> build-essential</h3><p>If receiving build error <code>./install.sh: 105: make: not found</code> install the build-essential package <code>sudo apt-get install build-essential</code>.</p><h3 id="libevent-dev" tabindex="-1"><a class="header-anchor" href="#libevent-dev" aria-hidden="true">#</a> libevent-dev</h3><p>If receiving the build error below, install the libevent development package <code>sudo apt-get install libevent-dev</code>.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>os_maild/sendmail.c:12:10: fatal error: event.h: No such <span class="token function">file</span> or directory\n<span class="token number">12</span> <span class="token operator">|</span> <span class="token comment">#include &lt;event.h&gt;</span>\n   <span class="token operator">|</span>          ^~~~~~~~~\ncompilation terminated.\nmake: *** <span class="token punctuation">[</span>Makefile:926: os_maild/sendmail.o<span class="token punctuation">]</span> Error <span class="token number">1</span>\n</code></pre></div><h3 id="pcre2-libpcre2-dev" tabindex="-1"><a class="header-anchor" href="#pcre2-libpcre2-dev" aria-hidden="true">#</a> pcre2 &amp; libpcre2-dev</h3>',13),js=(0,t.Uk)("If receiving the build error "),Qs=(0,t._)("code",null,"./os_regex/os_regex.h:19:10: fatal error: pcre2.h: No such file or directory",-1),Ks=(0,t.Uk)(" download and install pcre2 package (version 10.32) found "),Js={href:"https://ftp.pcre.org/pub/pcre/",target:"_blank",rel:"noopener noreferrer"},Zs=(0,t.Uk)("here"),na=(0,t.Uk)("."),sa=(0,t.uE)('<div class="language-bash ext-sh"><pre class="language-bash"><code>server@ubuntu:~$ <span class="token function">wget</span> https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz\nserver@ubuntu:~$ <span class="token function">tar</span> -zxvf pcre2-10.32.tar.gz -C src/external/\n</code></pre></div><p>If the build error persist, make sure to install the libpcre2 development package <code>sudo apt-get install libpcre2-dev</code>.</p><h3 id="zlib1g-dev" tabindex="-1"><a class="header-anchor" href="#zlib1g-dev" aria-hidden="true">#</a> zlib1g-dev</h3><p>If receiving the build error <code>os_zlib/os_zlib.c:13:10: fatal error: zlib.h: No such file or directory</code> install the zlib1g development package <code>sudo apt-get install zlib1g-dev</code>.</p><h3 id="libssl-dev" tabindex="-1"><a class="header-anchor" href="#libssl-dev" aria-hidden="true">#</a> libssl-dev</h3><p>If receiving the build error <code>./external/compat/includes.h:65:10: fatal error: openssl/opensslv.h: No such file or directory</code> install the libssl development package <code>sudo apt-get install libssl-dev</code>.</p><h3 id="ignore-snap-partition-state" tabindex="-1"><a class="header-anchor" href="#ignore-snap-partition-state" aria-hidden="true">#</a> Ignore snap partition state</h3><p>If receiving multiple snap partition usage alerts, add a custom rule to local_rules.xml.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>Rule: <span class="token number">531</span> <span class="token punctuation">(</span>level <span class="token number">7</span><span class="token punctuation">)</span> -<span class="token operator">&gt;</span> <span class="token string">&#39;Partition usage reached 100% (disk space monitor).&#39;</span>\nossec: output: <span class="token string">&#39;df -P&#39;</span><span class="token builtin class-name">:</span> /dev/loop0           <span class="token number">27776</span>   <span class="token number">27776</span>         <span class="token number">0</span>     <span class="token number">100</span>% /snap/snapd/7264\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if_sid</span><span class="token punctuation">&gt;</span></span>531<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if_sid</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>regex</span><span class="token punctuation">&gt;</span></span>&#39;df -P&#39;:\\s+/dev/loop\\d+\\s+\\d+\\s+\\d+\\s+0\\s+100%\\s+/snap/\\w+/\\d+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>regex</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Ignore full snap loop devices<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="server-returned-error-nxdomain" tabindex="-1"><a class="header-anchor" href="#server-returned-error-nxdomain" aria-hidden="true">#</a> Server returned error NXDOMAIN</h3><p>If receiving multiple systemd-resolved regarding NXDOMAIN and potential DNS violation, add a custom rule to local_rules.xml.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>systemd-resolved<span class="token punctuation">[</span><span class="token number">3225</span><span class="token punctuation">]</span>: message repeated <span class="token number">4</span> times: <span class="token punctuation">[</span> Server returned error NXDOMAIN, mitigating potential DNS violation DVE-2018-0001, retrying transaction with reduced feature level UDP.<span class="token punctuation">]</span>\n</code></pre></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rule</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100102<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>program_name</span><span class="token punctuation">&gt;</span></span>systemd-resolved<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>program_name</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>match</span><span class="token punctuation">&gt;</span></span>Server returned error NXDOMAIN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>match</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Useless systemd-resolved log message.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rule</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="cannot-unlink-queue-rids-sender" tabindex="-1"><a class="header-anchor" href="#cannot-unlink-queue-rids-sender" aria-hidden="true">#</a> Cannot unlink /queue/rids/sender</h3><p>If receiving the error message shown below.</p><div class="language-log ext-log line-numbers-mode"><pre class="language-log"><code><span class="token date number">2020/08/09</span> <span class="token time number">20:04:17</span> manage_agents<span class="token operator">:</span> <span class="token level error important">ERROR</span><span class="token operator">:</span> Cannot unlink <span class="token file-path string">/queue/rids/sender</span><span class="token operator">:</span> No such file or directory\nAdded<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Proceed with creating the missing file <code>sudo touch /queue/rids/sender</code>.</p>',18),aa={id:"enterprise-solutions",tabindex:"-1"},ta=(0,t._)("a",{class:"header-anchor",href:"#enterprise-solutions","aria-hidden":"true"},"#",-1),ea=(0,t.Uk)(" Enterprise solutions "),oa=(0,t._)("h3",{id:"atomic-enterprise-ossec",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#atomic-enterprise-ossec","aria-hidden":"true"},"#"),(0,t.Uk)(" Atomic Enterprise OSSEC")],-1),pa=(0,t._)("p",null,"Atomic Enterprise OSSEC is built specifically for organizations that need to leverage OSSEC in large or mission critical environments. With a dedicated management console, thousands of pre-built OSSEC rules, compliance reporting, and more, Atomic Enterprise OSSEC makes it easy to deploy, manage, and use OSSEC in any on-premise, cloud, or hybrid environment.",-1),la={href:"https://atomicorp.com/atomic-enterprise-ossec/",target:"_blank",rel:"noopener noreferrer"},ca=(0,t.Uk)("Atomic Enterprise OSSEC"),ia={render:function(n,s){const a=(0,t.up)("Badge"),ia=(0,t.up)("OutboundLink"),ua=(0,t.up)("CodeGroupItem"),ra=(0,t.up)("CodeGroup");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("h1",e,[o,p,(0,t.Wm)(a,{text:"Rev 2",type:"tip"})]),l,(0,t._)("p",null,[(0,t._)("a",c,[i,(0,t.Wm)(ia)]),u,(0,t._)("a",r,[g,(0,t.Wm)(ia)])]),k,d,(0,t._)("p",null,[(0,t._)("a",b,[h,(0,t.Wm)(ia)])]),m,v,(0,t._)("p",null,[f,(0,t._)("a",_,[w,(0,t.Wm)(ia)]),y]),S,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[x])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[U])),_:1})])),_:1}),E,(0,t._)("p",null,[C,(0,t._)("a",I,[A,(0,t.Wm)(ia)]),O,(0,t._)("a",q,[D,(0,t.Wm)(ia)]),W,(0,t._)("a",R,[$,(0,t.Wm)(ia)]),P]),(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[z])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[M])),_:1})])),_:1}),N,(0,t._)("p",null,[T,(0,t._)("a",F,[H,(0,t.Wm)(ia)]),X]),(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[B])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[L])),_:1})])),_:1}),V,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[Y])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[G])),_:1})])),_:1}),j,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[Q])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[K])),_:1})])),_:1}),J,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[Z])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[nn])),_:1})])),_:1}),sn,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[an])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[tn])),_:1})])),_:1}),en,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[on])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[pn])),_:1})])),_:1}),ln,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[cn])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[un])),_:1})])),_:1}),rn,(0,t._)("p",null,[gn,(0,t._)("a",kn,[dn,(0,t.Wm)(ia)]),bn,(0,t._)("a",hn,[mn,(0,t.Wm)(ia)]),vn,(0,t._)("a",fn,[_n,(0,t.Wm)(ia)]),wn]),(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[yn])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[Sn])),_:1})])),_:1}),xn,(0,t._)("p",null,[Un,(0,t._)("a",En,[Cn,(0,t.Wm)(ia)]),In]),(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[An])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[On])),_:1})])),_:1}),qn,(0,t.Wm)(ra,null,{default:(0,t.w5)((()=>[(0,t.Wm)(ua,{title:"Ubuntu"},{default:(0,t.w5)((()=>[Dn])),_:1}),(0,t.Wm)(ua,{title:"Rocky"},{default:(0,t.w5)((()=>[Wn])),_:1})])),_:1}),Rn,(0,t._)("p",null,[$n,(0,t._)("a",Pn,[zn,(0,t.Wm)(ia)]),Mn,(0,t._)("a",Nn,[Tn,(0,t.Wm)(ia)]),Fn,Hn,Xn]),(0,t._)("img",{class:"zoom-custom-imgs",src:"/img/ossec/windows_agent_setup.png",alt:"Windows setup"},null,8,Bn),Ln,(0,t._)("img",{class:"zoom-custom-imgs",src:"/img/ossec/windows_agent_components.png",alt:"Windows components"},null,8,Vn),Yn,(0,t._)("img",{class:"zoom-custom-imgs",src:"/img/ossec/windows_agent_manager.png",alt:"Windows manager"},null,8,Gn),(0,t._)("p",null,[jn,(0,t._)("a",Qn,[Kn,(0,t.Wm)(ia)]),Jn]),Zn,(0,t._)("img",{class:"zoom-custom-imgs",src:"/img/ossec/remote_syslog_settings.png",alt:"VMware syslog settings"},null,8,ns),ss,(0,t._)("img",{class:"zoom-custom-imgs",src:"/img/ossec/remote_syslog_value.png",alt:"VMware syslog options"},null,8,as),ts,(0,t._)("p",null,[es,(0,t._)("a",os,[ps,(0,t.Wm)(ia)]),ls]),cs,(0,t._)("p",null,[is,(0,t._)("a",us,[rs,(0,t.Wm)(ia)]),gs]),ks,(0,t._)("p",null,[ds,(0,t._)("a",bs,[hs,(0,t.Wm)(ia)]),ms]),vs,(0,t._)("p",null,[fs,(0,t._)("a",_s,[ws,(0,t.Wm)(ia)]),ys]),(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",Ss,[xs,(0,t.Wm)(ia)])])]),Us,(0,t._)("p",null,[Es,(0,t._)("a",Cs,[Is,(0,t.Wm)(ia)]),As]),(0,t._)("p",null,[Os,(0,t._)("a",qs,[Ds,(0,t.Wm)(ia)]),Ws]),(0,t._)("p",null,[(0,t._)("a",Rs,[$s,(0,t.Wm)(ia)]),Ps,(0,t._)("a",zs,[Ms,(0,t.Wm)(ia)]),Ns,(0,t._)("a",Ts,[Fs,(0,t.Wm)(ia)]),Hs,(0,t._)("a",Xs,[Bs,(0,t.Wm)(ia)]),Ls,Vs,Ys]),Gs,(0,t._)("p",null,[js,Qs,Ks,(0,t._)("a",Js,[Zs,(0,t.Wm)(ia)]),na]),sa,(0,t._)("h2",aa,[ta,ea,(0,t.Wm)(a,{text:"non-sponsored",type:"default"})]),oa,pa,(0,t._)("p",null,[(0,t._)("a",la,[ca,(0,t.Wm)(ia)])])],64)}}}}]);