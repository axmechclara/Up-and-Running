"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[640],{373:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-15230830",path:"/psad/",title:"PSAD Port Scan Attack Detector",lang:"en-US",frontmatter:{lang:"en-US",title:"PSAD Port Scan Attack Detector",description:"PSAD (Port Scan Attack Detector) is a collection of three lightweight system daemons (two main daemons and one helper daemon) that run on Linux machines and analyze iptables log messages to detect port scans and other suspicious traffic. A typical deployment is to run PSAD on the iptables firewall where it has the fastest access to log data."},excerpt:"",headers:[{level:2,title:"Configuration files",slug:"configuration-files",children:[]},{level:2,title:"Prerequisites",slug:"prerequisites",children:[]},{level:2,title:"Install PSAD from source",slug:"install-psad-from-source",children:[]},{level:2,title:"Configuration",slug:"configuration",children:[{level:3,title:"Enable PSAD rules in OSSEC",slug:"enable-psad-rules-in-ossec",children:[]}]},{level:2,title:"Firewall settings",slug:"firewall-settings",children:[]},{level:2,title:"Command-line",slug:"command-line",children:[]}],filePathRelative:"psad/README.md",git:{updatedTime:1632500118e3,contributors:[{name:"Libellux",email:"fredrik@libellux.com",commits:23}]}}},6758:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var e=a(6252),t=a(9763);const l={},o=(0,a(3744).Z)(l,[["ssrRender",function(n,s,a,l){const o=(0,e.up)("Badge"),i=(0,e.up)("OutboundLink"),c=(0,e.up)("CodeGroup"),u=(0,e.up)("CodeGroupItem");s('\x3c!--[--\x3e<h1 id="psad-intrusion-detection-with-log-analysis" tabindex="-1"><a class="header-anchor" href="#psad-intrusion-detection-with-log-analysis" aria-hidden="true">#</a> PSAD Intrusion Detection with Log Analysis '),s((0,t.FG)(o,{text:"Rev 2",type:"tip"},null,a)),s('</h1><p>PSAD (Port Scan Attack Detector) is a collection of three lightweight system daemons (two main daemons and one helper daemon) that run on Linux machines and analyze iptables log messages to detect port scans and other suspicious traffic. A typical deployment is to run PSAD on the iptables firewall where it has the fastest access to log data.</p><p><a href="https://cipherdyne.org/psad/" target="_blank" rel="noopener noreferrer">PSAD website'),s((0,t.FG)(i,null,null,a)),s('</a> <a href="https://github.com/mrash/psad" target="_blank" rel="noopener noreferrer">GitHub'),s((0,t.FG)(i,null,null,a)),s('</a></p><p>Setup and configuration have been tested on the following operating systems:</p><ul><li>Ubuntu- 16.04, 18.04, 20.04 (Focal Fossa), Rocky 8.4 (Green Obsidian)</li><li>PSAD- 2.2.3 -&gt; 2.4.6</li></ul><p><a href="https://ko-fi.com/B0B31BJU3" target="_blank" rel="noopener noreferrer"><img src="https://www.ko-fi.com/img/githubbutton_sm.svg" alt="ko-fi">'),s((0,t.FG)(i,null,null,a)),s('</a></p><h2 id="configuration-files" tabindex="-1"><a class="header-anchor" href="#configuration-files" aria-hidden="true">#</a> Configuration files</h2><ul><li><a href="https://github.com/libellux/Libellux-Up-and-Running/blob/master/docs/psad/config/psad.conf" target="_blank" rel="noopener noreferrer">psad.conf'),s((0,t.FG)(i,null,null,a)),s('</a></li></ul><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h2><p>Dependancies when installing PSAD from source.</p><ul><li><code>net-tools</code></li><li><code>g++</code></li></ul><h2 id="install-psad-from-source" tabindex="-1"><a class="header-anchor" href="#install-psad-from-source" aria-hidden="true">#</a> Install PSAD from source</h2><p>Make sure you have installed the dependency packages and once complete download the lastest stable version from the <a href="https://github.com/mrash/psad" target="_blank" rel="noopener noreferrer">PSAD GitHub'),s((0,t.FG)(i,null,null,a)),s("</a>, extract and run the installation script.</p>"),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"apt-get"),(0,e.Uk)(" update "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"apt-get"),(0,e.Uk)(" -y upgrade "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"apt-get"),(0,e.Uk)(" -y "),(0,e.Wm)("span",{class:"token function"},"install"),(0,e.Uk)(" net-tools g++ "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"wget"),(0,e.Uk)(" https://github.com/mrash/psad/archive/2.4.6.tar.gz "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"tar"),(0,e.Uk)(" -zxvf "),(0,e.Wm)("span",{class:"token number"},"2.4"),(0,e.Uk)(".6.tar.gz "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token builtin class-name"},"cd"),(0,e.Uk)(" psad-2.4.6/ "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" ./install.pl\n")])])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"apt-get"),(0,e.Uk)(" update "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"apt-get"),(0,e.Uk)(" -y upgrade "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"apt-get"),(0,e.Uk)(" -y "),(0,e.Wm)("span",{class:"token function"},"install"),(0,e.Uk)(" net-tools g++ "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"wget"),(0,e.Uk)(" https://github.com/mrash/psad/archive/2.4.6.tar.gz "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"tar"),(0,e.Uk)(" -zxvf "),(0,e.Wm)("span",{class:"token number"},"2.4"),(0,e.Uk)(".6.tar.gz "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token builtin class-name"},"cd"),(0,e.Uk)(" psad-2.4.6/ "),(0,e.Wm)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" ./install.pl\n")])])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@ubuntu:~$ <span class="token function"${t}>sudo</span> <span class="token function"${t}>apt-get</span> update <span class="token operator"${t}>&amp;&amp;</span> <span class="token punctuation"${t}>\\</span>\n<span class="token function"${t}>sudo</span> <span class="token function"${t}>apt-get</span> -y upgrade <span class="token operator"${t}>&amp;&amp;</span> <span class="token punctuation"${t}>\\</span>\n<span class="token function"${t}>sudo</span> <span class="token function"${t}>apt-get</span> -y <span class="token function"${t}>install</span> net-tools g++ <span class="token operator"${t}>&amp;&amp;</span> <span class="token punctuation"${t}>\\</span>\n<span class="token function"${t}>wget</span> https://github.com/mrash/psad/archive/2.4.6.tar.gz <span class="token operator"${t}>&amp;&amp;</span> <span class="token punctuation"${t}>\\</span>\n<span class="token function"${t}>tar</span> -zxvf <span class="token number"${t}>2.4</span>.6.tar.gz <span class="token operator"${t}>&amp;&amp;</span> <span class="token builtin class-name"${t}>cd</span> psad-2.4.6/ <span class="token operator"${t}>&amp;&amp;</span> <span class="token punctuation"${t}>\\</span>\n<span class="token function"${t}>sudo</span> ./install.pl\n</code></pre></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre></div>`)})),_:1},a,l))})),_:1},a)),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" psad alerts will be sent to:\n\n       root@localhost\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Would you like alerts sent to a different address "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("y"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)("/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  n\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" By default, psad parses all iptables log messages "),(0,e.Wm)("span",{class:"token keyword"},"for"),(0,e.Uk)(" scan activity.\n    However, psad can be configured to only parse those iptables messages\n    that match particular strings "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("that are specified "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" your iptables\n    ruleset with the --log-prefix option"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(".\n\n    Would you like psad to only parse specific strings "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" iptables\n    messages "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("y/"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("n"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  n\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" By default, psad matches Snort rules against any IP addresses, but\n    psad offers the ability to restrict signature matches to specific\n    networks with the HOME_NET variable "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("similar to Snort"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(".  However, psad\n    also offers the ability to acquire all "),(0,e.Wm)("span",{class:"token builtin class-name"},"local"),(0,e.Uk)(" subnets on the "),(0,e.Wm)("span",{class:"token builtin class-name"},"local"),(0,e.Uk)(" system\n    by parsing the output of "),(0,e.Wm)("span",{class:"token string"},'"ifconfig"'),(0,e.Uk)(", or the subnets can be restricted\n    to a limited "),(0,e.Wm)("span",{class:"token builtin class-name"},"set"),(0,e.Uk)(" of networks.\n\n    First, is it ok to leave the HOME_NET setting as "),(0,e.Wm)("span",{class:"token string"},'"any"'),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("y"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)("/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  y\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" psad has the capability of sending scan data via email alerts to the\n    DShield distributed intrusion detection system "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("www.dshield.org"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(".  By\n    default this feature is not enabled since firewall log data is sensitive,\n    but submitting logs to DShield provides a valuable "),(0,e.Wm)("span",{class:"token function"},"service"),(0,e.Uk)(" and assists\n    "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" generally enhancing internet security.  As an optional step, "),(0,e.Wm)("span",{class:"token keyword"},"if"),(0,e.Uk)(" you\n    have a DShield user "),(0,e.Wm)("span",{class:"token function"},"id"),(0,e.Uk)(" you can edit the "),(0,e.Wm)("span",{class:"token string"},'"DSHIELD_USER_ID"'),(0,e.Uk)(" variable\n    "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" /etc/psad/psad.conf\n\n    Would you like to "),(0,e.Wm)("span",{class:"token builtin class-name"},"enable"),(0,e.Uk)(" DShield alerts "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("y/"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("n"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  n\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Setting "),(0,e.Wm)("span",{class:"token function"},"hostname"),(0,e.Uk)(" to "),(0,e.Wm)("span",{class:"token string"},'"client@ubuntu"'),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" /etc/psad/psad.conf\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" The latest psad signatures can be installed with "),(0,e.Wm)("span",{class:"token string"},'"psad --sig-update"'),(0,e.Uk)("\n    or installed now with install.pl.\n\n    If you decide to answer "),(0,e.Wm)("span",{class:"token string"},"'y'"),(0,e.Uk)(" to the next question, install.pl\n    will require DNS and network access now.\n\n    Would you like to "),(0,e.Wm)("span",{class:"token function"},"install"),(0,e.Uk)(" the latest signatures from\n      http://www.cipherdyne.org/psad/signatures "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("y/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  y\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Enable psad at boot "),(0,e.Wm)("span",{class:"token function"},"time"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("y"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)("/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  y\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" psad has been installed.\n")])]),(0,e.Wm)("div",{class:"highlight-lines"},[(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br")])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" psad alerts will be sent to:\n\n       root@localhost\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Would you like alerts sent to a different address "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("y"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)("/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  n\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" By default, psad parses all iptables log messages "),(0,e.Wm)("span",{class:"token keyword"},"for"),(0,e.Uk)(" scan activity.\n    However, psad can be configured to only parse those iptables messages\n    that match particular strings "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("that are specified "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" your iptables\n    ruleset with the --log-prefix option"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(".\n\n    Would you like psad to only parse specific strings "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" iptables\n    messages "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("y/"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("n"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  n\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" By default, psad matches Snort rules against any IP addresses, but\n    psad offers the ability to restrict signature matches to specific\n    networks with the HOME_NET variable "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("similar to Snort"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(".  However, psad\n    also offers the ability to acquire all "),(0,e.Wm)("span",{class:"token builtin class-name"},"local"),(0,e.Uk)(" subnets on the "),(0,e.Wm)("span",{class:"token builtin class-name"},"local"),(0,e.Uk)(" system\n    by parsing the output of "),(0,e.Wm)("span",{class:"token string"},'"ifconfig"'),(0,e.Uk)(", or the subnets can be restricted\n    to a limited "),(0,e.Wm)("span",{class:"token builtin class-name"},"set"),(0,e.Uk)(" of networks.\n\n    First, is it ok to leave the HOME_NET setting as "),(0,e.Wm)("span",{class:"token string"},'"any"'),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("y"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)("/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  y\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" psad has the capability of sending scan data via email alerts to the\n    DShield distributed intrusion detection system "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("www.dshield.org"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(".  By\n    default this feature is not enabled since firewall log data is sensitive,\n    but submitting logs to DShield provides a valuable "),(0,e.Wm)("span",{class:"token function"},"service"),(0,e.Uk)(" and assists\n    "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" generally enhancing internet security.  As an optional step, "),(0,e.Wm)("span",{class:"token keyword"},"if"),(0,e.Uk)(" you\n    have a DShield user "),(0,e.Wm)("span",{class:"token function"},"id"),(0,e.Uk)(" you can edit the "),(0,e.Wm)("span",{class:"token string"},'"DSHIELD_USER_ID"'),(0,e.Uk)(" variable\n    "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" /etc/psad/psad.conf\n\n    Would you like to "),(0,e.Wm)("span",{class:"token builtin class-name"},"enable"),(0,e.Uk)(" DShield alerts "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("y/"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("n"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  n\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Setting "),(0,e.Wm)("span",{class:"token function"},"hostname"),(0,e.Uk)(" to "),(0,e.Wm)("span",{class:"token string"},'"client@ubuntu"'),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" /etc/psad/psad.conf\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" The latest psad signatures can be installed with "),(0,e.Wm)("span",{class:"token string"},'"psad --sig-update"'),(0,e.Uk)("\n    or installed now with install.pl.\n\n    If you decide to answer "),(0,e.Wm)("span",{class:"token string"},"'y'"),(0,e.Uk)(" to the next question, install.pl\n    will require DNS and network access now.\n\n    Would you like to "),(0,e.Wm)("span",{class:"token function"},"install"),(0,e.Uk)(" the latest signatures from\n      http://www.cipherdyne.org/psad/signatures "),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("y/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  y\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Enable psad at boot "),(0,e.Wm)("span",{class:"token function"},"time"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("y"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)("/n"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("?  y\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" psad has been installed.\n")])]),(0,e.Wm)("div",{class:"highlight-lines"},[(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br")])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}><span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> psad alerts will be sent to:\n\n       root@localhost\n\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Would you like alerts sent to a different address <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>[</span>y<span class="token punctuation"${t}>]</span>/n<span class="token punctuation"${t}>)</span>?  n\n\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> By default, psad parses all iptables log messages <span class="token keyword"${t}>for</span> scan activity.\n    However, psad can be configured to only parse those iptables messages\n    that match particular strings <span class="token punctuation"${t}>(</span>that are specified <span class="token keyword"${t}>in</span> your iptables\n    ruleset with the --log-prefix option<span class="token punctuation"${t}>)</span>.\n\n    Would you like psad to only parse specific strings <span class="token keyword"${t}>in</span> iptables\n    messages <span class="token punctuation"${t}>(</span>y/<span class="token punctuation"${t}>[</span>n<span class="token punctuation"${t}>]</span><span class="token punctuation"${t}>)</span>?  n\n\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> By default, psad matches Snort rules against any IP addresses, but\n    psad offers the ability to restrict signature matches to specific\n    networks with the HOME_NET variable <span class="token punctuation"${t}>(</span>similar to Snort<span class="token punctuation"${t}>)</span>.  However, psad\n    also offers the ability to acquire all <span class="token builtin class-name"${t}>local</span> subnets on the <span class="token builtin class-name"${t}>local</span> system\n    by parsing the output of <span class="token string"${t}>&quot;ifconfig&quot;</span>, or the subnets can be restricted\n    to a limited <span class="token builtin class-name"${t}>set</span> of networks.\n\n    First, is it ok to leave the HOME_NET setting as <span class="token string"${t}>&quot;any&quot;</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>[</span>y<span class="token punctuation"${t}>]</span>/n<span class="token punctuation"${t}>)</span>?  y\n\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> psad has the capability of sending scan data via email alerts to the\n    DShield distributed intrusion detection system <span class="token punctuation"${t}>(</span>www.dshield.org<span class="token punctuation"${t}>)</span>.  By\n    default this feature is not enabled since firewall log data is sensitive,\n    but submitting logs to DShield provides a valuable <span class="token function"${t}>service</span> and assists\n    <span class="token keyword"${t}>in</span> generally enhancing internet security.  As an optional step, <span class="token keyword"${t}>if</span> you\n    have a DShield user <span class="token function"${t}>id</span> you can edit the <span class="token string"${t}>&quot;DSHIELD_USER_ID&quot;</span> variable\n    <span class="token keyword"${t}>in</span> /etc/psad/psad.conf\n\n    Would you like to <span class="token builtin class-name"${t}>enable</span> DShield alerts <span class="token punctuation"${t}>(</span>y/<span class="token punctuation"${t}>[</span>n<span class="token punctuation"${t}>]</span><span class="token punctuation"${t}>)</span>?  n\n\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Setting <span class="token function"${t}>hostname</span> to <span class="token string"${t}>&quot;client@ubuntu&quot;</span> <span class="token keyword"${t}>in</span> /etc/psad/psad.conf\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> The latest psad signatures can be installed with <span class="token string"${t}>&quot;psad --sig-update&quot;</span>\n    or installed now with install.pl.\n\n    If you decide to answer <span class="token string"${t}>&#39;y&#39;</span> to the next question, install.pl\n    will require DNS and network access now.\n\n    Would you like to <span class="token function"${t}>install</span> the latest signatures from\n      http://www.cipherdyne.org/psad/signatures <span class="token punctuation"${t}>(</span>y/n<span class="token punctuation"${t}>)</span>?  y\n\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Enable psad at boot <span class="token function"${t}>time</span> <span class="token punctuation"${t}>(</span><span class="token punctuation"${t}>[</span>y<span class="token punctuation"${t}>]</span>/n<span class="token punctuation"${t}>)</span>?  y\n\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> psad has been installed.\n</code></pre><div class="highlight-lines"${t}><br${t}><br${t}><br${t}><br${t}><div class="highlight-line"${t}> </div><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><div class="highlight-line"${t}> </div><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><div class="highlight-line"${t}> </div><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><div class="highlight-line"${t}> </div><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><div class="highlight-line"${t}> </div><br${t}><div class="highlight-line"${t}> </div><br${t}><br${t}></div></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre></div>`)})),_:1},a,l))})),_:1},a)),s('<h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>The email address will be left as default (root@localhost;) as in this tutorial we&#39;ll use OSSEC to manage the alerts.</p>'),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"nano"),(0,e.Uk)(" /etc/psad/psad.conf\n\n"),(0,e.Wm)("span",{class:"token comment"},"### Machine hostname"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token environment constant"},"HOSTNAME"),(0,e.Uk)(" server@ubuntu"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token comment"},"### Specify the home and external networks.  Note that by default the"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### ENABLE_INTF_LOCAL_NETS is enabled, so psad automatically detects"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### all of the directly connected subnets and uses this information as"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### the HOME_NET variable."),(0,e.Uk)("\nHOME_NET                    "),(0,e.Wm)("span",{class:"token number"},"192.168"),(0,e.Uk)(".0.0/24"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nEXTERNAL_NET                any"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nIPT_SYSLOG_FILE             /var/log/syslog"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nEXPECT_TCP_OPTIONS\t\t    Y"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nEMAIL_ALERT_DANGER_LEVEL\t"),(0,e.Wm)("span",{class:"token number"},"3"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token comment"},"### Allow reporting methods to be enabled/restricted.  This keyword can"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### accept values of "nosyslog" (don\'t write any messages to syslog),'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### "noemail" (don\'t send any email messages), or "ALL" (to generate both'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### syslog and email messages).  "ALL" is the default.  Both "nosyslog"'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### and "noemail" can be combined with a comma to disable all logging'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### and alerting."),(0,e.Uk)("\nALERTING_METHODS            noemail"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"highlight-lines"},[(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"9"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"10"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"11"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"12"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"13"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"14"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"15"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"16"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"17"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"18"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"19"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"20"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"21"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"22"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"23"),(0,e.Wm)("br")])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"nano"),(0,e.Uk)(" /etc/psad/psad.conf\n\n"),(0,e.Wm)("span",{class:"token comment"},"### Machine hostname"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token environment constant"},"HOSTNAME"),(0,e.Uk)(" server@ubuntu"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token comment"},"### Specify the home and external networks.  Note that by default the"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### ENABLE_INTF_LOCAL_NETS is enabled, so psad automatically detects"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### all of the directly connected subnets and uses this information as"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### the HOME_NET variable."),(0,e.Uk)("\nHOME_NET                    "),(0,e.Wm)("span",{class:"token number"},"192.168"),(0,e.Uk)(".0.0/24"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nEXTERNAL_NET                any"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nIPT_SYSLOG_FILE             /var/log/syslog"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nEXPECT_TCP_OPTIONS\t\t    Y"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nEMAIL_ALERT_DANGER_LEVEL\t"),(0,e.Wm)("span",{class:"token number"},"3"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token comment"},"### Allow reporting methods to be enabled/restricted.  This keyword can"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### accept values of "nosyslog" (don\'t write any messages to syslog),'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### "noemail" (don\'t send any email messages), or "ALL" (to generate both'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### syslog and email messages).  "ALL" is the default.  Both "nosyslog"'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},'### and "noemail" can be combined with a comma to disable all logging'),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"### and alerting."),(0,e.Uk)("\nALERTING_METHODS            noemail"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"highlight-lines"},[(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"9"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"10"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"11"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"12"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"13"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"14"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"15"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"16"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"17"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"18"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"19"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"20"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"21"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"22"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"23"),(0,e.Wm)("br")])])];s(`<div class="language-bash ext-sh line-numbers-mode"${t}><pre class="language-bash"${t}><code${t}>$ <span class="token function"${t}>sudo</span> <span class="token function"${t}>nano</span> /etc/psad/psad.conf\n\n<span class="token comment"${t}>### Machine hostname</span>\n<span class="token environment constant"${t}>HOSTNAME</span> server@ubuntu<span class="token punctuation"${t}>;</span>\n\n<span class="token comment"${t}>### Specify the home and external networks.  Note that by default the</span>\n<span class="token comment"${t}>### ENABLE_INTF_LOCAL_NETS is enabled, so psad automatically detects</span>\n<span class="token comment"${t}>### all of the directly connected subnets and uses this information as</span>\n<span class="token comment"${t}>### the HOME_NET variable.</span>\nHOME_NET                    <span class="token number"${t}>192.168</span>.0.0/24<span class="token punctuation"${t}>;</span>\nEXTERNAL_NET                any<span class="token punctuation"${t}>;</span>\n\nIPT_SYSLOG_FILE             /var/log/syslog<span class="token punctuation"${t}>;</span>\nEXPECT_TCP_OPTIONS\t\t    Y<span class="token punctuation"${t}>;</span>\nEMAIL_ALERT_DANGER_LEVEL\t<span class="token number"${t}>3</span><span class="token punctuation"${t}>;</span>\n\n<span class="token comment"${t}>### Allow reporting methods to be enabled/restricted.  This keyword can</span>\n<span class="token comment"${t}>### accept values of &quot;nosyslog&quot; (don&#39;t write any messages to syslog),</span>\n<span class="token comment"${t}>### &quot;noemail&quot; (don&#39;t send any email messages), or &quot;ALL&quot; (to generate both</span>\n<span class="token comment"${t}>### syslog and email messages).  &quot;ALL&quot; is the default.  Both &quot;nosyslog&quot;</span>\n<span class="token comment"${t}>### and &quot;noemail&quot; can be combined with a comma to disable all logging</span>\n<span class="token comment"${t}>### and alerting.</span>\nALERTING_METHODS            noemail<span class="token punctuation"${t}>;</span>\n</code></pre><div class="highlight-lines"${t}><br${t}><br${t}><br${t}><div class="highlight-line"${t}> </div><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}><br${t}></div><div class="line-numbers"${t}><span class="line-number"${t}>1</span><br${t}><span class="line-number"${t}>2</span><br${t}><span class="line-number"${t}>3</span><br${t}><span class="line-number"${t}>4</span><br${t}><span class="line-number"${t}>5</span><br${t}><span class="line-number"${t}>6</span><br${t}><span class="line-number"${t}>7</span><br${t}><span class="line-number"${t}>8</span><br${t}><span class="line-number"${t}>9</span><br${t}><span class="line-number"${t}>10</span><br${t}><span class="line-number"${t}>11</span><br${t}><span class="line-number"${t}>12</span><br${t}><span class="line-number"${t}>13</span><br${t}><span class="line-number"${t}>14</span><br${t}><span class="line-number"${t}>15</span><br${t}><span class="line-number"${t}>16</span><br${t}><span class="line-number"${t}>17</span><br${t}><span class="line-number"${t}>18</span><br${t}><span class="line-number"${t}>19</span><br${t}><span class="line-number"${t}>20</span><br${t}><span class="line-number"${t}>21</span><br${t}><span class="line-number"${t}>22</span><br${t}><span class="line-number"${t}>23</span><br${t}></div></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])])];s(`<div class="language-bash ext-sh line-numbers-mode"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre><div class="line-numbers"${t}><span class="line-number"${t}>1</span><br${t}></div></div>`)})),_:1},a,l))})),_:1},a)),s("<p>To check the status of PSAD execute the following command.</p>"),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" psad -S\n")])])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" psad -S\n")])])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@ubuntu:~$ <span class="token function"${t}>sudo</span> psad -S\n</code></pre></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre></div>`)})),_:1},a,l))})),_:1},a)),s('<h3 id="enable-psad-rules-in-ossec" tabindex="-1"><a class="header-anchor" href="#enable-psad-rules-in-ossec" aria-hidden="true">#</a> Enable PSAD rules in OSSEC</h3><p>To enable OSSEC to decode and respond to PSAD rules being triggered follow the instructions found <a href="">here</a>.</p><h2 id="firewall-settings" tabindex="-1"><a class="header-anchor" href="#firewall-settings" aria-hidden="true">#</a> Firewall settings</h2><p>The firewall being used is UFW (Uncomplicated Firewall). It is set by default to deny incoming traffic, allow outgoing traffic and allow port 22 (OpenSSH). Read more about UFW <a href="https://help.ubuntu.com/community/UFW" target="_blank" rel="noopener noreferrer">here'),s((0,t.FG)(i,null,null,a)),s('</a>.</p><details class="custom-container details"><summary>UFW Settings</summary><div class="language-console ext-console line-numbers-mode"><pre class="language-console"><code>server@ubuntu:~$ sudo ufw default deny incoming\nserver@ubuntu:~$ sudo ufw default allow outgoing\nserver@ubuntu:~$ sudo ufw allow 22\nserver@ubuntu:~$ sudo ufw enable\nCommand may disrupt existing ssh connections. Proceed with operation (y|n)? y\nFirewall is active and enabled on system startup\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></details><p>First enable logging using the built-in UFW command below.</p>'),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" ufw logging on\nLogging enabled\n")])])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" ufw logging on\nLogging enabled\n")])])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@ubuntu:~$ <span class="token function"${t}>sudo</span> ufw logging on\nLogging enabled\n</code></pre></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre></div>`)})),_:1},a,l))})),_:1},a)),s("<p>Once logging been enabled you&#39;ll also need to alter the UFW rules. Edit both configuration files (before.rules and before6.rules) and add the following before the COMMIT line.</p>"),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"nano"),(0,e.Uk)(" /etc/ufw/before.rules\nserver@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"nano"),(0,e.Uk)(" /etc/ufw/before6.rules\n")])])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"nano"),(0,e.Uk)(" /etc/ufw/before.rules\nserver@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token function"},"nano"),(0,e.Uk)(" /etc/ufw/before6.rules\n")])])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@ubuntu:~$ <span class="token function"${t}>sudo</span> <span class="token function"${t}>nano</span> /etc/ufw/before.rules\nserver@ubuntu:~$ <span class="token function"${t}>sudo</span> <span class="token function"${t}>nano</span> /etc/ufw/before6.rules\n</code></pre></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre></div>`)})),_:1},a,l))})),_:1},a)),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token comment"},"# custom psad logging directives"),(0,e.Uk)("\n-A INPUT -j LOG\n-A FORWARD -j LOG\n\n"),(0,e.Wm)("span",{class:"token comment"},'# do not delete the "COMMIT" line or these rules wont be processed'),(0,e.Uk)("\nCOMMIT\n")])]),(0,e.Wm)("div",{class:"highlight-lines"},[(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br")])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token comment"},"# custom psad logging directives"),(0,e.Uk)("\n-A INPUT -j LOG\n-A FORWARD -j LOG\n\n"),(0,e.Wm)("span",{class:"token comment"},'# do not delete the "COMMIT" line or these rules wont be processed'),(0,e.Uk)("\nCOMMIT\n")])]),(0,e.Wm)("div",{class:"highlight-lines"},[(0,e.Wm)("br"),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("div",{class:"highlight-line"}," "),(0,e.Wm)("br"),(0,e.Wm)("br"),(0,e.Wm)("br")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br")])])];s(`<div class="language-bash ext-sh line-numbers-mode"${t}><pre class="language-bash"${t}><code${t}><span class="token comment"${t}># custom psad logging directives</span>\n-A INPUT -j LOG\n-A FORWARD -j LOG\n\n<span class="token comment"${t}># do not delete the &quot;COMMIT&quot; line or these rules wont be processed</span>\nCOMMIT\n</code></pre><div class="highlight-lines"${t}><br${t}><div class="highlight-line"${t}> </div><div class="highlight-line"${t}> </div><br${t}><br${t}><br${t}></div><div class="line-numbers"${t}><span class="line-number"${t}>1</span><br${t}><span class="line-number"${t}>2</span><br${t}><span class="line-number"${t}>3</span><br${t}><span class="line-number"${t}>4</span><br${t}><span class="line-number"${t}>5</span><br${t}><span class="line-number"${t}>6</span><br${t}></div></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])])];s(`<div class="language-bash ext-sh line-numbers-mode"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre><div class="line-numbers"${t}><span class="line-number"${t}>1</span><br${t}></div></div>`)})),_:1},a,l))})),_:1},a)),s("<p>Next reload UFW and proceed to check psad with the built-in firewall analyze tool.</p>"),s((0,t.FG)(c,null,{default:(0,e.w5)(((n,s,a,l)=>{if(!s)return[(0,e.Wm)(u,{title:"Ubuntu"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" ufw reload\nserver@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" psad --fw-analyze\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Parsing INPUT chain rules.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Parsing INPUT chain rules.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Firewall config looks good.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Completed check of firewall ruleset.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Results "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" /var/log/psad/fw_check\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Exiting.\n")])])])])),_:1}),(0,e.Wm)(u,{title:"Rocky"},{default:(0,e.w5)((()=>[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])])),_:1})];s((0,t.FG)(u,{title:"Ubuntu"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,[(0,e.Uk)("server@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" ufw reload\nserver@ubuntu:~$ "),(0,e.Wm)("span",{class:"token function"},"sudo"),(0,e.Uk)(" psad --fw-analyze\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Parsing INPUT chain rules.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Parsing INPUT chain rules.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Firewall config looks good.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Completed check of firewall ruleset.\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Results "),(0,e.Wm)("span",{class:"token keyword"},"in"),(0,e.Uk)(" /var/log/psad/fw_check\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("+"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(" Exiting.\n")])])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@ubuntu:~$ <span class="token function"${t}>sudo</span> ufw reload\nserver@ubuntu:~$ <span class="token function"${t}>sudo</span> psad --fw-analyze\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Parsing INPUT chain rules.\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Parsing INPUT chain rules.\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Firewall config looks good.\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Completed check of firewall ruleset.\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Results <span class="token keyword"${t}>in</span> /var/log/psad/fw_check\n<span class="token punctuation"${t}>[</span>+<span class="token punctuation"${t}>]</span> Exiting.\n</code></pre></div>`)})),_:1},a,l)),s((0,t.FG)(u,{title:"Rocky"},{default:(0,e.w5)(((n,s,a,t)=>{if(!s)return[(0,e.Wm)("div",{class:"language-bash ext-sh"},[(0,e.Wm)("pre",{class:"language-bash"},[(0,e.Wm)("code",null,"server@rocky:~$\n")])])];s(`<div class="language-bash ext-sh"${t}><pre class="language-bash"${t}><code${t}>server@rocky:~$\n</code></pre></div>`)})),_:1},a,l))})),_:1},a)),s('<h2 id="command-line" tabindex="-1"><a class="header-anchor" href="#command-line" aria-hidden="true">#</a> Command-line</h2><table><thead><tr><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>psad -R</td><td>Restart psad</td></tr><tr><td>psad -S</td><td>psad status</td></tr><tr><td>psad --fw-analyze</td><td>Analyze the local iptables ruleset</td></tr><tr><td>psad --sig-update</td><td>Download the latest set of psad signatures</td></tr><tr><td>psad -H</td><td>Send all psad daemons a HUP signal to have them re-import configs</td></tr></tbody></table>\x3c!--]--\x3e')}]])}}]);