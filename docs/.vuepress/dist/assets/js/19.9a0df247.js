(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{398:function(e,t,a){"use strict";a.r(t);var s=a(12),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"privacyidea-authentication-server-w-freeradius"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#privacyidea-authentication-server-w-freeradius"}},[e._v("#")]),e._v(" privacyIDEA Authentication Server w/ FreeRADIUS "),a("Badge",{attrs:{text:"In development",type:"warning"}})],1),e._v(" "),a("TagLinks"),e._v(" "),a("p",[e._v("privacyIDEA is a modular authentication server that can be used to enhance the security of your existing applications like local login, VPN, remote access, SSH connections, access to web sites or web portals with two factor authentication.HEN")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.privacyidea.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("privacyIDEA website"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://github.com/privacyidea/privacyidea",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),a("OutboundLink")],1),a("br"),e._v(" "),a("a",{attrs:{href:"https://freeradius.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("FreeRADIUS website"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://github.com/FreeRADIUS",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Setup and configuration has been tested on the following operating systems:")]),e._v(" "),a("ul",[a("li",[e._v("Ubuntu 18.04")]),e._v(" "),a("li",[e._v("PrivacyIDEA 3.0+, FreeRADIUS 3.0.20")])]),e._v(" "),a("h2",{attrs:{id:"configuration-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-files"}},[e._v("#")]),e._v(" Configuration files")]),e._v(" "),a("h2",{attrs:{id:"install-community-edition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-community-edition"}},[e._v("#")]),e._v(" Install community edition "),a("Badge",{attrs:{text:"Rev 1",type:"default"}})],1),e._v(" "),a("p",[e._v("First download the signed key.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ wget https://lancelot.netknights.it/NetKnights-Release.asc\n")])])]),a("p",[e._v("Next import the signed key.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo gpg --import --import-options show-only --with-fingerprint NetKnights-Release.asc\npub rsa4096 2017-05-16  NetKnights GmbH <release@netknights.it>\nKey fingerprint = 0940 4ABB EDB3 586D EDE4  AD22 00F7 0D62 AE25 0082\n")])])]),a("p",[e._v("Continue by adding the key to our system.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo apt-key add NetKnights-Release.asc\nOK\n")])])]),a("p",[e._v("Now we need to add the repository for the specific release (in this case 18.04).")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo add-apt-repository http://lancelot.netknights.it/community/bionic/stable\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("INFO")]),e._v(" "),a("p",[e._v("If you prefer to use the Apache version you can install "),a("code",[e._v("apt-get privacyidea-apache2")])])]),e._v(" "),a("p",[e._v("Once we update the repository we can install PrivacyIDEA.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo apt-get update\nserver@ubuntu:~$ sudo apt-get install privacyidea-nginx\n             _                    _______  _______\n   ___  ____(_)  _____ _______ __/  _/ _ \\/ __/ _ |\n  / _ \\/ __/ / |/ / _ `/ __/ // // // // / _// __ |\n / .__/_/ /_/|___/\\_,_/\\__/\\_, /___/____/___/_/ |_|\n/_/                       /___/\n\nRunning online\n")])])]),a("h3",{attrs:{id:"administrator-account"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#administrator-account"}},[e._v("#")]),e._v(" Administrator account")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo pi-manage admin add admin -e admin@localhost\nAdmin admin was registered successfully.\n")])])]),a("p",[e._v("Once you've added the administrator account and followed the "),a("a",{attrs:{href:"#firewall-settings"}},[e._v("firewall settings")]),e._v(" you should be able to reach the web interface from "),a("code",[e._v("https://192.168.0.1")]),e._v(" and login as the admin user with your password.")]),e._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:"/img/privacyidea/privacyidea_login.png",alt:"PrivacyIDEA login"}}),e._v(" "),a("h2",{attrs:{id:"install-freeradius"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-freeradius"}},[e._v("#")]),e._v(" Install FreeRADIUS")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo apt-get install freeradius\n")])])]),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ freeradius -v\nradiusd: FreeRADIUS Version 3.0.20, for host x86_64-pc-linux-gnu, built on Jan 25 2020 at 06:11:13\nFreeRADIUS Version 3.0.20\nCopyright (C) 1999-2019 The FreeRADIUS server project and contributors\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE\nYou may redistribute copies of FreeRADIUS under the terms of the\nGNU General Public License\nFor more information about these matters, see the file named COPYRIGHT\n")])])]),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo freeradius -CX\nConfiguration appears to be OK\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo -i\nroot@ubuntu:~$ cd /etc/freeradius/3.0/\n")])])]),a("p",[e._v("Next, we need to make sure that $INCLUDE clients.conf appears in the configuration file. You can put it on any non-commented line in the config file. The clients.conf file basically holds the list of all the services that will allow this server to authenticate the users.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("root@ubuntu:~$ nano radiusd.conf\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# CLIENTS CONFIGURATION")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#  Client configuration is defined in "clients.conf".')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  The 'clients.conf' file contains all of the information from the old")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  'clients' and 'naslist' configuration files.  We recommend that you")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  do NOT use 'client's or 'naslist', although they are still")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  supported.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  Anything listed in 'clients.conf' will take precedence over the")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  information from the old-style configuration files.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$INCLUDE")]),e._v(" clients.conf\n")])])]),a("p",[e._v("The next step is to add the clients (the devices that will use this RADIUS server to authenticate users):")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("INFO")]),e._v(" "),a("p",[e._v("In this example we will create the client for GVM (OpenVAS). To enable Radius for GVM read here.")])]),e._v(" "),a("p",[e._v("root@ubuntu:~$ nano clients.conf")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  The transport protocol.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#  If unspecified, defaults to "udp", which is the traditional')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#  RADIUS transport.  It may also be "tcp", in which case the')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  server will accept connections from this client ONLY over TCP.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\nproto "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" *\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#  The shared secret use to "encrypt" and "sign" packets between')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  the NAS and FreeRADIUS.  You MUST change this secret from the")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  default, otherwise it's not a secret any more!")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  The secret can be any string, up to 8k characters in length.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  Control codes can be entered vi octal encoding,")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#       e.g. "\\101\\102" == "AB"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  Quotation marks can be entered by escaping them,")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#       e.g. "foo\\"bar"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  A note on security:  The security of the RADIUS protocol")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  depends COMPLETELY on this secret!  We recommend using a")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  shared secret that is composed of:")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       upper case letters")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       lower case letters")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       numbers")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  And is at LEAST 8 characters long, preferably 16 characters in")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  length.  The secret MUST be random, and should not be words,")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  phrase, or anything else that is recognisable.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  The default secret below is only for testing, and should")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  not be used in any real environment.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\nsecret "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" SECRET\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#client private-network-2 {")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       ipaddr          = 198.51.100.0/24")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       secret          = testing123-2")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#}")]),e._v("\n\nclient GVM "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\nipaddr "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".0.2\nsecret "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" SECRET\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Now that we are done with that part, we will start adding users. We do that by editing the users file:")]),e._v(" "),a("p",[e._v("root@ubuntu:~$ nano users")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Default for SLIP: dynamic IP address, SLIP mode.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\nDEFAULT Hint "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"SLIP"')]),e._v("\n        Framed-Protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" SLIP\n\nlibellux Cleartext-Password :"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" PASSWORD\n")])])]),a("p",[e._v("admin is the username followed by the type of password we want and the password itself.")]),e._v(" "),a("p",[e._v("Once that is done, we start the FreeRADIUS server using the command below:")]),e._v(" "),a("p",[e._v("root@ubuntu:~$ exit\nserver@ubuntu:~$ sudo freeradius -CX")]),e._v(" "),a("p",[e._v("server@ubuntu:~$ sudo systemctl restart freeradius.service")]),e._v(" "),a("h2",{attrs:{id:"install-privacyidea-freeradius-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-privacyidea-freeradius-plugin"}},[e._v("#")]),e._v(" Install PrivacyIDEA FreeRADIUS plugin")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo apt-get install privacyidea-radius\n")])])]),a("h3",{attrs:{id:"create-first-realm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-first-realm"}},[e._v("#")]),e._v(" Create first realm")]),e._v(" "),a("h2",{attrs:{id:"firewall-settings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#firewall-settings"}},[e._v("#")]),e._v(" Firewall settings")]),e._v(" "),a("p",[e._v("The firewall being used is UFW (Uncomplicated Firewall). It is set by default to deny incoming traffic, allow outgoing traffic and allow port 22 (OpenSSH). Read more about UFW "),a("a",{attrs:{href:"https://help.ubuntu.com/community/UFW",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[e._v("UFW Settings")]),e._v(" "),a("div",{staticClass:"language-console extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("server@ubuntu:~$ sudo ufw default deny incoming\nserver@ubuntu:~$ sudo ufw default allow outgoing\nserver@ubuntu:~$ sudo ufw allow 22\nserver@ubuntu:~$ sudo ufw enable\nCommand may disrupt existing ssh connections. Proceed with operation (y|n)? y\nFirewall is active and enabled on system startup\n")])])])]),e._v(" "),a("div",{staticClass:"language-console extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('server@ubuntu:~$ sudo ufw allow 443 comment "PrivacyIDEA"\n')])])]),a("h2",{attrs:{id:"recommended-reading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recommended-reading"}},[e._v("#")]),e._v(" Recommended reading "),a("Badge",{attrs:{text:"affiliate links",type:"warning"}})],1),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://amzn.to/3aXFTP4",target:"_blank",rel:"noopener noreferrer"}},[e._v("FreeRADIUS Beginner's Guide, van der Walt Dirk"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"enterprise-solutions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enterprise-solutions"}},[e._v("#")]),e._v(" Enterprise solutions "),a("Badge",{attrs:{text:"non-sponsored",type:"default"}})],1),e._v(" "),a("h3",{attrs:{id:"privacyidea-enterprise-edition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#privacyidea-enterprise-edition"}},[e._v("#")]),e._v(" privacyIDEA Enterprise Edition")]),e._v(" "),a("p",[e._v("privacyIDEA is a modular solution for two factor authentication especially with OTP tokens. It is multi-tenency- and multi-instance-capable. Due to the modular structure privacyIDEA can be quickly and easily adapted and enhanced. E.g. adding new token types is as simple as writing a new lean python module. You do not need to modify your network for privacyIDEA, it does not write to existing databases or user stores. It only needs read access to your user stores like LDAP, Active Directory, SQL, SCIM-service or flat files. Existing workflows can be enhanced without the need to modify them. Using its simple REST like API it can be automated and smoothly be integrated.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://netknights.it/en/produkte/privacyidea/",target:"_blank",rel:"noopener noreferrer"}},[e._v("NetKnights"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"networkradius"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#networkradius"}},[e._v("#")]),e._v(" NetworkRADIUS")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://networkradius.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("NetworkRADIUS"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://ko-fi.com/B0B31BJU3",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://www.ko-fi.com/img/githubbutton_sm.svg",alt:"ko-fi"}}),a("OutboundLink")],1)]),e._v(" "),a("social-share")],1)}),[],!1,null,null,null);t.default=r.exports}}]);